{"version":3,"sources":["modules/Settings/components/SettingsButtons.module.css","modules/components/EvalPlayersChart.module.css","modules/components/Category.module.css","modules/Settings/components/CheckboxGroup.module.css","api/restApi.js","modules/components/InputButtons.module.css","modules/Home/HomePage.module.css","utils/wasm_exec.js","engine/persist.js","modules/Settings/SettingsSchema.js","utils/cards.js","utils/hand.js","modules/Home/HomeSchema.js","modules/App/AppSchema.js","modules/Menu/MenuTabs.js","modules/App/AppInit.js","engine/index.js","utils/mergeDeep.js","utils/isMobileDevice.js","modules/components/Card.js","modules/App/components/Banner.js","utils/splice.js","calc/card.js","calc/hand.js","calc/handRank.js","calc/hsb.js","calc/basicHandCalculator.js","calc/handCombos.js","calc/sfc32.js","calc/deck.js","calc/handEvaluator.js","calc/lokiHandCalculator.js","api/localjsApi.js","api/workerApi.js","api/jsApi.js","api/gojsApi.js","api/wasmApi.js","api/poserApi.js","api/poserWorkersApi.js","modules/Home/HomeContainer.js","modules/components/Hand.js","modules/components/Category.js","modules/components/EvalResult.js","modules/components/EvalCatsChart.js","modules/components/EvalCatsTable.js","modules/components/EvalPlayersChart.js","modules/components/EvalPlayersTable.js","modules/components/CombosTable.js","modules/Settings/components/PlayersSetting.js","modules/components/InputButtons.js","modules/components/CardsEntry.js","modules/components/SparseCardsEntry.js","modules/Home/HomePage.js","modules/Settings/components/ApiType.js","modules/Settings/components/CalcType.js","modules/Settings/SettingsContainer.js","modules/Settings/components/ApiSetting.js","modules/Settings/components/ServerUrlSetting.js","modules/Settings/components/JwtSecretSetting.js","modules/Settings/components/ThreadsOptions.js","modules/Settings/components/ThreadsSetting.js","modules/Settings/components/CalcSetting.js","modules/Settings/components/WorkersOptions.js","modules/Settings/components/WorkersSetting.js","modules/Settings/components/SimsOptions.js","modules/Settings/components/SimsSetting.js","modules/Settings/components/SettingsButtons.js","modules/Settings/components/CheckboxGroup.js","utils/getBrowserName.js","utils/getBrowserFeatures.js","modules/components/BrowserFeatures.js","modules/Settings/SettingsPage.js","modules/Credits/CreditsPage.js","modules/TimeMachine/TimeMachinePage.js","modules/TimeMachine/TimeMachineContainer.js","modules/TimeMachineControls/TimeMachineControls.js","modules/TimeMachineControls/TimeMachineControlsContainer.js","modules/Menu/Menu.js","modules/App/components/Icons.js","modules/App/AppPage.js","modules/App/AppContainer.js","serviceWorker.js","index.js","modules/components/Card.module.css"],"names":["module","exports","RestApi","secret","this","username","payload","user","options","algorithm","expiresIn","secretStr","Base64","decode","Buffer","from","Promise","resolve","reject","jwt","sign","err","token","url","getToken","authToken","fetch","method","headers","response","apiOptions","handStr","calcType","apiType","Error","server","status","statusText","json","nsims","players","toString","threads","global","window","process","title","outputBuf","fs","constants","O_WRONLY","O_RDWR","O_CREAT","O_TRUNC","O_APPEND","O_EXCL","writeSync","fd","buf","nl","decoder","lastIndexOf","console","log","substr","length","write","offset","position","callback","open","path","flags","mode","code","read","buffer","fsync","lastAppId","lastState","newAppId","newState","schema","type","persistent","initValue","apiServer","jwtSecret","nSims","workers","catsChart","catsTable","playersChart","playersTable","combosTable","denseKeyboard","playersButtons","devMode","latency","c_ranks","c_textRanks","c_suits","c_suitColors","c_symbols","circled","code2text","text","c_badClub","c_anyClub","c_badDeuce","rank","suit","Math","floor","text2code","card","c1","charAt","c2","chopHand","hand","n","arr","trim","toLowerCase","push","substring","List","isValidHand","list","nomore","i","size","c","get","settings","SettingsSchema","tanking","tankingMs","handEval","Map","handEvalPlayers","handResult","handCombos","handArr","props","recipe","handValid","handCardsCnt","getValidCardsCnt","currentSuit","AppSchema","args","fromJS","location","search","query","result","split","forEach","part","item","decodeURIComponent","getJsonFromUrl","selectedTabIndex","home","HomeSchema","MenuTabs","AppInit","engine","store","initState","urlArgs","getState","tab","confirm","dispatch","actionFactory","init","persist","history","replaceState","document","value","setInterval","liveState","persistableState","serializedState","JSON","stringify","localStorage","setItem","isObject","Array","isArray","mergeDeep","target","sources","source","shift","key","Object","assign","createEngine","reducer","repoReducer","createStore","head","persistedState","appId","getItem","parse","loadState","AppName","mergedState","toJS","refresh","makeStore","action","subscribe","state","saveState","isMobileDevice","orientation","navigator","userAgent","indexOf","imd","Card","code0","comp0","style","html","vertical","ball","grey","children","undefined","codeIsNormal","codeIsPlayers","includes","symbol","comp","String","fromCharCode","charCodeAt","icon","c_CARD_SIZE","code2html","code2symbol","color","code2color","cn","css","htmlBall","htmlSquareMobile","htmlSquare","square","click","className","name","alt","onClick","bind","handArr0","render0","Component","fontSize","padding","Banner","background","margin","height","splice","s","idx","rem","str","slice","abs","cardRankStr","cardSuitStr","MakeCard","MakeCardStr","GetCardStr","GetRankStr","GetSuitStr","GetCardRankStr","cardRank","Hand7Null","Hand7Bad","ranks","suits","MakeHand7","handRankMasks","handSuitMasks","StringToHand7","mask1","mask2","m","cardStr","bit","SetHand7Card","GetRank","GetSuit","GetHand7Rank","GetHand7Suit","GetHand7Card","GetHand7HoleStr","card1","card2","handRankCatsStr","handRankCategoriesStr","SetCategory","handRank","category","GetCategory","GetCategoryStr","GetCatStr","GetHandCategoryStr","GetHandCatStr","SetCardRank","GetCardRank","HandRankStr","hsb","getSlowHsb","GetHsb16","BasicHandCalculator","rankCnts","suitCnts","suitMasks","calcHandRank","cardsCnt","reset","m1","m2","m3","m4","m2cnt","m3cnt","ms","mf","msi","msc","c4","c3","Hand7Combos","handCalc","CalcHandRank","betterCombos","equalCombos","worseCombos","evalMap","SortedMap","handRes","hole","cat","count","set","mask0","h","hRank","hRes","toIndexedSeq","reverse","toArray","Sfc32","now","Date","a","random","b","d","seed","t","Deck","rng","setMask","next","getMask","MakeHandEvalRequest","board1","board2","board3","board4","board5","MakeHandEvalResult","handEvalRequest","request","games","wins","ties","pties","losses","wp","wo","er","HandEvalRequestSetHand","evalRequest","HandEvaluator","setTimeout","handCalculator","deck","sleep","mix","removeCard","getNextCard","playerHr","winnerHr","tieHands","hr","LokiHandCalculator","bh","loki","r","straight_size","ident","straight","flush","max_hand","group_size","POKER_HAND","paired","pair_rank0","pair_rank1","straight_high","suit_size","major_suit","getRank","getSuit","str_hi","FIVEKIND","high","present","ID_ExistsStraightFlush","STRAIGHTFLUSH","FOURKIND","ID_KickerValue","FULLHOUSE","FLUSH","kickers","pow","ID_KickerValueSuited","STRAIGHT","THREEKIND","TWOPAIR","PAIR","HIGH","rankHand_loki","hc","CardRankSize","cr0","cr1","cr2","cr3","cr4","hv","not_allowed0","not_allowed1","p","res","x","LocaljsApi","handEvaluator","handErr","holeStr","handCat","handCategory","MakeHandCalculator","combosResult","evalResult","eval","MakeHandEvalResp","handEvals","resp","WorkerApi","workerScriptUrl","id","promises","worker","Worker","onmessage","e","data","api","workerReq","postMessage","checkCalcType","_setup","post","MakeErrResp","JsApi","GojsApi","WasmApi","PoserApi","localjsApi","jsApi","gojsApi","restApi","wasmApi","apiInterface","getApiInterface","HandCalc","HandEval","HandEvalPlayers","startsWith","finalPlayers","RecalcHandEvalResp","AddHandEvalResp","Infinity","pot","poserApi","PoserWorkersApi","poserApis","portion","remain","hStr","index","hStr1","hStr2","endsWith","pi","hStrN","getHandStr","subEngine","af","se","saf","recalcPending","runHand","jstSecret","startTimeMs","handCalcResp","handEvalResult","OrderedMap","handEvalPlayersResp","handEvalResultN","playersN","endTimeMs","recalc","setHand","addCards","cards","origHand","selectionStart","selectionEnd","HomeContainer","connect","repo","ownProps","incPlayers","decPlayers","clear","del","newHand","addCard","addRandom","setCurrentSuit","suite","Hand","hand0","map","Cat2Color","Cat2Cn","Category","backgroundColor","EvalResult","isEmpty","parseFloat","toFixed","EvalPlayersChart","getIn","heroWpCats","heroLpCats","villainWpCats","villainLpCats","v","hlp","hwp","her","vlp","vwp","ver","chart","layout","width","stackOffset","top","right","left","bottom","stroke","strokeDasharray","dataKey","unit","yAxisId","stackId","fill","catFmt","field","pf","catTotal","total","EvalCatsTable","EvalCatsChart","colSpan","rowSpan","y","EvalPlayersTable","CombosTable","allCombos","comboItem","prc","cnt","evalHandRank","PlayersSetting","button","dec","inc","InputButtons","running","CardsEntry","SparseCardsEntry","playersStyle","lineHeight","HomePage","sticky","ApiType","label","CalcType","SettingsContainer","apiTypeLabel","calcTypeLabel","setApiType","setApiServer","setJwtSecret","setCalcType","setSims","setWorkers","setThreads","setCatsChart","checked","setCatsTable","setPlayersChart","setPlayersTable","setCombosTable","setDenseKeyboard","setPlayersButtons","setDevMode","setLatency","ApiSetting","handleChange","selectedOption","keys","onChange","ServerUrlSetting","changeApiServer","event","textAlign","maxLength","placeholder","JwtSecretSetting","changeJwtSecret","base64Secret","encode","changeShowSecret","showSecret","setState","ThreadsOptions","ThreadsSetting","customStyles","option","provided","control","singleValue","styles","CalcSetting","WorkersOptions","WorkersSetting","SimsOptions","SimsSetting","SettingsButtons","href","rel","CheckboxGroup","switch","playersChartChange","playersTableChange","catsChartChange","catsTableChange","combosTableChange","denseKeyboardChange","playersButtonsChange","devModeChange","latencyChange","getBrowserName","names","ua","j","k","hasAsync","Function","error","BrowserFeatures","browserFeatures","bf","language","platform","abortController","AbortController","webWorker","webAssembly","WebAssembly","isOutdatedBrowser","getBrowserFeatures","SettingsPage","CreditsPage","TimeMachinePage","showRepo","src","TimeMachineContainer","branch","currentBranchState","currentIndex","states","actions","prevState","printableState","TimeMachineControls","currentBranch","live","advanced","saveAs","nextProps","preventDefault","switchBranch","saveBranch","resetBranch","removeBranch","goForward","goBack","goLive","doShowRepo","branches","maxIndex","onSubmit","toggleLive","toggleAdvanced","toggleRepo","onChangeBranch","onGoBack","onGoForward","onSaveBranch","disabled","onReset","onRemove","min","max","step","onSliderChange","TimeMachineControlsContainer","keySeq","steps","setOption","action1","action2","HomeTab","SettingsTab","Menu","updateTabIndex","selectedTabClassName","selectedIndex","onSelect","library","add","faWifi","faHeart","farHeart","faHeartbeat","faExclamationTriangle","faThumbsUp","faHome","faTerminal","faChartLine","faTachometerAlt","faInfo","faMicrochip","faTrophy","faPlus","faMinus","faHandPaper","faCheck","faBackspace","faCalculator","faPercent","faSmile","faUser","faUserMinus","faUserPlus","faRandom","faSyncAlt","faToggleOn","faToggleOff","faTrashAlt","faFilter","faSearch","faSearchMinus","faSearchPlus","faArrowsAltH","faPlay","faStop","faEllipsisH","faRunning","faTh","faGripVertical","faGripHorizontal","faBug","faHistory","faCodeBranch","faGenderless","faTable","faListUl","faBookMedical","faPalette","faCog","faGolfBall","faBowlingBall","faTrashRestore","AppPage","AppContainer","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","getElementById","URL","origin","addEventListener","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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,EAAD,iBAAU8B,EAAV,CAAiB9B,KAAK,QACtB,kBAAC,EAAD,iBAAU8B,EAAV,CAAiB9B,KAAK,QACtB,kBAAC,EAAD,iBAAU8B,EAAV,CAAiB9B,KAAK,QACtB,kBAAC,EAAD,iBAAU8B,EAAV,CAAiB9B,KAAK,QACtB,kBAAC,EAAD,iBAAU8B,EAAV,CAAiB9B,KAAK,QACtB,kBAAC,EAAD,iBAAU8B,EAAV,CAAiB9B,KAAK,QACtB,kBAAC,EAAD,iBAAU8B,EAAV,CAAiB9B,KAAK,QACtB,kBAAC,EAAD,iBAAU8B,EAAV,CAAiB9B,KAAK,QACtB,kBAAC,EAAD,iBAAU8B,EAAV,CAAiB9B,KAAK,QACtB,kBAAC,EAAD,iBAAU8B,EAAV,CAAiB9B,KAAK,QACtB,kBAAC,EAAD,iBAAU8B,EAAV,CAAiB9B,KAAK,SAEtB,6BACA,kBAAC,EAAD,iBAAU8B,EAAV,CAAiB9B,KAAK,QACtB,kBAAC,EAAD,iBAAU8B,EAAV,CAAiB9B,KAAK,QACtB,kBAAC,EAAD,iBAAU8B,EAAV,CAAiB9B,KAAK,QACtB,kBAAC,EAAD,iBAAU8B,EAAV,CAAiB9B,KAAK,QACtB,kBAAC,EAAD,iBAAU8B,EAAV,CAAiB9B,KAAK,QACtB,kBAAC,EAAD,iBAAU8B,EAAV,CAAiB9B,KAAK,QACtB,kBAAC,EAAD,iBAAU8B,EAAV,CAAiB9B,KAAK,QACtB,kBAAC,EAAD,iBAAU8B,EAAV,CAAiB9B,KAAK,QACtB,kBAAC,EAAD,iBAAU8B,EAAV,CAAiB9B,KAAK,QACtB,kBAAC,EAAD,iBAAU8B,EAAV,CAAiB9B,KAAK,QACtB,kBAAC,EAAD,iBAAU8B,EAAV,CAAiB9B,KAAK,QACtB,kBAAC,EAAD,iBAAU8B,EAAV,CAAiB9B,KAAK,QACtB,kBAAC,EAAD,iBAAU8B,EAAV,CAAiB9B,KAAK,SAEtB,6BACA,kBAAC,EAAD,iBAAU8B,EAAV,CAAiB9B,KAAK,QACtB,kBAAC,EAAD,iBAAU8B,EAAV,CAAiB9B,KAAK,QACtB,kBAAC,EAAD,iBAAU8B,EAAV,CAAiB9B,KAAK,QACtB,kBAAC,EAAD,iBAAU8B,EAAV,CAAiB9B,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","file":"static/js/main.34e61dc3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SettingsButtons_button__2Xh6m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"EvalPlayersChart_chart__Gs8Wq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cat\":\"Category_cat__1OQqw\",\"err\":\"Category_err__3OT8i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"switch\":\"CheckboxGroup_switch__110xu\",\"right\":\"CheckboxGroup_right__PtWaV\"};","// @flow\n\nimport { Base64 } from 'js-base64'\nimport jwt from 'jsonwebtoken'\n\nimport type { CalcType, PoserApiInterface, ApiOptions, HandCalcResp, HandEvalResp, HandEvalPlayersResp } from \"./poserApi\"\n\nexport class RestApi implements PoserApiInterface {\n\n    secret: String\n\n    constructor(secret: string) {\n        this.secret = secret\n    }\n\n    async getToken(username: string): Promise<string> {\n        const payload = {\n            user: {username}\n        }\n\n        const options = {\n            algorithm: 'HS256',\n            expiresIn: '1h'\n        }\n\n        const secretStr = Base64.decode(this.secret)\n        const secret = Buffer.from(secretStr, 'utf8')\n        return new Promise<string>((resolve, reject) =>\n            jwt.sign(payload, secret, options, (err, token) => {\n                if(err) reject(err)\n                else resolve(token)\n            })\n        )\n    }\n\n    async fetch(url: string): Promise<Response> {\n        const authToken = await this.getToken(\"john\")\n        const response = await fetch(url, {\n            method: 'GET',\n            headers: {\n              'Authorization': 'Bearer ' + authToken\n            }\n        })\n\n        return response\n    }\n\n    async HandCalc(apiOptions: ApiOptions, handStr: string, calcType: CalcType): Promise<HandCalcResp> {\n        if(apiOptions.apiType !== \"rest\") {\n            throw new Error(\"invalid apiType in rest code: \"+apiOptions.apiType)\n        }\n        const url: string = apiOptions.server+'/v1/api/calc/'+handStr+\"?calc=\"+calcType\n        const response = await this.fetch(url)\n        if(response.status !== 200) {\n            throw new Error(response.statusText)\n        }\n        const json = await response.json()\n        return json\n    }\n\t\n    async HandEval(apiOptions: ApiOptions, nsims: number, players: number, handStr: string, calcType: CalcType): Promise<HandEvalResp> {\n        if(apiOptions.apiType !== \"rest\") {\n            throw new Error(\"invalid apiType in rest code: \"+apiOptions.apiType)\n        }\n        const url: string = apiOptions.server+'/v1/api/eval/'+handStr+\"?calc=\"+calcType+\"&nsims=\"+nsims.toString()+\"&players=\"+players.toString()+\"&threads=\"+apiOptions.threads.toString()\n        const response = await this.fetch(url)\n        if(response.status !== 200) {\n            throw new Error(response.statusText)\n        }\n        const json = await response.json()\n        return json\n    }\n\n    async HandEvalPlayers(apiOptions: ApiOptions, nsims: number, handStr: string, calcType: CalcType): Promise<HandEvalPlayersResp> {\n        if(apiOptions.apiType !== \"rest\") {\n            throw new Error(\"invalid apiType in rest code: \"+apiOptions.apiType)\n        }\n        const url: string = apiOptions.server+'/v1/api/eval/'+handStr+\"?calc=\"+calcType+\"&nsims=\"+nsims.toString()+\"&threads=\"+apiOptions.threads.toString()\n        const response = await this.fetch(url)\n        if(response.status !== 200) {\n            throw new Error(response.statusText)\n        }\n        const json = await response.json()\n        return json\n    }\n\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"running\":\"InputButtons_running__1j8FV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sticky\":\"HomePage_sticky__16BCT\"};","// Copyright 2018 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nif (typeof global !== \"undefined\") {\n\t// global already exists\n} else if (typeof window !== \"undefined\") {\n\twindow.global = window;\n// } else if (typeof self !== \"undefined\") {\n// \tself.global = self;\n} else {\n\tthrow new Error(\"cannot export Go (neither global, window nor self is defined)\");\n}\n\n// Map web browser API and Node.js API to a single common API (preferring web standards over Node.js API).\nconst isNodeJS = global.process && global.process.title === \"node\";\nif (isNodeJS) {\n\t// global.require = require;\n\t// global.fs = require(\"fs\");\n\n\t// const nodeCrypto = require(\"crypto\");\n\t// global.crypto = {\n\t// \tgetRandomValues(b) {\n\t// \t\tnodeCrypto.randomFillSync(b);\n\t// \t},\n\t// };\n\n\t// global.performance = {\n\t// \tnow() {\n\t// \t\tconst [sec, nsec] = process.hrtime();\n\t// \t\treturn sec * 1000 + nsec / 1000000;\n\t// \t},\n\t// };\n\n\t// const util = require(\"util\");\n\t// global.TextEncoder = util.TextEncoder;\n\t// global.TextDecoder = util.TextDecoder;\n} else {\n\tlet outputBuf = \"\";\n\tglobal.fs = {\n\t\tconstants: { O_WRONLY: -1, O_RDWR: -1, O_CREAT: -1, O_TRUNC: -1, O_APPEND: -1, O_EXCL: -1 }, // unused\n\t\twriteSync(fd, buf) {\n\t\t\toutputBuf += decoder.decode(buf);\n\t\t\tconst nl = outputBuf.lastIndexOf(\"\\n\");\n\t\t\tif (nl !== -1) {\n\t\t\t\tconsole.log(outputBuf.substr(0, nl));\n\t\t\t\toutputBuf = outputBuf.substr(nl + 1);\n\t\t\t}\n\t\t\treturn buf.length;\n\t\t},\n\t\twrite(fd, buf, offset, length, position, callback) {\n\t\t\tif (offset !== 0 || length !== buf.length || position !== null) {\n\t\t\t\tthrow new Error(\"not implemented\");\n\t\t\t}\n\t\t\tconst n = this.writeSync(fd, buf);\n\t\t\tcallback(null, n);\n\t\t},\n\t\topen(path, flags, mode, callback) {\n\t\t\tconst err = new Error(\"not implemented\");\n\t\t\terr.code = \"ENOSYS\";\n\t\t\tcallback(err);\n\t\t},\n\t\tread(fd, buffer, offset, length, position, callback) {\n\t\t\tconst err = new Error(\"not implemented\");\n\t\t\terr.code = \"ENOSYS\";\n\t\t\tcallback(err);\n\t\t},\n\t\tfsync(fd, callback) {\n\t\t\tcallback(null);\n\t\t},\n\t};\n}\n\nconst fs = global.fs\nlet encoder // = new TextEncoder(\"utf-8\");\nlet decoder // = new TextDecoder(\"utf-8\");\n\nexport class Go {\n\tconstructor() {\n\t\tif(!encoder) {\n\t\t\tencoder = new TextEncoder(\"utf-8\");\n\t\t}\n\t\tif(!decoder) {\n\t\t\tdecoder = new TextDecoder(\"utf-8\");\n\t\t}\n\n\t\tthis.argv = [\"js\"];\n\t\tthis.env = {};\n\t\tthis.exit = (code) => {\n\t\t\tif (code !== 0) {\n\t\t\t\tconsole.warn(\"exit code:\", code);\n\t\t\t}\n\t\t};\n\t\tthis._exitPromise = new Promise((resolve) => {\n\t\t\tthis._resolveExitPromise = resolve;\n\t\t});\n\t\tthis._pendingEvent = null;\n\t\tthis._scheduledTimeouts = new Map();\n\t\tthis._nextCallbackTimeoutID = 1;\n\t\tthis.importObject = this.createImportObject();\n\t}\n\n\tcreateImportObject() {\n\t\tconst mem = () => {\n\t\t\t// The buffer may change when requesting more memory.\n\t\t\treturn new DataView(this._inst.exports.mem.buffer);\n\t\t}\n\t\t\n\t\tconst setInt64 = (addr, v) => {\n\t\t\tmem().setUint32(addr + 0, v, true);\n\t\t\tmem().setUint32(addr + 4, Math.floor(v / 4294967296), true);\n\t\t}\n\t\t\n\t\tconst getInt64 = (addr) => {\n\t\t\tconst low = mem().getUint32(addr + 0, true);\n\t\t\tconst high = mem().getInt32(addr + 4, true);\n\t\t\treturn low + high * 4294967296;\n\t\t}\n\t\t\n\t\tconst loadValue = (addr) => {\n\t\t\tconst f = mem().getFloat64(addr, true);\n\t\t\tif (f === 0) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tif (!isNaN(f)) {\n\t\t\t\treturn f;\n\t\t\t}\n\t\t\n\t\t\tconst id = mem().getUint32(addr, true);\n\t\t\treturn this._values[id];\n\t\t}\n\t\t\n\t\tconst storeValue = (addr, v) => {\n\t\t\tconst nanHead = 0x7FF80000;\n\t\t\n\t\t\tif (typeof v === \"number\") {\n\t\t\t\tif (isNaN(v)) {\n\t\t\t\t\tmem().setUint32(addr + 4, nanHead, true);\n\t\t\t\t\tmem().setUint32(addr, 0, true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (v === 0) {\n\t\t\t\t\tmem().setUint32(addr + 4, nanHead, true);\n\t\t\t\t\tmem().setUint32(addr, 1, true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tmem().setFloat64(addr, v, true);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\n\t\t\tswitch (v) {\n\t\t\t\tcase undefined:\n\t\t\t\t\tmem().setFloat64(addr, 0, true);\n\t\t\t\t\treturn;\n\t\t\t\tcase null:\n\t\t\t\t\tmem().setUint32(addr + 4, nanHead, true);\n\t\t\t\t\tmem().setUint32(addr, 2, true);\n\t\t\t\t\treturn;\n\t\t\t\tcase true:\n\t\t\t\t\tmem().setUint32(addr + 4, nanHead, true);\n\t\t\t\t\tmem().setUint32(addr, 3, true);\n\t\t\t\t\treturn;\n\t\t\t\tcase false:\n\t\t\t\t\tmem().setUint32(addr + 4, nanHead, true);\n\t\t\t\t\tmem().setUint32(addr, 4, true);\n\t\t\t\t\treturn;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\n\t\t\tlet ref = this._refs.get(v);\n\t\t\tif (ref === undefined) {\n\t\t\t\tref = this._values.length;\n\t\t\t\tthis._values.push(v);\n\t\t\t\tthis._refs.set(v, ref);\n\t\t\t}\n\t\t\tlet typeFlag = 0;\n\t\t\tswitch (typeof v) {\n\t\t\t\tcase \"string\":\n\t\t\t\t\ttypeFlag = 1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"symbol\":\n\t\t\t\t\ttypeFlag = 2;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"function\":\n\t\t\t\t\ttypeFlag = 3;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmem().setUint32(addr + 4, nanHead | typeFlag, true);\n\t\t\tmem().setUint32(addr, ref, true);\n\t\t}\n\t\t\n\t\tconst loadSlice = (addr) => {\n\t\t\tconst array = getInt64(addr + 0);\n\t\t\tconst len = getInt64(addr + 8);\n\t\t\treturn new Uint8Array(this._inst.exports.mem.buffer, array, len);\n\t\t}\n\t\t\n\t\tconst loadSliceOfValues = (addr) => {\n\t\t\tconst array = getInt64(addr + 0);\n\t\t\tconst len = getInt64(addr + 8);\n\t\t\tconst a = new Array(len);\n\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\ta[i] = loadValue(array + i * 8);\n\t\t\t}\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\tconst loadString = (addr) => {\n\t\t\tconst saddr = getInt64(addr + 0);\n\t\t\tconst len = getInt64(addr + 8);\n\t\t\treturn decoder.decode(new DataView(this._inst.exports.mem.buffer, saddr, len));\n\t\t}\n\t\t\n\t\tconst timeOrigin = Date.now() - performance.now();\n\t\t\n\t\tconst goObject = {\n\t\t\t// Go's SP does not change as long as no Go code is running. Some operations (e.g. calls, getters and setters)\n\t\t\t// may synchronously trigger a Go event handler. This makes Go code get executed in the middle of the imported\n\t\t\t// function. A goroutine can switch to a new stack if the current stack is too small (see morestack function).\n\t\t\t// This changes the SP, thus we have to update the SP used by the imported function.\n\t\t\n\t\t\t// func wasmExit(code int32)\n\t\t\t\"runtime.wasmExit\": (sp) => {\n\t\t\t\tconst code = mem().getInt32(sp + 8, true);\n\t\t\t\tthis.exited = true;\n\t\t\t\tdelete this._inst;\n\t\t\t\tdelete this._values;\n\t\t\t\tdelete this._refs;\n\t\t\t\tthis.exit(code);\n\t\t\t},\n\t\t\n\t\t\t// func wasmWrite(fd uintptr, p unsafe.Pointer, n int32)\n\t\t\t\"runtime.wasmWrite\": (sp) => {\n\t\t\t\tconst fd = getInt64(sp + 8);\n\t\t\t\tconst p = getInt64(sp + 16);\n\t\t\t\tconst n = mem().getInt32(sp + 24, true);\n\t\t\t\tfs.writeSync(fd, new Uint8Array(this._inst.exports.mem.buffer, p, n));\n\t\t\t},\n\t\t\n\t\t\t// func nanotime() int64\n\t\t\t\"runtime.nanotime\": (sp) => {\n\t\t\t\tsetInt64(sp + 8, (timeOrigin + performance.now()) * 1000000);\n\t\t\t},\n\t\t\n\t\t\t// func walltime() (sec int64, nsec int32)\n\t\t\t\"runtime.walltime\": (sp) => {\n\t\t\t\tconst msec = Date.now();\n\t\t\t\tsetInt64(sp + 8, msec / 1000);\n\t\t\t\tmem().setInt32(sp + 16, (msec % 1000) * 1000000, true);\n\t\t\t},\n\t\t\n\t\t\t// func scheduleTimeoutEvent(delay int64) int32\n\t\t\t\"runtime.scheduleTimeoutEvent\": (sp) => {\n\t\t\t\tconst id = this._nextCallbackTimeoutID;\n\t\t\t\tthis._nextCallbackTimeoutID++;\n\t\t\t\tthis._scheduledTimeouts.set(id, setTimeout(\n\t\t\t\t\t() => { this._resume(); },\n\t\t\t\t\tgetInt64(sp + 8) + 1, // setTimeout has been seen to fire up to 1 millisecond early\n\t\t\t\t));\n\t\t\t\tmem().setInt32(sp + 16, id, true);\n\t\t\t},\n\t\t\n\t\t\t// func clearTimeoutEvent(id int32)\n\t\t\t\"runtime.clearTimeoutEvent\": (sp) => {\n\t\t\t\tconst id = mem().getInt32(sp + 8, true);\n\t\t\t\tclearTimeout(this._scheduledTimeouts.get(id));\n\t\t\t\tthis._scheduledTimeouts.delete(id);\n\t\t\t},\n\t\t\n\t\t\t// func getRandomData(r []byte)\n\t\t\t\"runtime.getRandomData\": (sp) => {\n\t\t\t\tcrypto.getRandomValues(loadSlice(sp + 8));\n\t\t\t},\n\t\t\n\t\t\t// func stringVal(value string) ref\n\t\t\t\"syscall/js.stringVal\": (sp) => {\n\t\t\t\tstoreValue(sp + 24, loadString(sp + 8));\n\t\t\t},\n\t\t\n\t\t\t// func valueGet(v ref, p string) ref\n\t\t\t\"syscall/js.valueGet\": (sp) => {\n\t\t\t\tconst obj = loadValue(sp + 8)\n\t\t\t\tconst key = loadString(sp + 16)\n\t\t\t\tconst result = Reflect.get(obj, key);\n\t\t\t\tsp = this._inst.exports.getsp(); // see comment above\n\t\t\t\tstoreValue(sp + 32, result);\n\t\t\t},\n\t\t\n\t\t\t// func valueSet(v ref, p string, x ref)\n\t\t\t\"syscall/js.valueSet\": (sp) => {\n\t\t\t\tReflect.set(loadValue(sp + 8), loadString(sp + 16), loadValue(sp + 32));\n\t\t\t},\n\t\t\n\t\t\t// func valueIndex(v ref, i int) ref\n\t\t\t\"syscall/js.valueIndex\": (sp) => {\n\t\t\t\tstoreValue(sp + 24, Reflect.get(loadValue(sp + 8), getInt64(sp + 16)));\n\t\t\t},\n\t\t\n\t\t\t// valueSetIndex(v ref, i int, x ref)\n\t\t\t\"syscall/js.valueSetIndex\": (sp) => {\n\t\t\t\tReflect.set(loadValue(sp + 8), getInt64(sp + 16), loadValue(sp + 24));\n\t\t\t},\n\t\t\n\t\t\t// func valueCall(v ref, m string, args []ref) (ref, bool)\n\t\t\t\"syscall/js.valueCall\": (sp) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\tconst m = Reflect.get(v, loadString(sp + 16));\n\t\t\t\t\tconst args = loadSliceOfValues(sp + 32);\n\t\t\t\t\tconst result = Reflect.apply(m, v, args);\n\t\t\t\t\tsp = this._inst.exports.getsp(); // see comment above\n\t\t\t\t\tstoreValue(sp + 56, result);\n\t\t\t\t\tmem().setUint8(sp + 64, 1);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tstoreValue(sp + 56, err);\n\t\t\t\t\tmem().setUint8(sp + 64, 0);\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t// func valueInvoke(v ref, args []ref) (ref, bool)\n\t\t\t\"syscall/js.valueInvoke\": (sp) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\tconst args = loadSliceOfValues(sp + 16);\n\t\t\t\t\tconst result = Reflect.apply(v, undefined, args);\n\t\t\t\t\tsp = this._inst.exports.getsp(); // see comment above\n\t\t\t\t\tstoreValue(sp + 40, result);\n\t\t\t\t\tmem().setUint8(sp + 48, 1);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tstoreValue(sp + 40, err);\n\t\t\t\t\tmem().setUint8(sp + 48, 0);\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t// func valueNew(v ref, args []ref) (ref, bool)\n\t\t\t\"syscall/js.valueNew\": (sp) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\tconst args = loadSliceOfValues(sp + 16);\n\t\t\t\t\tconst result = Reflect.construct(v, args);\n\t\t\t\t\tsp = this._inst.exports.getsp(); // see comment above\n\t\t\t\t\tstoreValue(sp + 40, result);\n\t\t\t\t\tmem().setUint8(sp + 48, 1);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tstoreValue(sp + 40, err);\n\t\t\t\t\tmem().setUint8(sp + 48, 0);\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t// func valueLength(v ref) int\n\t\t\t\"syscall/js.valueLength\": (sp) => {\n\t\t\t\tsetInt64(sp + 16, parseInt(loadValue(sp + 8).length));\n\t\t\t},\n\t\t\n\t\t\t// valuePrepareString(v ref) (ref, int)\n\t\t\t\"syscall/js.valuePrepareString\": (sp) => {\n\t\t\t\tconst str = encoder.encode(String(loadValue(sp + 8)));\n\t\t\t\tstoreValue(sp + 16, str);\n\t\t\t\tsetInt64(sp + 24, str.length);\n\t\t\t},\n\t\t\n\t\t\t// valueLoadString(v ref, b []byte)\n\t\t\t\"syscall/js.valueLoadString\": (sp) => {\n\t\t\t\tconst str = loadValue(sp + 8);\n\t\t\t\tloadSlice(sp + 16).set(str);\n\t\t\t},\n\t\t\n\t\t\t// func valueInstanceOf(v ref, t ref) bool\n\t\t\t\"syscall/js.valueInstanceOf\": (sp) => {\n\t\t\t\tmem().setUint8(sp + 24, loadValue(sp + 8) instanceof loadValue(sp + 16));\n\t\t\t},\n\t\t\n\t\t\t\"debug\": (value) => {\n\t\t\t\tconsole.log(value);\n\t\t\t},\n\t\t}\n\t\t\n\t\tconst importObject = {\n\t\t\tgo: goObject\n\t\t};\n\t\t\n\t\treturn importObject\t\t\n\t}\n\n\tasync run(instance) {\n\t\tthis._inst = instance;\n\t\tthis._values = [ // TODO: garbage collection\n\t\t\tNaN,\n\t\t\t0,\n\t\t\tnull,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\tglobal,\n\t\t\tthis._inst.exports.mem,\n\t\t\tthis,\n\t\t];\n\t\tthis._refs = new Map();\n\t\tthis.exited = false;\n\n\t\tconst mem = new DataView(this._inst.exports.mem.buffer)\n\n\t\t// Pass command line arguments and environment variables to WebAssembly by writing them to the linear memory.\n\t\tlet offset = 4096;\n\n\t\tconst strPtr = (str) => {\n\t\t\tlet ptr = offset;\n\t\t\tnew Uint8Array(mem.buffer, offset, str.length + 1).set(encoder.encode(str + \"\\0\"));\n\t\t\toffset += str.length + (8 - (str.length % 8));\n\t\t\treturn ptr;\n\t\t};\n\n\t\tconst argc = this.argv.length;\n\n\t\tconst argvPtrs = [];\n\t\tthis.argv.forEach((arg) => {\n\t\t\targvPtrs.push(strPtr(arg));\n\t\t});\n\n\t\tconst keys = Object.keys(this.env).sort();\n\t\targvPtrs.push(keys.length);\n\t\tkeys.forEach((key) => {\n\t\t\targvPtrs.push(strPtr(`${key}=${this.env[key]}`));\n\t\t});\n\n\t\tconst argv = offset;\n\t\targvPtrs.forEach((ptr) => {\n\t\t\tmem.setUint32(offset, ptr, true);\n\t\t\tmem.setUint32(offset + 4, 0, true);\n\t\t\toffset += 8;\n\t\t});\n\n\t\tthis._inst.exports.run(argc, argv);\n\t\tif (this.exited) {\n\t\t\tthis._resolveExitPromise();\n\t\t}\n\t\tawait this._exitPromise;\n\t}\n\n\t_resume() {\n\t\tif (this.exited) {\n\t\t\tthrow new Error(\"Go program has already exited\");\n\t\t}\n\t\tthis._inst.exports.resume();\n\t\tif (this.exited) {\n\t\t\tthis._resolveExitPromise();\n\t\t}\n\t}\n\n\t_makeFuncWrapper(id) {\n\t\tconst go = this;\n\t\treturn function () {\n\t\t\tconst event = { id: id, this: this, args: arguments };\n\t\t\tgo._pendingEvent = event;\n\t\t\tgo._resume();\n\t\t\treturn event.result;\n\t\t};\n\t}\n\n}","import { engine } from '.'\n\nexport const loadState = (appId) => {\n  try {\n    const serializedState = localStorage.getItem(appId);\n    if (serializedState === null) {\n      return undefined;\n    }\n    const parsedState = JSON.parse(serializedState);\n    return parsedState;\n  } catch (err) {\n    return undefined;\n  }\n};\n\nlet lastAppId;\nlet lastState;\nlet newAppId;\nlet newState;\n\nexport const saveState = (appId, state) => {\n    newAppId = appId;\n    newState = state;\n};\n\nconst persistState = () => {\n  try {\n    if(lastAppId === newAppId && lastState === newState) {\n      return;\n    }\n    const liveState = engine.liveState(newState);\n    const persistableState = engine.persistableState(liveState);\n    const serializedState = JSON.stringify(persistableState);\n    localStorage.setItem(newAppId, serializedState);\n    lastAppId = newAppId;\n    lastState = newState;\n  } catch (err) {\n    console.log(\"DUXEN ERROR: persistState: \", err);\n  }\n};\n\nsetInterval(persistState, 1000);\n","import type { Schema } from 'duxen'\n\nconst schema:Schema = {\n  apiType: {\n    type: 'value',\n    persistent: true,\n    initValue: \"wasm\",\n  },\n  apiServer: {\n    type: 'value',\n    persistent: true,\n    initValue: \"http://localhost:7272\",\n  },\n  jwtSecret: {\n    type: 'value',\n    persistent: true,\n    initValue: \"\",\n  },\n  calcType: {\n    type: 'value',\n    persistent: true,\n    initValue: \"basic\",\n  },\n  nSims: {\n    type: 'value',\n    persistent: true,\n    initValue: 10000,\n  },\n  workers: {\n    type: 'value',\n    persistent: true,\n    initValue: 1,\n  },\n  threads: {\n    // Threads are for REST server only\n    type: 'value',\n    persistent: true,\n    initValue: 1,\n  },\n  players: {\n    type: 'value',\n    persistent: true,\n    initValue: 9,\n  },\n  catsChart: {\n    type: 'value',\n    persistent: true,\n    initValue: false,\n  },\n  catsTable: {\n    type: 'value',\n    persistent: true,\n    initValue: true,\n  },\n  playersChart: {\n    type: 'value',\n    persistent: true,\n    initValue: false,\n  },\n  playersTable: {\n    type: 'value',\n    persistent: true,\n    initValue: true,\n  },\n  combosTable: {\n    type: 'value',\n    persistent: true,\n    initValue: true,\n  },\n  denseKeyboard: {\n    type: 'value',\n    persistent: true,\n    initValue: true,\n  },\n  playersButtons: {\n    type: 'value',\n    persistent: true,\n    initValue: false,\n  },\n  devMode: {\n    type: 'value',\n    persistent: true,\n    initValue: false,\n  },\n  latency: {\n    type: 'value',\n    persistent: true,\n    initValue: true,\n  },  \n}\n\nexport default schema\n","import React from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport const c_WILD_CARD = -1\nexport const c_CARD_SIZE = 52\n\nexport const c_CLUBS = 0\nexport const c_HEARTS = 1\nexport const c_SPADES = 2\nexport const c_DIAMONDS = 3\nexport const c_SUIT_SIZE = 4\nexport const c_SUIT_BAD = -1\nexport const c_SUIT_PLAYERS = -2\nexport const c_SUIT_UNKNOWN = 4\n\nexport const c_2 = 0\nexport const c_3 = 1\nexport const c_4 = 2\nexport const c_5 = 3\nexport const c_6 = 4\nexport const c_7 = 5\nexport const c_8 = 6\nexport const c_9 = 7\nexport const c_T = 8\nexport const c_J = 9\nexport const c_Q = 10\nexport const c_K = 11\nexport const c_A = 12\nexport const c_RANK_SIZE = 13\nexport const c_RANK_BAD = -1\nexport const c_RANK_UNKNOWN = -2\n\nexport const c_TWO = 0\nexport const c_DEUCE = 0\nexport const c_THREE = 1\nexport const c_FOUR = 2\nexport const c_FIVE = 3\nexport const c_SIX = 4\nexport const c_SEVEN = 5\nexport const c_EIGHT = 6\nexport const c_NINE = 7\nexport const c_TEN = 8\nexport const c_JACK = 9\nexport const c_QUEEN = 10\nexport const c_KING = 11\nexport const c_ACE = 12\n\nexport const c_ranks = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"T\", \"J\", \"Q\", \"K\", \"A\"]\nexport const c_textRanks = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"]\nexport const c_suits = [\"c\", \"d\", \"h\", \"s\", \"x\"]\nexport const c_suitColors = [\"black\", \"red\", \"red\", \"black\", \"grey\"]\nexport const c_longSuits = [\"Clubs\", \"Diamonds\", \"Hearts\", \"Spades\", \"Unknown\"]\n\nexport const c_symbols = [\n    \"🃒\", \"🃓\", \"🃔\", \"🃕\", \"🃖\", \"🃗\", \"🃘\", \"🃙\", \"🃚\", \"🃛\", \"🃝\", \"🃞\", \"🃑\", \n    \"🃂\", \"🃃\", \"🃄\", \"🃅\", \"🃆\", \"🃇\", \"🃈\", \"🃉\", \"🃊\", \"🃋\", \"🃍\", \"🃎\", \"🃁\", \n    \"🂲\", \"🂳\", \"🂴\", \"🂵\", \"🂶\", \"🂷\", \"🂸\", \"🂹\", \"🂺\", \"🂻\", \"🂽\", \"🂾\", \"🂱\", \n    \"🂢\", \"🂣\", \"🂤\", \"🂥\", \"🂦\", \"🂧\", \"🂨\", \"🂩\", \"🂪\", \"🂫\", \"🂭\", \"🂮\", \"🂡\" ]\n\nexport const circled = [\"⓿\", \"❶\", \"❷\", \"❸\", \"❹\", \"❺\", \"❻\", \"❼\", \"❽\", \"❾\", \"❿\"]\nexport const c_deck = \"🂠\"\nexport const c_joker = \"🃏\"\nexport const c_whiteJoker = \"🃟\"\n\n// Card codes:\n// \n// -19 - wrong rank and suite\nexport const c_badCard = -19\n// -15 - 18 wrong rank, correct suite\nexport const c_badClub = -18\n// -2 - -14 correct rank, wrong suite\nexport const c_badDeuce = -14\n// -1 - unknown card, a wildcard, empty\nexport const c_unknownCard = -1\n// 0-51 - valid cards\n// 52-64 - unknown suit\n// 65 - any club\nexport const c_anyClub = 65\n// 66 - any diamond\n// 67 - any heart\n// 68 - any spade\nexport const c_2p = 69\nexport const c_3p = 70\nexport const c_4p = 71\nexport const c_5p = 72\nexport const c_6p = 73\nexport const c_7p = 74\nexport const c_8p = 75\nexport const c_9p = 76\nexport const c_maxCode = 77\n\nexport const codeIsNormal = (code) => (0 <= code && code < c_CARD_SIZE)\nexport const codeIsPlayers = (code) => (c_2p <= code && code <= c_9p)\n\n// Turns card code into ASCII representation\nexport const code2text = (code) => {\n    let text\n    switch(code) {\n        case c_badCard: {\n            text = \"??\"\n            break;\n        }\n        case c_badClub: {\n            text = \"?c\"\n            break;\n        }\n        case c_badClub+1: {\n            text = \"?d\"\n            break;\n        }\n        case c_badClub+2: {\n            text = \"?h\"\n            break;\n        }\n        case c_badClub+3: {\n            text = \"?s\"\n            break;\n        }\n        case c_unknownCard: {\n            text = \"__\"\n            break;\n        }\n        case c_anyClub: {\n            text = \"Xc\"\n            break;\n        }\n        case c_anyClub+1: {\n            text = \"Xd\"\n            break;\n        }\n        case c_anyClub+2: {\n            text = \"Xh\"\n            break;\n        }\n        case c_anyClub+3: {\n            text = \"Xs\"\n            break;\n        }\n        case c_2p: {\n            text = \"2p\"\n            break;\n        }\n        case c_3p: {\n            text = \"3p\"\n            break;\n        }\n        case c_4p: {\n            text = \"4p\"\n            break;\n        }\n        case c_5p: {\n            text = \"5p\"\n            break;\n        }\n        case c_6p: {\n            text = \"6p\"\n            break;\n        }\n        case c_7p: {\n            text = \"7p\"\n            break;\n        }\n        case c_8p: {\n            text = \"8p\"\n            break;\n        }\n        case c_9p: {\n            text = \"9p\"\n            break;\n        }\n\n        default: {\n            break;\n        }\n    }\n\n    if(!text) {\n        if(c_badDeuce <= code && code < c_badDeuce + c_RANK_SIZE) {\n            const rank = code - c_badDeuce\n            text = c_ranks[rank] + \"?\"\n        } else if(code < 0 || code >= c_anyClub) {\n            text = \"??\"\n        } else {\n            const rank = code % c_RANK_SIZE\n            const suit = Math.floor(code / c_RANK_SIZE)\n\n            text = c_ranks[rank] + c_suits[suit]\n        }\n    }\n\n    return text\n}\n\nexport const code2symbol = (code) => {\n    if(code < 0 || code >= c_symbols[code]) {\n        return c_deck\n    }\n\n    return c_symbols[code]\n}\n\nexport const code2html = (code, vertical) => {\n    let comp\n    switch(code) {\n        case c_badCard: {\n            comp = <>?{vertical?<br/>:null}?</>\n            break;\n        }\n        case c_badClub: {\n            comp = <>?{vertical?<br/>:null}&clubs;</>\n            break;\n        }\n        case c_badClub+1: {\n            comp = <>?{vertical?<br/>:null}&diams;</>\n            break;\n        }\n        case c_badClub+2: {\n            comp = <>?{vertical?<br/>:null}&hearts;</>\n            break;\n        }\n        case c_badClub+3: {\n            comp = <>?{vertical?<br/>:null}&spades;</>\n            break;\n        }\n        case c_unknownCard: {\n            comp = <>_{vertical?<br/>:null}_</>\n            break;\n        }\n        case c_anyClub: {\n            comp = <>{vertical?<br/>:null}&clubs;</>\n            break;\n        }\n        case c_anyClub+1: {\n            comp = <>{vertical?<br/>:null}&diams;</>\n            break;\n        }\n        case c_anyClub+2: {\n            comp = <>{vertical?<br/>:null}&hearts;</>\n            break;\n        }\n        case c_anyClub+3: {\n            comp = <>{vertical?<br/>:null}&spades;</>\n            break;\n        }\n        case c_2p:\n        case c_3p:\n        case c_4p:\n        case c_5p:\n        case c_6p:\n        case c_7p:\n        case c_8p:\n        case c_9p:\n        {\n            comp = <>\n                {vertical?String.fromCharCode('2'.charCodeAt(0)+(code-c_2p)):null}\n                {vertical?<br/>:null}\n                {vertical?<FontAwesomeIcon icon=\"user\"/>: circled[2+code-c_2p]}\n            </>\n            break;\n        }\n        default: {\n            break;\n        }\n    }\n\n    if(comp) {\n        // we are good\n    } else if(0 <= code && code < c_CARD_SIZE + c_RANK_SIZE) {\n\n        const rank = code % c_RANK_SIZE\n        const suit = Math.floor(code / c_RANK_SIZE)\n\n        switch(suit) {\n            case 0:\n                comp = <>{c_textRanks[rank]}{vertical?<br/>:null}&clubs;</>\n                break\n            case 1:\n                comp = <>{c_textRanks[rank]}{vertical?<br/>:null}&diams;</>\n                break\n            case 2:\n                comp = <>{c_textRanks[rank]}{vertical?<br/>:null}&hearts;</>\n                break\n            case 3:\n                comp = <>{c_textRanks[rank]}{vertical?<br/>:null}&spades;</>\n                break\n            case 4:\n                comp = <>{c_textRanks[rank]}{vertical?<br/>:null}x</>\n                break\n            default:\n                // Should not be here\n                break\n        }\n    } else if(c_badDeuce <= code && code < c_badDeuce + c_RANK_SIZE) {\n        const rank = code - c_badDeuce\n        comp = <>{c_textRanks[rank]}{vertical?<br/>:null}?</>\n    } else {\n        comp = <>?{vertical?<br/>:null}?</>       \n    }\n    return comp\n}\n\nexport const code2color = (code) => {\n    let color\n\n    if(code < 0 || code >= c_maxCode) {\n        color = \"grey\"\n    } else if(code < c_CARD_SIZE + c_RANK_SIZE) {\n        const suit = Math.floor(code / c_RANK_SIZE)\n        color = c_suitColors[suit]\n    } else if(c_anyClub <= code && code <= c_anyClub+3) {\n        const suit = code - c_anyClub\n        color = c_suitColors[suit]\n    } else if(c_2p <= code && code <= c_9p) {\n        color = \"blue\"\n    } else if(code < c_maxCode) {\n        color = \"grey\"\n    } else {\n        // should not get here\n    }\n\n    return color\n}\n\nexport const text2code = (card) => {\n    if(card.length !== 2) {\n        return -1\n    }\n\n    const c1 = card.charAt(0)\n    const c2 = card.charAt(1)\n\n    let rank\n    switch(c1) {\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9':\n            rank = c1 - '2'\n            break\n        case 't':\n        case 'T':\n            rank = 8\n            break;\n        case 'j':\n        case 'J':\n            rank = 9\n            break;\n        case 'q':\n        case 'Q':\n            rank = 10\n            break;\n        case 'k':\n        case 'K':\n            rank = 11\n            break;\n        case 'a':\n        case 'A':\n            rank = 12\n            break;\n        case '_':\n        case '*':\n        case 'x':\n        case 'X':\n            rank = c_RANK_UNKNOWN;\n            break;\n        default:\n            rank = c_RANK_BAD\n            break\n    }\n\n    let suit\n    switch(c2) {\n        case 'c':\n        case 'C':\n            suit = 0\n            break\n        case 'd':\n        case 'D':\n            suit = 1\n            break\n        case 'h':\n        case 'H':\n            suit = 2\n            break\n        case 's':\n        case 'S':\n            suit = 3\n            break\n        case '_':\n        case '*':\n        case 'x':\n        case 'X':\n            suit = c_SUIT_UNKNOWN\n            break\n        case 'p':\n        case 'P':\n            suit = c_SUIT_PLAYERS\n            break;\n        default:\n            suit = c_SUIT_BAD\n            break\n    }\n\n    let code \n    if(rank >= 0 && suit >= 0) {\n        code = suit * c_RANK_SIZE + rank\n    } else if(suit === c_SUIT_PLAYERS) {\n        if(c_2 <= rank && rank <= c_9) {\n            code = c_2p + rank\n        } else {\n            code = c_badCard\n        }\n    } else if(rank < 0 && 0 <= suit && suit < 4) {\n        if(rank === c_RANK_UNKNOWN) {\n            code = c_anyClub + suit\n        } else {\n            code = c_badClub + suit\n        }\n    } else if(rank === c_RANK_UNKNOWN && suit === c_SUIT_UNKNOWN) {\n        code = c_unknownCard\n    } else if(rank >= 0 && suit < 0) {\n        code = c_badDeuce + rank\n    } else {\n        code = c_badCard\n    }\n\n    return code\n}\n","import { text2code, c_2p, c_9p } from './cards'\n\nimport { List } from 'immutable-sorted'\n\nexport const chopHand = (hand, n) => {\n    const arr = []\n    hand = hand.trim().toLowerCase()\n    while(hand.length > 0) {\n      if(hand.length === 1) {\n          hand = hand + \"_\"\n      }\n      const code = text2code(hand.substr(0, 2))\n      arr.push(code)\n      hand = hand.substring(2)\n\n      hand = hand.trim()\n    }\n    while(arr.length < n) {\n      arr.push(-1)\n    }\n    return List(arr)\n}\n\nexport const getValidCardsCnt = (list) => {\n    let n = 0\n\n    for(let i = 0; i < list.size; i++) {\n        const c = list.get(i)\n        if(0 <= c && c < 52) {\n            n++\n        }\n    }\n    return n\n}\n\nexport const isValidHand = (list) => {\n    let nomore = false\n    let n = 0\n\n    for(let i = 0; i < list.size; i++) {\n        const c = list.get(i)\n        if(0 <= c && c < 52) {\n            n++\n            if(nomore) {\n                return false\n            }\n        } else if(c_2p <= c && c <= c_9p) {\n        } else if(c === -1) {\n            nomore = true\n        } else {\n            return false\n        }\n    }\n    return n > 0\n}\n","import type { Schema } from 'duxen'\n\nimport SettingsSchema from '../Settings/SettingsSchema'\n\nimport { chopHand, isValidHand, getValidCardsCnt } from '../../utils/hand'\n\nimport { Map, List } from 'immutable-sorted'\n\n// const cmp=(a,b)=>(a>b?1:(a<b?-1:0))\nconst schema:Schema = {\n\n  settings: {\n    type: 'schema',\n    schema: SettingsSchema,\n  },\n\n  tanking: {\n    type: 'value',\n    persistent: false,\n    initValue: false,\n  },\n\n  tankingMs: {\n    type: 'value',\n    persistent: false,\n    initValue: 0,\n  },\n\n  hand: {\n      type: 'value',\n      persistent: true,\n      initValue: \"______________\",\n  },\n\n  handEval: {\n      type: 'value',\n      persistent: false,\n      initValue: Map(),\n  },\n\n  handEvalPlayers: {\n    type: 'value',\n    persistent: false,\n    initValue: Map(),\n  },\n\n  handResult: {\n    type: 'value',\n    persistent: false,\n    initValue: Map(),\n  },\n\n  handCombos: {\n    type: 'value',\n    persistent: false,\n    initValue: Map(),\n  },\n\n  handArr: {\n    type:'formula',\n    props: ['hand'],\n    recipe: (props) => List(chopHand(props.hand, 7)),\n  },\n\n  handValid: {\n    type:'formula',\n    props: ['handArr'],\n    recipe: (props) => isValidHand(props.handArr),\n  },\n\n  handCardsCnt: {\n    type:'formula',\n    props: ['handArr'],\n    recipe: (props) => getValidCardsCnt(props.handArr),\n  },\n\n  err: {\n    type: 'value',\n    persistent: false,\n    initValue: \"\",\n  },\n\n  currentSuit: {\n    type: 'value',\n    persistent: true,\n    initValue: \"s\",\n  },\n\n}\n\nexport default schema\n","import type { Schema } from 'duxen'\nimport { fromJS } from 'immutable-sorted'\n\nimport HomeSchema from '../Home/HomeSchema'\n\nexport const AppName = \"poserjs\";\nexport const AppVersion = \"0.0.2\";\n\nconst getJsonFromUrl = (url) => {\n  // eslint-disable-next-line no-restricted-globals\n  if(!url) url = location.search\n  var query = url.substr(1)\n  var result = {}\n  query && query.split(\"&\").forEach(function(part) {\n    var item = part.split(\"=\")\n    result[item[0]] = decodeURIComponent(item[1])\n  })\n  return result\n}\n\nexport const AppSchema: Schema = {\n\n  args: {\n    type: 'value',\n    persistent: false,\n    initValue: fromJS(getJsonFromUrl()),\n  },\n\n  selectedTabIndex: {\n    type: 'value',\n    persistent: true,\n    initValue: 0,\n  },\n\n  home: {\n    type: 'schema',\n    schema: HomeSchema,\n  },\n\n}\n\nexport default AppSchema\n","\nconst MenuTabs = [\"home\", /* \"sim\", */ \"settings\", \"credits\", \"debug\"]\n\nexport default MenuTabs\n","import { actionFactory, getState, dispatch, persist } from '../../engine'\nimport MenuTabs from '../Menu/MenuTabs'\n\n// This function is called after Duxen creates an engine,\n// creates and initial state (restores the saved state)\nconst AppInit = (engine, store, initState) => {\n  const state = getState()\n  const urlArgs = state.get(\"args\")\n  const tab = urlArgs.get(\"tab\")\n  const reset = urlArgs.get(\"reset\")\n\n  if(reset === \"true\") {\n    if(window.confirm(\"This will clear all PoserJS saved data. Are you sure?\")) {\n      dispatch(actionFactory.init(initState))\n      persist()\n    }\n    window.history.replaceState({}, document.title, \"/\");\n    return\n  }\n\n  try {\n    if(tab) {\n      for(let i = 0; i < MenuTabs.length; i++) {\n        if(tab === MenuTabs[i]) {\n          dispatch(actionFactory.value(\"selectedTabIndex\", i))\n        }\n      }\n    }\n\n    persist()\n  } catch(err) {\n    console.log(\"INIT ERROR:\", err)\n  }\n}\n\nexport default AppInit\n","import { createStore } from 'redux'\nimport { createEngine } from 'duxen'\nimport schema from '../modules/App/AppSchema'\nimport { AppName, AppVersion } from '../modules/App/AppSchema'\nimport AppInit from '../modules/App/AppInit'\nimport { loadState, saveState } from './persist'\n\nimport mergeDeep from '../utils/mergeDeep'\n\nlet initState\nconst appId = AppName + \":\" + AppVersion\n\nconst makeStore = (engine) => {\n\n  const reducer = engine.repoReducer()\n  const store = createStore(reducer)\n\n  initState = engine.head(store.getState())\n  const persistedState = loadState(appId)\n\n  if(persistedState) {\n    const mergedState = mergeDeep(initState.toJS(), persistedState)\n    store.dispatch(engine.actionFactory().init(mergedState))\n  }\n  store.dispatch(engine.actionFactory().refresh())\n  // store.subscribe(() => saveState(appId, store.getState()))\n  // engine.subscribe((action) => console.log(\"ACTION\", Date(), action.type, JSON.stringify(action, undefined, 4)))\n  // store.subscribe(() => console.log(\"REDUX STATE\", Date(), JSON.stringify(engine.printableState(getState()).toJS(), undefined, 4)))\n\n  return store\n}\n\nexport const engine = createEngine(schema)\nexport const actionFactory = engine.actionFactory()\nexport const store = makeStore(engine)\nexport const dispatch = (action) => store.dispatch(action)\nexport const getState = () => engine.head(store.getState())\nexport const persist = () => store.subscribe(() => saveState(appId, store.getState()))\n\nAppInit(engine, store, initState)\n","/*\n// Copied from: \n//\n// https://stackoverflow.com/questions/27936772/how-to-deep-merge-instead-of-shallow-merge\n*/\n\n/**\n * Simple object check.\n * @param item\n * @returns {boolean}\n */\nconst isObject = (item) => {\n  return (item && typeof item === 'object' && !Array.isArray(item));\n}\n\n/**\n * Deep merge two objects.\n * @param target\n * @param ...sources\n */\nconst mergeDeep = (target, ...sources) => {\n  if (!sources.length) return target;\n  const source = sources.shift();\n\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) Object.assign(target, { [key]: {} });\n        mergeDeep(target[key], source[key]);\n      } else {\n        Object.assign(target, { [key]: source[key] });\n      }\n    }\n  }\n\n  return mergeDeep(target, ...sources);\n}\n\nexport default mergeDeep \n","export default function isMobileDevice() {\n  return (typeof window.orientation !== \"undefined\") || (navigator.userAgent.indexOf('IEMobile') !== -1);\n}","import React, { Component } from 'react'\n\nimport isMobileDevice from '../../utils/isMobileDevice'\n\nimport { codeIsNormal, codeIsPlayers, text2code, code2text, code2html, code2symbol, code2color } from '../../utils/cards'\n\nimport css from './Card.module.css'\n\nconst imd = isMobileDevice()\n\nexport default class Card extends Component {\n\n  constructor(props) {\n    super(props)\n    this.code0 = \"\"\n    this.comp0 = null\n  }\n\n  render0() {\n    const props = this.props\n    const style = {...props.style}||{}\n    const html = props.html\n    const vertical = props.vertical\n    const ball = props.ball\n    let grey = false\n    let card = props.card || props.children\n    let code = props.code !== undefined ? props.code : text2code(card)\n\n    if(props.handArr) {\n      if((codeIsNormal(code) || codeIsPlayers(code)) && props.handArr.includes(code)) {\n        grey = true\n      }\n    }\n    card = code2text(code)\n    const symbol = html ? code2html(code, vertical) : code2symbol(code)\n\n    style.color = grey ? \"gainsboro\" : code2color(code);\n\n    let comp\n\n    const cn = (ball?(html?css.htmlBall:css.ball):(html?(imd?css.htmlSquareMobile:css.htmlSquare):css.square))\n\n    if(props.click) {\n      comp = <button \n        className={cn}\n        name={card}\n        title={card}\n        alt={card}\n        onClick={props.click.bind(this, card)}\n        style={style}\n      >\n        {symbol}\n      </button>\n    } else {\n      comp = <span\n        className={cn}\n        name={card}\n        title={card}\n        alt={card}\n        style={style}\n      >\n        {symbol}\n      </span>\n    }\n\n    return comp\n  }\n\n  render() {\n    const props = this.props\n    const card = props.card || props.children\n    const code = props.code !== undefined ? props.code : text2code(card)\n    const handArr = props.handArr\n    if(!this.comp0 || this.code0 !== code || this.handArr0 !== handArr) {\n      this.code0 = code\n      this.handArr0 = handArr\n      this.comp0 = this.render0()\n    }\n    return this.comp0\n  }\n}\n","import React from 'react'\n\nimport Card from '../../components/Card'\n\nconst style = {fontSize: 20, color: \"white\", padding: \"0px\"}\n\nconst Banner = (props) => (\n  <div style={style}>\n    Poser\n    &nbsp;\n    <Card style={{...style, background: \"white\", margin: 0, fontSize: 18, height: 24}} html={true}>7d</Card>\n    <Card style={{...style, background: \"white\", margin: 0, fontSize: 18, height: 24}} html={true}>2h</Card>\n  </div>\n)\n\nexport default Banner\n","const splice = (s, idx, rem, str) => {\n  return s.slice(0, idx) + str + s.slice(idx + Math.abs(rem));\n}\n\nexport default splice\n","// @flow\n\n/*\n * Card is an integer in the following format:\n *\n * 876543210\n *    rrrrss\n *\n * rrrr - is a rank, a number between 0 and 12\n * ss - is a suit, a number between 0 and 3\n *\n */\n\nexport type Card = number\nexport type CardRank = number\nexport type CardSuit = number\n\nexport const CardNull: Card = 0x3D\nexport const CardWildCard: Card = 0x3B\nexport const CardBad: Card  = 0x3F\nexport const CardSize = 52\n\nexport const Card2Players     = (69)\nexport const Card3Players     = (70)\nexport const Card4Players     = (71)\nexport const Card5Players     = (72)\nexport const Card6Players     = (73)\nexport const Card7Players     = (74)\nexport const Card8Players     = (75)\nexport const Card9Players     = (76)\n\nexport const CardSuitClubs: CardSuit = (0)\nexport const CardSuitDiamonds: CardSuit = (1)\nexport const CardSuitHearts: CardSuit = (2)\nexport const CardSuitSpades: CardSuit = (3)\nexport const CardSuitSize: CardSuit = (4)\nexport const CardSuitPlayers: CardRank = (0xD)\nexport const CardSuitWild: CardRank = (0xE)\nexport const CardSuitBad: CardSuit = (0xF)\n\nexport const CardRank2: CardRank = (0)\nexport const CardRank3: CardRank = (1)\nexport const CardRank4: CardRank = (2)\nexport const CardRank5: CardRank = (3)\nexport const CardRank6: CardRank = (4)\nexport const CardRank7: CardRank = (5)\nexport const CardRank8: CardRank = (6)\nexport const CardRank9: CardRank = (7)\nexport const CardRank10: CardRank = (8)\nexport const CardRankJ: CardRank = (9)\nexport const CardRankQ: CardRank = (10)\nexport const CardRankK: CardRank = (11)\nexport const CardRankA: CardRank = (12)\nexport const CardRankSize: CardRank = (13)\nexport const CardRankWild: CardRank = (0xE)\nexport const CardRankBad: CardRank = (0xF)\n\nconst cardRankStr: Array<string> = [\n\t\"2\",\n\t\"3\",\n\t\"4\",\n\t\"5\",\n\t\"6\",\n\t\"7\",\n\t\"8\",\n\t\"9\",\n\t\"T\",\n\t\"J\",\n\t\"Q\",\n\t\"K\",\n    \"A\",\n]\n\nconst cardSuitStr: Array<string> = [\n\t\"c\",\n\t\"d\",\n\t\"h\",\n\t\"s\",\n]\n\nexport function MakeCard(rank: CardRank, suit: CardSuit): Card {\n\tif(0 <= rank && rank < CardRankSize && 0 <= suit && suit < CardSuitSize) {\n\t\treturn (rank << 2) | suit\n\t} else if(2 <= rank && rank < 9 && suit === CardSuitPlayers) {\n\t\treturn Card2Players + (rank -2)\n\t} else if(rank === CardRankWild) {\n\t\treturn CardWildCard\n\t}\n\treturn CardBad\n}\n\nexport function MakeCardStr(s: string): Card {\n\tconst c1: string  = s.substr(0, 1)\n\tconst c2: string = s.substr(1, 1)\n\n\tlet rank: CardRank\n\tlet suit: CardSuit\n\n\tswitch(c1) {\n\tcase '2':\n\t\trank = 0\n\t\tbreak\n\tcase '3':\n\t\trank = 1\n\t\tbreak\n\tcase '4':\n\t\trank = 2\n\t\tbreak\n\tcase '5':\n\t\trank = 3\n\t\tbreak\n\tcase '6':\n\t\trank = 4\n\t\tbreak\n\tcase '7':\n\t\trank = 5\n\t\tbreak\n\tcase '8':\n\t\trank = 6\n\t\tbreak\n\tcase '9':\n\t\trank = 7\n\t\tbreak\n\tcase 't':\n\tcase 'T':\n\t\trank = 8\n\t\tbreak\n\tcase 'j':\n\tcase 'J':\n\t\trank = 9\n\t\tbreak\n\tcase 'q':\n\tcase 'Q':\n\t\trank = 10\n\t\tbreak\n\tcase 'k':\n\tcase 'K':\n\t\trank = 11\n\t\tbreak\n\tcase 'a':\n\tcase 'A':\n\t\trank = 12\n\t\tbreak\n\tcase '*':\n\tcase '_':\n\t\trank = CardRankWild\n\t\tbreak\n\tcase '?':\n\tdefault:\n\t\trank = CardRankBad\n\t\tbreak\n\t}\n\n\tswitch(c2) {\n\tcase 'c':\n\tcase 'C':\n\t\tsuit = 0\n\t\tbreak\n\tcase 'd':\n\tcase 'D':\n\t\tsuit = 1\n\t\tbreak\n\tcase 'h':\n\tcase 'H':\n\t\tsuit = 2\n\t\tbreak\n\tcase 's':\n\tcase 'S':\n\t\tsuit = 3\n\t\tbreak\n\tcase 'p':\n\tcase 'P':\n\t\tsuit = CardSuitPlayers\n\t\tbreak\n\t\tcase '*':\n\tcase '_':\n\t\tsuit = CardSuitWild\n\t\tbreak\n\tcase '?':\n\tdefault:\n\t\tsuit = CardSuitBad\n\t\tbreak\n\t}\n\n\treturn MakeCard(rank, suit)\n}\n\nexport function GetRank(card: Card): CardRank {\n\treturn card >> 2\n}\n\nexport function GetSuit(card: Card): CardSuit {\n\treturn card & 3\n}\n\nexport function GetRankStr(card: Card): string {\n\treturn cardRankStr[card >> 2]\n}\n\nexport function GetSuitStr(card: Card): string {\n\treturn cardSuitStr[card & 3]\n}\n\nexport function GetCardStr(card: Card): string {\n\treturn GetRankStr(card) + GetSuitStr(card)\n}\n\nexport function GetCardRankStr(cardRank: CardRank): string {\n\treturn cardRankStr[cardRank]\n}\n\nexport function GetCardSuitStr(cardSuit: CardSuit): string {\n\treturn cardSuitStr[cardSuit]\n}\n","// @flow\n\nimport type { Card, CardRank, CardSuit } from './card'\nimport { MakeCardStr, CardBad, CardWildCard, MakeCard, GetCardStr, GetRank, GetSuit, Card2Players, Card9Players } from './card'\n\nexport type Hand7 = {\n\tranks: number,\n\tsuits: number,\n}\n\nexport const Hand7Null: Hand7 = {\n\tranks: 0x0FFFFFFF,\n\tsuits: 0x0,\n}\nexport const Hand7Bad: Hand7 = {\n\tranks: 0x0FFFFFFF,\n\tsuits: 0x3FFF,\n}\n\nexport function MakeHand7(): Hand7 {\n\treturn {\n\t\tranks: Hand7Null.ranks,\n\t\tsuits: Hand7Null.suits,\n\t}\n}\n\nconst handRankMasks: Array<number> = [\n\t~0x0000000F,\n\t~0x000000F0,\n\t~0x00000F00,\n\t~0x0000F000,\n\t~0x000F0000,\n\t~0x00F00000,\n\t~0x0F000000,\n]\n\nconst handSuitMasks: Array<number> = [\n\t~0x0003,\n\t~0x000C,\n\t~0x0030,\n\t~0x00C0,\n\t~0x0300,\n\t~0x0C00,\n\t~0x3000,\n]\n\nexport function StringToHand7(s: string): [Hand7, string] {\n\tif(!s || s.length < 14) {\n\t\treturn [Hand7Bad, \"not enough cards\"]\n\t}\n\n\tlet hand: Hand7 = MakeHand7()\n\tlet mask1: number = 0\n\tlet mask2: number = 0\n\tlet m = 0\n\n\tfor(let i = 0; i < s.length/2; i++) {\n\t\tconst n: number = i << 1\n\t\tconst cardStr: string = s.substr(n, 2)\n\t\tconst card: Card = MakeCardStr(cardStr)\n\n\t\tif(card === CardBad) {\n\t\t\treturn [Hand7Bad, (\"bad card: \" + cardStr)]\n\t\t}\n\n\t\tif(!(Card2Players <= card && card <= Card9Players)) {\n\t\t\tif(card === CardWildCard) {\n\t\t\t\t// don't test for duplicate\n\t\t\t} else if(card >= 32) {\n\t\t\t\tconst bit: number = 1 << (card-32)\n\t\t\t\tif((mask2 & bit) === 0) {\n\t\t\t\t\tmask2 |= bit\n\t\t\t\t} else {\n\t\t\t\t\treturn [Hand7Bad, (\"duplicate card: \" + cardStr)]\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst bit: number = 1 << card\n\t\t\t\tif((mask1 & bit) === 0) {\n\t\t\t\t\tmask1 |= bit\n\t\t\t\t} else {\n\t\t\t\t\treturn [Hand7Bad, (\"duplicate card: \" + cardStr)]\n\t\t\t\t}\n\t\t\t}\n\t\t\thand = SetHand7Card(hand, m, card)\n\t\t\tm++\n\t\t}\n\t}\n\n\treturn [hand, \"\"]\n}\n\nexport function SetHand7Card(hand: Hand7, n: number, card: Card): Hand7 {\n\thand.ranks = (hand.ranks & handRankMasks[n]) | (GetRank(card) << (n << 2)) \n\thand.suits = (hand.suits & handSuitMasks[n]) | (GetSuit(card) << (n << 1))\n\treturn hand\n}\n\nexport function GetHand7Rank(hand: Hand7, n: number): CardRank {\n\treturn (hand.ranks >> (n << 2)) & 0xF\n}\n\nexport function GetHand7Suit(hand: Hand7, n: number): CardSuit {\n\treturn (hand.suits >> (n << 1)) & 3\n}\n\nexport function GetHand7Card(hand: Hand7, n: number): Card {\n\tconst rank = GetHand7Rank(hand, n)\n\tconst suit = GetHand7Suit(hand, n)\n\tconst card = MakeCard(rank, suit)\n\treturn card\n}\n\nexport function GetHand7HoleStr(hand: Hand7): string {\n\tconst card1 = GetHand7Card(hand, 0)\n\tconst card2 = GetHand7Card(hand, 1)\n\tconst card1Str = GetCardStr(card1)\n\tconst card2Str = GetCardStr(card2)\n\treturn card1Str + card2Str\n}\n\nexport function GetHand7Str(hand: Hand7): string {\n\tlet s = \"\"\n\tfor(let i = 0; i < 7; i++) {\n\t\tconst card = GetHand7Card(hand, i)\n\t\ts += GetCardStr(card)\n\t}\n\treturn s\n}\n","// @flow\n\nimport type { CardRank } from './card'\nimport { GetCardRankStr } from './card'\n\n/*\n * The handRank (hr) represents a value of the 7-card hand\n * It is a 24 bit integer number in the following format:\n *\n * hr[20:23] - hand category\n * hr[16:19] - card4 rank\n * hr[12:15] - card3 rank\n * hr[8:11] - card2 rank\n * hr[4:7] - card1 rank\n * hr[0:3] - card0 rank\n *\n * hand category -\n *  0 - high card\n *  1 - 1 pair\n *  2 - 2 pair\n *  3 - three of a kind\n *  4 - straight\n *  5 - flush\n *  6 - full house\n *  7 - 4 of a kind\n *  8 - straight flush\n *  F - bad hand rank\n *\n *  Special Value = 0 - means invalid hand\n */\n\nexport type HandRank = number\nexport type HandRankCat = number\n\nexport const HandRankCatHighCard: HandRankCat = (0)\nexport const HandRankCatOnePair: HandRankCat = (1)\nexport const HandRankCatTwoPair: HandRankCat = (2)\nexport const HandRankCatSet    : HandRankCat = (3)\nexport const HandRankCatStraight: HandRankCat = (4)\nexport const HandRankCatFlush  : HandRankCat = (5)\nexport const HandRankCatFullHouse: HandRankCat = (6)\nexport const HandRankCatQuads  : HandRankCat = (7)\nexport const HandRankCatStraightFlush: HandRankCat = (8)\nexport const HandRankCatMax    : HandRankCat = (9)\nexport const HandRankCatBad    : HandRankCat = (0xF)\n\nexport const HandRankNull: HandRank = (0x0FFFFF)\nexport const HandRankBad: HandRank = (0xFFFFFF)\n\nconst handRankMasks: Array<number> = [\n\t~0x0000F,\n\t~0x000F0,\n\t~0x00F00,\n\t~0x0F000,\n\t~0xF0000,\n]\n\nconst handRankCatsStr: Array<string> = [\n\t\"1\",\n\t\"2\",\n\t\"2+2\",\n\t\"3\",\n\t\"S\",\n\t\"F\",\n\t\"3+2\",\n\t\"4\",\n    \"SF\"\n]\n\nconst handRankCategoriesStr = [\n\t\"High\",\n\t\"1 Pair\",\n\t\"2 Pair\",\n\t\"Set\",\n\t\"Straight\",\n\t\"Flush\",\n\t\"Boat\",\n\t\"Quads\",\n    \"StrFl\"\n]\n\nconst handRankCategoriesLongStr = [\n\t\"High Card\",\n\t\"One Pair\",\n\t\"Two Pair\",\n\t\"Set\",\n\t\"Straight\",\n\t\"Flush\",\n\t\"Full House\",\n\t\"Quads\",\n    \"Straight Flush\"\n]\n\nexport function MakeHandRank(): HandRank {\n\treturn HandRankNull\n}\n\nexport function SetCategory(handRank: HandRank, category: HandRankCat): HandRank {\n\treturn (handRank & (~0xF<<20)) | (category << 20)\n}\n\nexport function GetCategory(handRank: HandRank): HandRankCat {\n\treturn (handRank >> 20) & 0xf\n}\n\nexport function GetCategoryStr(category: HandRankCat): string {\n\treturn handRankCategoriesStr[category]\n}\n\nexport function GetCategoryLongStr(category: HandRankCat): string {\n\treturn handRankCategoriesLongStr[category]\n}\n\nexport function GetCatStr(category: HandRankCat): string {\n\treturn handRankCatsStr[category]\n}\n\nexport function GetHandCategoryStr(handRank: HandRank): string {\n\treturn GetCategoryStr(GetCategory(handRank))\n}\n\nexport function GetHandCatStr(handRank: HandRank): string {\n\treturn GetCatStr(GetCategory(handRank))\n}\n\nexport function SetCardRank(handRank: HandRank, n: number, cardRank: CardRank): HandRank {\n\treturn (handRank & handRankMasks[n]) | (cardRank << (n << 2))\n}\n\nexport function GetCardRank(handRank: HandRank, n: number): CardRank {\n\treturn (handRank >> (n << 2)) & 0xf\n}\n\nexport function HandRankStr(handRank: HandRank): string {\n\treturn GetCardRankStr(GetCardRank(handRank, 4)) +\n\t\tGetCardRankStr(GetCardRank(handRank, 3)) +\n\t\tGetCardRankStr(GetCardRank(handRank, 2)) +\n\t\tGetCardRankStr(GetCardRank(handRank, 1)) +\n\t\tGetCardRankStr(GetCardRank(handRank, 0))\n}\n","// @flow\n\nconst hsbSize: number = 1 << 16\n\nconst hsb = new Array<number>(hsbSize)\n\nfunction init() {\n\tfor(let i: number = 0; i < hsbSize; i++) {\n\t\thsb[i] = getSlowHsb(i)\n\t}\n}\n\nfunction getSlowHsb(n: number): number {\n\tlet i: number = -1\n\n\twhile(n > 0) {\n\t\ti++\n\t\tn >>= 1\n\t}\n\n\treturn i\n}\n\n// GetHsb16 function\n// returns the highest significant bit in a 16-bit integer\n// or -1 if no hsb\nexport function GetHsb16(n: number): number {\n\treturn hsb[n]\n}\n\ninit()\n","// @flow\n\nimport type { CardRank, CardSuit } from './card'\nimport type { Hand7 } from './hand'\nimport type { HandRank } from './handRank'\nimport type { HandCalculator } from './handCalculator'\n\nimport { CardRankSize, CardSuitSize, CardRank2, CardRankA } from './card'\nimport { GetHand7Rank, GetHand7Suit } from './hand'\nimport { MakeHandRank, SetCategory, SetCardRank } from './handRank'\nimport { HandRankCatHighCard, HandRankCatOnePair, HandRankCatTwoPair, HandRankCatSet, HandRankCatStraight, HandRankCatFlush, HandRankCatFullHouse, HandRankCatQuads, HandRankCatStraightFlush } from './handRank'\nimport { GetHsb16 } from './hsb'\n\nexport class BasicHandCalculator implements HandCalculator {\n\trankCnts: Array<number> // [CardRankSize]\n\tsuitCnts: Array<number> // [4]\n    suitMasks: Array<number> // [4]\n\n    constructor() {\n        this.rankCnts = new Array<number>(CardRankSize)\n        this.suitCnts = new Array<number>(CardSuitSize)\n        this.suitMasks = new Array<number>(CardSuitSize)\n    }\n\n    CalcHandRank(hand: Hand7): HandRank {\n        return this.calcHandRank(hand, 7)\n    }\n\n    reset() {\n        const self = this\n\n        for(let i = 0; i < self.rankCnts.length; i++) {\n            self.rankCnts[i] = 0\n        }\n        for(let i = 0; i < self.suitCnts.length; i++) {\n            self.suitCnts[i] = 0\n        }\n        for(let i = 0; i < self.suitMasks.length; i++) {\n            self.suitMasks[i] = 0\n        }\n    }\n\n    calcHandRank(hand: Hand7, cardsCnt: number): HandRank {\n        const self = this\n\n        self.reset()\n        \n        let handRank: HandRank = MakeHandRank()\n\n        // aggregate the ranks, suits, suit masks\n        for(let i: number = 0; i < cardsCnt; i++) {\n            const rank: CardRank = GetHand7Rank(hand, i)\n            const suit: CardSuit = GetHand7Suit(hand, i)\n            if(rank < CardRankSize) {\n                self.rankCnts[rank]++\n                self.suitCnts[suit]++\n                self.suitMasks[suit] |= (1 << rank)\n            }\n        }\n\n        let m1: number = 0 // mask for single cards\n        let m2: number = 0 // mask for the pairs\n        let m3: number = 0 // mask for sets\n        let m4: number = 0 // mask for four of a kind\n\n        let m2cnt: number = 0 // count of pairs\n        let m3cnt: number = 0 // count of sets\n\n        // determine the category based on the rank counts\n        for(let i: number = 0; i < CardRankSize; i++) {\n            const n = self.rankCnts[i]\n            if(n === 0) {\n            } else if(n === 1) {\n                m1 |= 1 << i\n            } else if(n === 2) {\n                m2 |= 1 << i\n                m2cnt++\n            } else if(n === 3) {\n                m3 |= 1 << i\n                m3cnt++\n            } else if(n === 4) {\n                m4 |= 1 << i\n            }\n        }\n\n        let mf: number = 0 // flush mask, 1 bit per card that's in the flush\n\n        for(let i: number = 0; i < CardSuitSize; i++) {\n            if(self.suitCnts[i] >= 5) {\n                mf = self.suitMasks[i]\n                break\n            }\n        }\n\n        let ms: number\n\n        // if flush then check if it's also straight flush\n        // otherwise check for just regular straight\n        if(mf !== 0) {\n            // possible straight flush\n            ms = mf << 1\n        } else {\n            // possible straight\n            // straight is not possible if four of a kind therefore not using m4\n            ms = (m1 | m2 | m3) << 1\n        }\n    \n        // copy the ace to position 0\n        if((ms & (1 << 13)) !== 0) {\n            ms |= 1\n        }\n\n        // find the straight high index\n        let msi: CardRank = CardRank2\n        while(ms >= 31) {\n            const msc: CardRank = GetHsb16(ms)\n            const mss = ms >> (msc-4)\n            if((mss & 31) === 31) {\n                msi = msc-1\n                break\n            }\n            ms &= ~(1 << msc)\n        }\n\n        if(msi !== CardRank2 && mf !== 0) {\n            // straight flush\n            handRank = SetCategory(handRank, HandRankCatStraightFlush)\n            handRank = SetCardRank(handRank, 4, msi)\n            msi--\n            handRank = SetCardRank(handRank, 3, msi)\n            msi--\n            handRank = SetCardRank(handRank, 2, msi)\n            msi--\n            handRank = SetCardRank(handRank, 1, msi)\n            // adjust for an ace\n            if(msi === CardRank2) {\n                msi = CardRankA\n            } else {\n                msi--\n            }\n            handRank = SetCardRank(handRank, 0, msi)\n        } else if(m4 !== 0) {\n            // four of a kind\n            handRank = SetCategory(handRank, HandRankCatQuads)\n            const c4: CardRank = GetHsb16(m4)\n            handRank = SetCardRank(handRank, 4, c4)\n            handRank = SetCardRank(handRank, 3, c4)\n            handRank = SetCardRank(handRank, 2, c4)\n            handRank = SetCardRank(handRank, 1, c4)\n            const c1: CardRank = GetHsb16(m3 | m2 | m1)\n            handRank = SetCardRank(handRank, 0, c1)\n        } else if(m3cnt === 2) {\n            handRank = SetCategory(handRank, HandRankCatFullHouse)\n            const c3: CardRank = GetHsb16(m3)\n            handRank = SetCardRank(handRank, 4, c3)\n            handRank = SetCardRank(handRank, 3, c3)\n            handRank = SetCardRank(handRank, 2, c3)\n            m3 &= ~(1 << c3)\n            const c2: CardRank = GetHsb16(m3)\n            handRank = SetCardRank(handRank, 1, c2)\n            handRank = SetCardRank(handRank, 0, c2)\n        } else if(m3cnt === 1 && m2cnt > 0) {\n            handRank = SetCategory(handRank, HandRankCatFullHouse)\n            const c3: CardRank = GetHsb16(m3)\n            handRank = SetCardRank(handRank, 4, c3)\n            handRank = SetCardRank(handRank, 3, c3)\n            handRank = SetCardRank(handRank, 2, c3)\n            const c2: CardRank = GetHsb16(m2)\n            handRank = SetCardRank(handRank, 1, c2)\n            handRank = SetCardRank(handRank, 0, c2)\n        } else if(mf !== 0) {\n            handRank = SetCategory(handRank, HandRankCatFlush)\n            let c: CardRank = GetHsb16(mf)\n            handRank = SetCardRank(handRank, 4, c)\n            mf &= ~(1 << c)\n            c = GetHsb16(mf)\n            handRank = SetCardRank(handRank, 3, c)\n            mf &= ~(1 << c)\n            c = GetHsb16(mf)\n            handRank = SetCardRank(handRank, 2, c)\n            mf &= ~(1 << c)\n            c = GetHsb16(mf)\n            handRank = SetCardRank(handRank, 1, c)\n            mf &= ~(1 << c)\n            c = GetHsb16(mf)\n            handRank = SetCardRank(handRank, 0, c)\n        } else if(msi !== 0) {\n            // straight\n            handRank = SetCategory(handRank, HandRankCatStraight)\n            handRank = SetCardRank(handRank, 4, msi)\n            msi--\n            handRank = SetCardRank(handRank, 3, msi)\n            msi--\n            handRank = SetCardRank(handRank, 2, msi)\n            msi--\n            handRank = SetCardRank(handRank, 1, msi)\n            // adjust for an ace\n            if(msi === 0) {\n                msi = CardRankA\n            } else {\n                msi--\n            }\n            handRank = SetCardRank(handRank, 0, msi)\n        } else if(m3 !== 0) {\n            handRank = SetCategory(handRank, HandRankCatSet)\n            const c3: CardRank = GetHsb16(m3)\n            handRank = SetCardRank(handRank, 4, c3)\n            handRank = SetCardRank(handRank, 3, c3)\n            handRank = SetCardRank(handRank, 2, c3)\n            // m2 must be zero, so try only m1\n            let c1: CardRank = GetHsb16(m1)\n            handRank = SetCardRank(handRank, 1, c1)\n            m1 &= ~(1 << c1)\n            c1 = GetHsb16(m1)\n            handRank = SetCardRank(handRank, 0, c1)\n        } else if(m2cnt > 1) {\n            handRank = SetCategory(handRank, HandRankCatTwoPair)\n            let c2: CardRank = GetHsb16(m2)\n            handRank = SetCardRank(handRank, 4, c2)\n            handRank = SetCardRank(handRank, 3, c2)\n            m2 &= ~(1 << c2)\n            c2 = GetHsb16(m2)\n            handRank = SetCardRank(handRank, 2, c2)\n            handRank = SetCardRank(handRank, 1, c2)\n            m2 &= ~(1 << c2)\n            const c1: CardRank = GetHsb16(m1 | m2)\n            handRank = SetCardRank(handRank, 0, c1)\n        } else if(m2cnt > 0) {\n            handRank = SetCategory(handRank, HandRankCatOnePair)\n            const c2: CardRank = GetHsb16(m2)\n            handRank = SetCardRank(handRank, 4, c2)\n            handRank = SetCardRank(handRank, 3, c2)\n            let c1: CardRank = GetHsb16(m1)\n            handRank = SetCardRank(handRank, 2, c1)\n            m1 &= ~(1 << c1)\n            c1 = GetHsb16(m1)\n            handRank = SetCardRank(handRank, 1, c1)\n            m1 &= ~(1 << c1)\n            c1 = GetHsb16(m1)\n            handRank = SetCardRank(handRank, 0, c1)\n        } else {\n            handRank = SetCategory(handRank, HandRankCatHighCard)\n            let c1: CardRank = GetHsb16(m1)\n            handRank = SetCardRank(handRank, 4, c1)\n            m1 &= ~(1 << c1)\n            c1 = GetHsb16(m1)\n            handRank = SetCardRank(handRank, 3, c1)\n            m1 &= ~(1 << c1)\n            c1 = GetHsb16(m1)\n            handRank = SetCardRank(handRank, 2, c1)\n            m1 &= ~(1 << c1)\n            c1 = GetHsb16(m1)\n            handRank = SetCardRank(handRank, 1, c1)\n            m1 &= ~(1 << c1)\n            c1 = GetHsb16(m1)\n            handRank = SetCardRank(handRank, 0, c1)            \n        }\n        \n        return handRank\n    }    \n}\n","// @flow\n\nimport type { Card } from './card'\nimport type { Hand7 } from './hand'\nimport type { HandRank } from './handRank'\nimport type { HandCalculator } from './handCalculator'\n\nimport { CardSize } from './card'\nimport { GetHand7Card, SetHand7Card, GetHand7HoleStr, Hand7Bad } from './hand'\nimport { GetHandCatStr, GetHandCategoryStr, HandRankStr } from './handRank'\nimport { BasicHandCalculator } from './basicHandCalculator'\n\nimport { SortedMap } from 'immutable-sorted'\n\nexport type CombosItem = {\n\thole:     string,\n\thandRank: number,\n\tcat:      string,\n\tcategory: string,\n\tresult:   string,\n\tcount:    number,\n}\n\nexport function Hand7Combos(hand: Hand7): [Array<CombosItem>, number, number, number] {\n\tif(hand === Hand7Bad) {\n\t\treturn [[], 0, 0, 0]\n\t}\n\tconst handCalc: HandCalculator = new BasicHandCalculator()\n\tconst handRank: HandRank = handCalc.CalcHandRank(hand)\n\tlet betterCombos: number = 0\n\tlet equalCombos: number = 0\n\tlet worseCombos: number = 0\n\n\tlet evalMap: SortedMap<HandRank, CombosItem> = SortedMap()\n\n\tconst handRes: CombosItem = {\n\t\thole:     GetHand7HoleStr(hand),\n\t\thandRank: handRank,\n\t\tcat:      GetHandCatStr(handRank),\n\t\tcategory: GetHandCategoryStr(handRank),\n\t\tresult:   HandRankStr(handRank),\n\t\tcount:    0,\n    }\n    \n\tevalMap = evalMap.set(handRank, handRes)\n\n\tlet mask0 = 0\n\tlet mask1 = 0\n\n\tfor(let i: number = 0; i < 7; i++) {\n        const card: Card = GetHand7Card(hand, i)\n        if(card < 32) {\n            mask0 |= (1 << card)\n        } else {\n            mask1 |= (1 << (card - 32))\n        }\n\t}\n\n\tlet h: Hand7 = hand\n\n\tfor(let c1: Card = 1; c1 < CardSize; c1++) {\n        if(c1 < 32) {\n            const c1bit: number = 1 << c1\n            if((mask0 & c1bit) !== 0) {\n                continue\n            }\n        } else {\n            const c1bit: number = 1 << (c1 - 32)\n            if((mask1 & c1bit) !== 0) {\n                continue\n            }\n        }\n\t\tfor(let c2: Card = 0; c2 < c1; c2++) {\n            if(c2 < 32) {\n                const c2bit: number = 1 << c2\n                if((mask0 & c2bit) !== 0) {\n                    continue\n                }\n            } else {\n                const c2bit: number = 1 << (c2 - 32)\n                if((mask1 & c2bit) !== 0) {\n                    continue\n                }\n            }\n\t\t\tconst card1: Card = c1\n\t\t\tconst card2: Card = c2\n\t\t\th = SetHand7Card(h, 0, card1)\n\t\t\th = SetHand7Card(h, 1, card2)\n\t\t\tconst hRank: HandRank = handCalc.CalcHandRank(h)\n\n\t\t\tlet hRes: ?CombosItem = evalMap.get(hRank)\n\t\t\tif(hRes) {\n\t\t\t\thRes.count++\n\t\t\t} else {\n\t\t\t\thRes = {\n\t\t\t\t\thole:     GetHand7HoleStr(h),\n\t\t\t\t\thandRank: hRank,\n\t\t\t\t\tcat:      GetHandCatStr(hRank),\n\t\t\t\t\tcategory: GetHandCategoryStr(hRank),\n\t\t\t\t\tresult:   HandRankStr(hRank),\n\t\t\t\t\tcount:    1,\n\t\t\t\t}\n\t\t\t\tevalMap = evalMap.set(hRank, hRes)\n\t\t\t}\n\n\t\t\tif(hRank > handRank) {\n\t\t\t\tbetterCombos++\n\t\t\t} else if(hRank === handRank) {\n\t\t\t\tequalCombos++\n\t\t\t} else {\n\t\t\t\tworseCombos++\n\t\t\t}\n\t\t}\n\t}\n\tconst hResArr = evalMap.toIndexedSeq().reverse().toArray()\n\n\treturn [hResArr, betterCombos, equalCombos, worseCombos]\n}\n","// @flow\n\nimport type { Rng } from './rng'\n\nexport class Sfc32 implements Rng\n{\n    a: number\n    b: number\n    c: number\n    d: number\n\n    constructor() {\n        const now: number = Date.now()\n        const a: number = now+Math.floor(Math.random()*1000000000)\n        const b: number = 13*a+now+Math.floor(Math.random()*1000000000)\n        const c: number = 17*b+now+Math.floor(Math.random()*1000000000)\n        const d: number = 31*c+now+Math.floor(Math.random()*1000000000)\n        this.seed(a, b, c, d)\n    }\n\n    seed(a: number, b: number, c: number, d: number): void {\n        this.a = a\n        this.b = b\n        this.c = c\n        this.d = d\n    }\n\n    next(): number {\n        this.a >>>= 0\n        this.b >>>= 0\n        this.c >>>= 0\n        this.d >>>= 0\n\n        let t = (this.a + this.b) | 0\n        this.a = this.b ^ (this.b >>> 9)\n        this.b = this.c + (this.c << 3) | 0\n        this.c = (this.c << 21) | (this.c >>> 11)\n        this.d = this.d + 1 | 0\n        t = t + this.d | 0\n        this.c = this.c + t | 0\n        return (t >>> 0)\n    }\n}\n","// @flow\n\nimport type { Rng } from './rng'\nimport type { Card } from \"./card\"\n\nimport { Sfc32 } from \"./sfc32\"\nimport { CardSize, CardWildCard, CardNull } from \"./card\"\n\nexport class Deck {\n    mask0: number\n    mask1: number\n    rng: Rng\n\n\tconstructor()\n\t{\n        this.mask0 = 0\n        this.mask1 = 0\n        this.rng = new Sfc32()\n\t}\n    \n\tmix(): void\t{\n\t\tthis.mask0 = 0;\n\t\tthis.mask1 = 0;\n\t}\n\t\n\tremoveCard(card: Card): void {\n\t\tthis.setMask(card)\n\t}\n\n\tsetMask(card: Card): void {\n\t\tif(card !== CardWildCard) {\n\t\t\tif(card < 32) {\n\t\t\t\tthis.mask0 |= 1 << card\n\t\t\t} else {\n\t\t\t\tthis.mask1 |= 1 << (card - 32)\n\t\t\t}\n\t\t}\n\t}\n\t\n\tgetMask(card: Card): number {\n        if(card < 32) {\n            return this.mask0 & (1 << card)\n        } else {\n            return this.mask1 & (1 << (card - 32))\n        }\n\t}\n\t\n\t// returns the value of the card\n\t// lower 2 bits are suite, upper bits are value from 0 - 12\n\tgetNextCard(): Card {\n\t\t// get next card\n\t\twhile(this.rng) {\n\t\t\t// generate a random number between 0 an 63\n\t\t\tconst rn: number = this.rng.next()\n\t\t\tconst n: number = rn & 0x3F\n\n\t\t\tif(n < CardSize && this.getMask(n) === 0) {\n\t\t\t\tthis.setMask(n)\n\t\t\t\treturn n\n\t\t\t}\n\t\t}\n\t\treturn CardNull\n\t}\n}\n","// @flow\n\nimport type { Card } from './card'\nimport type { Hand7 } from './hand'\nimport type { HandCalculator } from './handCalculator'\n\nimport { CardWildCard } from './card'\nimport { MakeHand7, SetHand7Card, GetHand7Card, StringToHand7 } from './hand'\nimport { Deck } from './deck'\n\nconst MaxPlayers: number = 9\n\nexport type HandEvalRequest = {\n\tnsims: number,\n\tplayers: number,\n\n\tcard1: Card,\n\tcard2: Card,\n\t\n\tboard1: Card,\n\tboard2: Card,\n\tboard3: Card,\n\tboard4: Card,\n\tboard5: Card,\n}\n\nexport type HandEvalResult = {\n\trequest: HandEvalRequest,\n\terr: string,\n\n\tgames: number,\n\twins: number,\n\tties: number,\n\tpties: number, // pot ties, number of ties expressed as number of pots\n\tlosses: number,\n}\n\nexport function MakeHandEvalRequest(nsims: number, players: number): HandEvalRequest {\n\treturn {\n        nsims: nsims,\n        players: players,\n\n        card1: CardWildCard,\n        card2: CardWildCard,\n        \n        board1: CardWildCard,\n        board2: CardWildCard,\n        board3: CardWildCard,\n        board4: CardWildCard,\n        board5: CardWildCard,\n    }\n}\n\nexport function MakeHandEvalResult(handEvalRequest: HandEvalRequest, err: string): HandEvalResult {\n\treturn {\n\t\trequest: handEvalRequest,\n\t\terr: err,\n\t\n\t\tgames: 0,\n\t\twins: 0,\n\t\tties: 0,\n\t\tpties: 0, // pot ties, number of ties expressed as number of pots\n\t\tlosses: 0,\n\t\n\t\twp: 0,\n\t\two: 0,\n\t\ter: 0,\n\t}\n}\n\nexport function HandEvalRequestSetHand(evalRequest: HandEvalRequest, handStr: string): string {\n\tlet result: [Hand7, string] = StringToHand7(handStr)\n    let hand = result[0]\n    let err = result[1]\n\tif(err) {\n\t\treturn err\n\t}\n\n\tevalRequest.card1 = GetHand7Card(hand, 0)\n\tevalRequest.card2 = GetHand7Card(hand, 1)\n\t\n\tevalRequest.board1 = GetHand7Card(hand, 2)\n\tevalRequest.board2 = GetHand7Card(hand, 3)\n\tevalRequest.board3 = GetHand7Card(hand, 4)\n\tevalRequest.board4 = GetHand7Card(hand, 5)\n\tevalRequest.board5 = GetHand7Card(hand, 6)\n\treturn \"\"\n}\n\nexport class HandEvaluator {\n\n\tsleep(ms: number): Promise<void> {\n\t\treturn new Promise(resolve => setTimeout(resolve, ms));\n\t}\n\t\t\n\tasync eval(handCalculator: HandCalculator, request: HandEvalRequest, result: HandEvalResult): Promise<void>\n\t{\t\n\t\tlet h = MakeHand7()\n\t\tlet wins = 0\n\t\tlet ties = 0\n\t\tlet pties = 0 // proportional ties, divided by number of splitting players\n\t\tlet losses = 0\n\t\tconst deck = new Deck()\n\t\tconst nsims = request.nsims\n\t\tconst players = request.players\n\n\t\tif(!(2 <= players && players <= MaxPlayers)) {\n\t\t\tresult.err = \"invalid number of players\"\n\t\t\treturn\n\t\t}\n\n\t\tawait this.sleep(0)\n\n\t\tfor(let n = 0; n < nsims; n++) {\n\t\t\tif((n & 131071) === 0) {\n\t\t\t\tawait this.sleep(0)\n\t\t\t}\n\t\t\tdeck.mix()\n\t\t\tdeck.removeCard(request.card1)\n\t\t\tdeck.removeCard(request.card2)\n\t\t\tdeck.removeCard(request.board1)\n\t\t\tdeck.removeCard(request.board2)\n\t\t\tdeck.removeCard(request.board3)\n\t\t\tdeck.removeCard(request.board4)\n\t\t\tdeck.removeCard(request.board5)\n\t\t\t\n\t\t\t// deal the cards\n\t\t\tconst card1 = request.card1 === CardWildCard ? deck.getNextCard() : request.card1\n\t\t\tconst card2 = request.card2 === CardWildCard ? deck.getNextCard() : request.card2\n\t\t\t\n\t\t\t// deal the board\n\t\t\tconst board1 = request.board1 === CardWildCard ? deck.getNextCard() : request.board1\n\t\t\tconst board2 = request.board2 === CardWildCard ? deck.getNextCard() : request.board2\n\t\t\tconst board3 = request.board3 === CardWildCard ? deck.getNextCard() : request.board3\n\t\t\tconst board4 = request.board4 === CardWildCard ? deck.getNextCard() : request.board4\n\t\t\tconst board5 = request.board5 === CardWildCard ? deck.getNextCard() : request.board5\n\n\t\t\th = SetHand7Card(h, 2, board1)\n\t\t\th = SetHand7Card(h, 3, board2)\n\t\t\th = SetHand7Card(h, 4, board3)\n\t\t\th = SetHand7Card(h, 5, board4)\n\t\t\th = SetHand7Card(h, 6, board5)\n\t\n\t\t\th = SetHand7Card(h, 0, card1)\n\t\t\th = SetHand7Card(h, 1, card2)\n\t\t\tlet playerHr = handCalculator.CalcHandRank(h)\n\t\t\tlet winnerHr = playerHr\n\t\t\tlet tieHands = 0\n\n\t\t\tfor(let i = 1; i < players; i++) {\t\t\t\t\n\t\t\t\th = SetHand7Card(h, 0, deck.getNextCard())\n\t\t\t\th = SetHand7Card(h, 1, deck.getNextCard())\n\t\t\t\t\n\t\t\t\tconst hr = handCalculator.CalcHandRank(h)\n\t\t\t\t\n\t\t\t\tif(hr > winnerHr) {\n\t\t\t\t\twinnerHr = hr\n\t\t\t\t\ttieHands = 0\n\t\t\t\t} else if(hr === winnerHr) {\n\t\t\t\t\ttieHands++\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(playerHr === winnerHr) {\n\t\t\t\tif(tieHands > 0) {\n\t\t\t\t\tties++\n\t\t\t\t\tpties += 1 / (tieHands + 1)\n\t\t\t\t} else {\n\t\t\t\t\twins++\n\t\t\t\t}\t\t\t\t\n\t\t\t} else {\n\t\t\t\t// loss\n\t\t\t\tlosses++\n\t\t\t}\n\t\t}\n\t\n\t\tresult.request = request\n\t\tresult.games = request.nsims\n\t\tresult.wins = wins\n\t\tresult.ties = ties\n\t\tresult.pties = pties\n\t\tresult.losses = losses\n\t}\n}\n","// @flow\n\nimport type { Card } from './card'\nimport type { Hand7 } from './hand'\nimport type { HandRank } from './handRank'\nimport type { HandCalculator } from './handCalculator'\n\nimport { CardRankSize, CardSuitSize, CardRankA } from './card'\nimport { GetHand7Card } from './hand'\nimport { MakeHandRank, SetCategory, SetCardRank } from './handRank'\n// import { HandRankCatHighCard, HandRankCatOnePair, HandRankCatTwoPair, HandRankCatSet, HandRankCatStraight, HandRankCatFlush, HandRankCatFullHouse, HandRankCatQuads, HandRankCatStraightFlush } from './handRank'\n// import { GetHsb16 } from './hsb'\n\nconst POKER_HAND = 5\n\nconst  HIGH = 0\nconst  PAIR = 1\nconst  TWOPAIR = 2\nconst  THREEKIND = 3\nconst  STRAIGHT = 4\nconst  FLUSH = 5\nconst  FULLHOUSE = 6\nconst  FOURKIND = 7\nconst  STRAIGHTFLUSH = 8\nconst  FIVEKIND = 9\n\nconst  ID_GROUP_SIZE  = (CardRankSize*CardRankSize*CardRankSize*CardRankSize*CardRankSize)\n\nexport class LokiHandCalculator implements HandCalculator {\n    CalcHandRank(hand: Hand7): HandRank {\n        return calcHandRank(hand)\n    }\n}\n\nfunction ID_ExistsStraightFlush(h: Array<number>, straight_high: Array<number>, major_suit: number): boolean {\n    let i: number\n    let straight: number\n    let high: number\n    const present: Array<boolean> = new Array<boolean>(CardRankSize)\n    \n    for (i=0;i<CardRankSize;i++) present[i]=false\n\n    for (i=0;i<h.length;i++)\n            if (getSuit(h[i]) === major_suit)\n                    present[getRank(h[i])] = true\n\n    straight = present[CardRankA] ? 1 : 0\n    high = 0\n    for (i=0;i<CardRankSize;i++) {\n        if (present[i]) {\n            if ( (++straight) >= POKER_HAND)\n                high = i\n        } else straight = 0\n    }\n    if (high === 0) return false\n    straight_high[0] = high\n    return true\n}\n\n/**********************************************************************/\n// DENIS PAPP'S HAND RANK IDENTIFIER CODE:\n/**********************************************************************/\n\n\n// suit: CardSuitSize means any\n// not_allowed: CardRankSize means any\n// returns ident value\nfunction ID_KickerValue(paired: Array<number>, kickers: number, not_allowed0: number, not_allowed1: number): number {\n    let i: number = CardRankA\n    let value: number = 0\n    while (kickers !== 0) {\n        while ( paired[i]===0 || i===not_allowed0 || i===not_allowed1)\n            i--\n        kickers--\n        value+=pow(CardRankSize,kickers)*i\n        i--\n    }\n    return value\n}\n\nfunction ID_KickerValueSuited(h: Array<number>, kickers: number, suit: number): number {\n    let i: number\n    let value: number=0\n\n    const present: Array<boolean> = new Array<boolean>(CardRankSize)\n    for (i=0;i<CardRankSize;i++) present[i] = false\n\n    for (i=0;i<h.length;i++)\n        if (getSuit(h[i]) === suit)\n            present[getRank(h[i])] = true\n\n    i = CardRankA\n    while (kickers !== 0) {\n        while (present[i] === false) i--\n        kickers--\n        value += pow(CardRankSize,kickers)*i\n        i--\n    }\n    return value\n}\n\nfunction calcHandRank(h: Hand7): number\n{\n    const bh: Array<Card> = new Array<number>(7)\n    \n    for(let i = 0; i < 7; i++)\n    {\n        bh[i] = GetHand7Card(h, i)\n    }\n    let loki: number = rankHand_loki(bh)\n    \n    // Convert Loki value into HandRank\n    const hc = Math.floor(loki / ID_GROUP_SIZE)\n    loki %= ID_GROUP_SIZE\n    let cr0 = loki % CardRankSize\n    loki = Math.floor(loki / CardRankSize)\n    let cr1 = loki % CardRankSize\n    loki = Math.floor(loki / CardRankSize)\n    let cr2 = loki % CardRankSize\n    loki = Math.floor(loki / CardRankSize)\n    let cr3 = loki % CardRankSize\n    loki = Math.floor(loki / CardRankSize)\n    let cr4 = loki % CardRankSize\n    loki = Math.floor(loki / CardRankSize)\n    \n    // Fix the full house situation\n    if(hc === FULLHOUSE)\n    {\n        cr4 = cr3 = cr2 = cr1\n        cr1 = cr0\n    }\n    else if(hc === PAIR)\n    {\n        cr4 = cr3\n    }\n    else if(hc === THREEKIND)\n    {\n        cr4 = cr3 = cr2\n    }\n    else if(hc === FOURKIND)\n    {\n        cr4 = cr3 = cr2 = cr1\n    }\n    else if(hc === TWOPAIR)\n    {\n        cr4 = cr3 = cr2\n        cr2 = cr1\n    }\n    else if(hc === STRAIGHT)\n    {\n        cr4 = cr0\n        cr3 = cr4-1\n        cr2 = cr3-1\n        cr1 = cr2-1\n        cr0 = cr1===0?12:cr1-1\n    }\n    else if(hc === STRAIGHTFLUSH)\n    {\n        cr4 = cr0\n        cr3 = cr4-1\n        cr2 = cr3-1\n        cr1 = cr2-1\n        cr0 = cr1===0?12:cr1-1\n    }\n\n    let hv: HandRank = MakeHandRank()\n    hv = SetCategory(hv, hc)\n    hv = SetCardRank(hv, 0, cr0)\n    hv = SetCardRank(hv, 1, cr1)\n    hv = SetCardRank(hv, 2, cr2)\n    hv = SetCardRank(hv, 3, cr3)\n    hv = SetCardRank(hv, 4, cr4)\n    \n    return hv\n}\n\n/**\n * Get a numerical ranking of this hand.\n * Uses java based code, so may be slower than using the native\n * methods, but is more compatible this way.\n *\n * Based on Denis Papp's Loki Hand ID code (id.cpp)\n * Given a 1-9 card hand, will return a unique rank \n     * such that any two hands will be ranked with the \n     * better hand having a higher rank. \n *\n * @param h a 1-9 card hand\n * @return a unique number representing the hand strength of the best \n * 5-card poker hand in the given 7 cards. The higher the number, the better\n * the hand is.\n */\nfunction rankHand_loki(h: Array<number>): number\n{\n    let straight: boolean = false\n    let flush: boolean = false\n    const max_hand: number = (h.length >= POKER_HAND ? POKER_HAND : h.length)\n    let r: number\n    let c: number\n    let rank: number\n    let suit: number\n    \n    // pair data\n    let group_size: Array<number> = new Array<number>(POKER_HAND+1)\n    let paired: Array<number> = new Array<number>(CardRankSize)\n    let pair_rank0: Array<number> = new Array<number>(POKER_HAND+1)\n    let pair_rank1: Array<number> = new Array<number>(POKER_HAND+1)\n\n    // straight\n    let straight_high: number = 0\n    let straight_size: number\n    // flush\n    let suit_size: Array<number> = new Array<number>(CardSuitSize)\n    let major_suit: number = 0\n\n    // determine pairs, dereference order data, check flush\n    for (r=0;r<CardRankSize;r++) paired[r] = 0\n    for (r=0;r<CardSuitSize;r++) suit_size[r] = 0\n    for (r=0;r<=POKER_HAND;r++) group_size[r] = 0\n    for (r=0;r<h.length;r++)\n    {\n        // int tmpint = r\n        rank = getRank(h[r])\n        suit = getSuit(h[r])\n        \n        paired[rank]++\n        group_size[paired[rank]]++\n        if (paired[rank] !== 0)\n            group_size[paired[rank]-1]--\n        if ((++suit_size[suit]) >= POKER_HAND)\n        {\n            flush = true\n            major_suit = suit\n        }\n    }\n    // Card.ACE low?\n    straight_size = paired[CardRankA] !== 0 ? 1 : 0\n\n    for (let i=0;i<(POKER_HAND+1);i++) {\n        pair_rank0[i] = CardRankSize\n        pair_rank1[i] = CardRankSize\n    }\n\n    // check for straight and pair data\n    for (r=0;r<CardRankSize;r++) {\n        // check straight\n        if (paired[r]!==0) {\n            if ( (++straight_size)>=POKER_HAND ) {\n                straight = true\n                straight_high =r\n            }\n        } else\n            straight_size = 0\n\n        // get pair ranks, keep two highest of each\n        c = paired[r]\n        if ( c !== 0 ) {\n            pair_rank1[c] = pair_rank0[c]\n            pair_rank0[c] = r\n        }\n    }\n\n    // now id type\n    let ident: number\n    \n    let str_hi: Array<number> = new Array<number>(1)\n    str_hi[0] = (straight_high)\n     \n    if (group_size[POKER_HAND] !== 0) {\n        ident = FIVEKIND*ID_GROUP_SIZE\n        ident+=pair_rank0[POKER_HAND]\n    } else if ( straight && flush && ID_ExistsStraightFlush(h,str_hi,major_suit)) {\n        straight_high = str_hi[0]\n        ident = STRAIGHTFLUSH*ID_GROUP_SIZE\n        ident+=straight_high\n    } else if (group_size[4] !== 0) {\n        ident = FOURKIND*ID_GROUP_SIZE\n        ident+=pair_rank0[4]*CardRankSize\n        pair_rank1[4] = CardRankSize    // just in case 2 sets quads\n        ident+=ID_KickerValue(paired,1,pair_rank0[4],pair_rank1[4])\n    } else if (group_size[3]>=2) {\n        ident = FULLHOUSE*ID_GROUP_SIZE\n        ident+=pair_rank0[3]*CardRankSize\n        ident+=pair_rank1[3]\n    } else if (group_size[3]===1 && group_size[2]!==0) {\n        ident = FULLHOUSE*ID_GROUP_SIZE\n        ident+=pair_rank0[3]*CardRankSize\n        ident+=pair_rank0[2]\n    } else if (flush) {\n        ident = FLUSH*ID_GROUP_SIZE\n        ident+=ID_KickerValueSuited(h,5,major_suit)\n    } else if (straight) {\n        ident = STRAIGHT*ID_GROUP_SIZE\n        ident+=straight_high\n    } else if (group_size[3]===1) {\n        ident = THREEKIND*ID_GROUP_SIZE\n        ident+=pair_rank0[3]*CardRankSize*CardRankSize\n        ident+=ID_KickerValue(paired,max_hand-3,pair_rank0[3],pair_rank1[3])\n    } else if (group_size[2]>=2) {\n        ident = TWOPAIR*ID_GROUP_SIZE\n        ident+=pair_rank0[2]*CardRankSize*CardRankSize\n        ident+=pair_rank1[2]*CardRankSize\n        ident+=ID_KickerValue(paired,max_hand-4,pair_rank0[2],pair_rank1[2])\n    } else if (group_size[2]===1) {\n        ident = PAIR*ID_GROUP_SIZE\n        ident+=pair_rank0[2]*CardRankSize*CardRankSize*CardRankSize\n        ident+=ID_KickerValue(paired,max_hand-2,pair_rank0[2],pair_rank1[2])\n    } else {\n        ident = HIGH*ID_GROUP_SIZE\n        ident+=ID_KickerValue(paired,max_hand,pair_rank0[2],pair_rank1[2])\n    }\n    return ident\n}\n\n\nfunction pow(n: number, p: number): number {\n    let res: number = 1\n    while (p-- > 0)\n        res *= n\n    return res\n}\n\nfunction getRank(x: number): number {\n    return Math.floor(x/CardSuitSize)\n}\n\nfunction getSuit(x: number): number {\n    return x%CardSuitSize\n}\n","// @flow\n\nimport type { Hand7 } from '../calc/hand'\nimport type { HandRank } from '../calc/handRank'\nimport type { CombosItem } from '../calc/handCombos'\nimport type { HandCalculator } from '../calc/handCalculator'\nimport type { HandEvalRequest, HandEvalResult } from '../calc/handEvaluator'\nimport type { CalcType, PoserApiInterface, ApiOptions, HandCalcResp, HandEvalResp, HandEvalPlayersResp } from \"./poserApi\"\n\nimport { MakeHandEvalResp } from \"./poserApi\"\nimport { StringToHand7, Hand7Bad, GetHand7HoleStr } from '../calc/hand'\nimport { GetHandCatStr, GetHandCategoryStr, HandRankStr } from '../calc/handRank'\nimport { HandRankBad } from '../calc/handRank'\nimport { Hand7Combos } from '../calc/handCombos'\nimport { HandEvaluator, MakeHandEvalRequest, MakeHandEvalResult, HandEvalRequestSetHand } from '../calc/handEvaluator'\n\nimport { BasicHandCalculator } from '../calc/basicHandCalculator'\nimport { LokiHandCalculator } from '../calc/lokiHandCalculator'\n\nexport class LocaljsApi implements PoserApiInterface {\n\n\thandEvaluator: HandEvaluator\n\n\tconstructor() {\n\t\tthis.handEvaluator = new HandEvaluator()\n\t}\n\n    MakeHandCalculator(calcType: CalcType): HandCalculator {\n        let handCalculator: HandCalculator\n    \n        switch(calcType) {\n            case \"basic\":\n                handCalculator = new BasicHandCalculator()\n                break\n            case \"fast\":\n                throw new Error(\"calculator type not supported in web browser: \"+calcType)\n            case \"loki\":\n                handCalculator = new LokiHandCalculator()\n                break\n            default:\n                throw new Error(\"invalid calculator type: \"+calcType)\n        }\n        \n        return handCalculator\n    }\n    \n\tasync HandCalc(apiOptions: ApiOptions, handStr: string, calcType: CalcType): Promise<HandCalcResp> {\n\t\tconst handRes: [Hand7, string] = StringToHand7(handStr)\n\t\tconst hand = handRes[0]\n\t\tconst err = handRes[1]\n\n\t\tlet handErr: string = \"\"\n\t\tlet handRank: HandRank = HandRankBad\n\t\tlet holeStr: string = \"\"\n\t\tlet handCat: string = \"\"\n\t\tlet handCategory: string = \"\"\n\t\tlet handResult: string = \"\"\n\n\t\tif(err) {\n\t\t\thandErr = err\n\t\t} else {\n\t\t\tconst handCalc: HandCalculator = this.MakeHandCalculator(calcType)\n\t\t\thandRank = handCalc.CalcHandRank(hand)\n\t\t\thandCat = GetHandCatStr(handRank)\n\t\t\thandCategory = GetHandCategoryStr(handRank)\n\t\t\thandResult = HandRankStr(handRank)\n\t\t\tholeStr = GetHand7HoleStr(hand)\n\t\t}\n\t\tconst handValid: boolean = hand !== Hand7Bad\n\t\tconst combosResult: [Array<CombosItem>, number, number, number] = Hand7Combos(hand)\n\t\tconst handCombos: Array<CombosItem> = combosResult[0]\n\t\tconst betterCombos: number = combosResult[1]\n\t\tconst equalCombos: number = combosResult[2]\n\t\tconst worseCombos: number = combosResult[3]\n\n\t\tconst result: HandCalcResp = {\n\t\t\ttype: \"handCalc\",\n\t\t\terr:          err,\n\t\t\thandStr:      handStr,\n\t\t\thand:         hand,\n\t\t\thandValid:    handValid,\n\t\t\thandErr:      handErr,\n\t\t\thandRank:     handRank,\n\t\t\thole:         holeStr,\n\t\t\thandCat:      handCat,\n\t\t\thandCategory: handCategory,\n\t\t\thandResult:   handResult,\n\t\t\thandCombos:   handCombos,\n\t\t\tbetterCombos: betterCombos,\n\t\t\tequalCombos:  equalCombos,\n\t\t\tworseCombos:  worseCombos,\n\t\t}\n\n\t\treturn result\n\t}\n\t\n\tasync HandEval(apiOptions: ApiOptions, nsims: number, players: number, handStr: string, calcType: CalcType): Promise<HandEvalResp> {\n        const handCalc: HandCalculator = this.MakeHandCalculator(calcType)\n\t\tconst evalRequest: HandEvalRequest = MakeHandEvalRequest(nsims, players)\n\n\t\tlet err = HandEvalRequestSetHand(evalRequest, handStr)\n\n\t\tconst evalResult: HandEvalResult = MakeHandEvalResult(evalRequest, err)\n\t\tif(!err) {\n\t\t\tawait this.handEvaluator.eval(handCalc, evalRequest, evalResult)\n\t\t}\n\n\t\treturn MakeHandEvalResp(evalResult)\n\t}\n\n\tasync HandEvalPlayers(apiOptions: ApiOptions, nsims: number, handStr: string, calcType: CalcType): Promise<HandEvalPlayersResp> {\n        const handCalc: HandCalculator = this.MakeHandCalculator(calcType)\n\t\tconst handEvals: Array<HandEvalResp> = []\n\t\tlet err = \"\"\n\n\t\tfor(let players: number = 2; players <= 9; players++) {\n\t\t\tconst evalRequest: HandEvalRequest = MakeHandEvalRequest(nsims, players)\n\t\t\terr = HandEvalRequestSetHand(evalRequest, handStr)\n\t\t\tif(err) {\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tconst evalResult: HandEvalResult = MakeHandEvalResult(evalRequest, err)\n\t\t\tawait this.handEvaluator.eval(handCalc, evalRequest, evalResult)\n\t\t\thandEvals.push(MakeHandEvalResp(evalResult))\n\t\t\tif(evalResult.err) {\n\t\t\t\terr = evalResult.err\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tconst resp: HandEvalPlayersResp = {\n\t\t\ttype: \"handEvalPlayers\",\n\t\t\terr: err,\n\t\t\thandEvals: handEvals,\n\t\t}\n\n\t\treturn resp\n\t}\n}\n","// @flow\n\nimport type { CalcType, PoserApiInterface, ApiOptions } from \"./poserApi\"\nimport type { HandCalcResp, HandEvalResp, HandEvalPlayersResp, ErrResp } from \"./poserApi\"\n\nimport { MakeErrResp } from './poserApi'\n\ntype WorkerReq = {\n    api: string,\n    id: number,\n    apiOptions: ApiOptions,\n    args: Array<mixed>,\n}\n\ntype WorkerResp = {\n    api: string,\n    id: number,\n    args: Array<mixed>,\n    result: HandCalcResp | HandEvalResp | HandEvalPlayersResp | ErrResp\n}\n\nexport class WorkerApi implements PoserApiInterface {\n    id: number\n    promises: {[number]: any}\n    worker: Worker\n    workerScriptUrl: string\n\n    constructor(workerScriptUrl: string) {\n        this.workerScriptUrl = workerScriptUrl\n        this.id = 0\n        this.promises = {}\n    }\n\n\tsleep(ms: number): Promise<void> {\n\t\treturn new Promise(resolve => setTimeout(resolve, ms));\n\t}\n\n    checkCalcType(calcType: CalcType) {\n        switch(calcType) {\n            case \"basic\":\n            case \"loki\":\n                break\n            case \"fast\":\n                throw new Error(\"Calculator not supported in web browser: \"+calcType)\n            default:\n                throw new Error(\"Unknown calculator type: \"+calcType)\n        }\n    }\n\n    async _setup(): Promise<void> {\n        if(this.worker) {\n            // The module has been already setup\n            await this.sleep(0)\n        } else {\n            this.worker = new Worker(this.workerScriptUrl)\n            this.worker.onmessage = (e) => {\n                const data = ((e.data: any): WorkerResp)\n                // received a response\n                const id = data.id\n                const resolve = this.promises[id]\n                delete this.promises[id]\n                resolve(data.result)\n            }\n        }\n    }\n\n    post(api: string, apiOptions: ApiOptions, args: Array<mixed>): Promise<WorkerResp> {\n        return new Promise(resolve => {\n            // send a request\n            if(this.worker) {\n                this.promises[this.id] = resolve\n                const workerReq: WorkerReq = {api, id: this.id, apiOptions, args: [...args]}\n                this.worker.postMessage(workerReq)\n                this.id++\n            }\n        })\n    }\n\n    async HandCalc(apiOptions: ApiOptions, handStr: string, calcType: CalcType): Promise<HandCalcResp | ErrResp> {\n        try {\n            this.checkCalcType(calcType)\n            await this._setup()\n            const resp = await this.post(\"HandCalc\", apiOptions, [handStr, calcType])\n            return resp\n        } catch(ex) {\n            return MakeErrResp(ex.toString())\n        }\n    }\n\t\n    async HandEval(apiOptions: ApiOptions, nsims: number, players: number, handStr: string, calcType: CalcType): Promise<HandEvalResp | ErrResp> {\n        try {\n            this.checkCalcType(calcType)\n            await this._setup()\n            const resp = await this.post(\"HandEval\", apiOptions, [nsims, players, handStr, calcType])\n            return resp\n        } catch(ex) {\n            return MakeErrResp(ex.toString())\n        }\n    }\n\n    async HandEvalPlayers(apiOptions: ApiOptions, nsims: number, handStr: string, calcType: CalcType): Promise<HandEvalPlayersResp | ErrResp> {\n        try {\n            this.checkCalcType(calcType)\n            await this._setup()\n            const resp = await this.post(\"HandEvalPlayers\", apiOptions, [nsims, handStr, calcType])\n            return resp\n        } catch(ex) {\n            return MakeErrResp(ex.toString())\n        }\n    }\n}\n","// @flow\n\nimport type { PoserApiInterface } from \"./poserApi\"\nimport { WorkerApi } from './workerApi'\n\nexport class JsApi extends WorkerApi implements PoserApiInterface {\n    constructor() {\n        super(\"js/js_worker.js\")\n    }\n}\n","// @flow\n\nimport type { PoserApiInterface } from \"./poserApi\"\nimport { WorkerApi } from './workerApi'\n\nexport class GojsApi extends WorkerApi implements PoserApiInterface {\n    constructor() {\n        super(\"gojs/gojs_worker.js\")\n    }\n}\n","// @flow\n\nimport type { PoserApiInterface } from \"./poserApi\"\nimport { WorkerApi } from './workerApi'\n\nexport class WasmApi extends WorkerApi implements PoserApiInterface {\n    constructor() {\n        super(\"wasm/wasm_worker.js\")\n    }\n}\n","// @flow\n\nimport type { Hand7 } from '../calc/hand'\nimport type { CombosItem } from '../calc/handCombos'\nimport type { HandEvalRequest, HandEvalResult } from '../calc/handEvaluator'\n\nimport { LocaljsApi } from \"./localjsApi\"\nimport { JsApi } from \"./jsApi\"\nimport { GojsApi } from \"./gojsApi\"\nimport { RestApi } from \"./restApi\"\nimport { WasmApi } from \"./wasmApi\"\n\nexport type ApiType = \"localjs\" | \"js\" | \"gojs\" | \"wasm\" | \"rest\"\nexport type CalcType = \"basic\" | \"fast\" | \"loki\"\nexport type RespType = \"err\" | \"handCalc\" | \"handEval\" | \"handEvalPlayers\"\n\nexport type ErrResp = {\n\ttype: \"err\",\n\terr: string,\n}\n\nexport type HandCalcResp = {\n\ttype: \"handCalc\",\n\terr:          string,\n\thandStr:      string,\n\thand:         Hand7,\n\thandValid:    boolean,\n\thandErr:      string,\n\thandRank:     number,\n\thole:         string,\n\thandCat:      string,\n\thandCategory: string,\n\thandResult:   string,\n\tbetterCombos: number,\n\tequalCombos:  number,\n\tworseCombos:  number,\n\thandCombos:   Array<CombosItem>,\n}\n\nexport type HandEvalResp = {\n\ttype: \"handEval\",\n\trequest: HandEvalRequest,\n\terr: string,\n\tfinalPlayers: number,\n\n\tgames: number,\n\twins: number,\n\tties: number,\n\tpties: number, // pot ties, number of ties expressed as number of pots\n\tlosses: number,\n\n\t// win probablity: a number between 0 and 1\n\t// the probability of winning the pot, includes the proportional ties\n\twp: number,\n\n\t// winning odds (loss / win ratio)\n\t// represented as wo : 1\n\t// if wp is 1 then wo is 0\n\t// if wp is 0 then wo is Infinity\n\two: number,\n\n\t// expected return: the average profit or loss, is case you decide to bet\n\t// the value of the bet is subtracted\n\t// the ev is a number between (-1) and (number of players - 1)\n\ter: number,\n}\n\nexport type HandEvalPlayersResp = {\n\ttype: \"handEvalPlayers\",\n\terr: string,\n\thandEvals: Array<HandEvalResp>,\n}\n\nexport type ApiOptions = {\n\tapiType: \"localjs\"|\"js\"|\"gojs\"|\"wasm\",\n} | {\n\tapiType: \"rest\",\n\tserver: string, \n\tthreads: number,\n}\n\nexport interface PoserApiInterface {\n\tHandCalc(apiOptions: ApiOptions, handStr: string, calcType: CalcType): Promise<HandCalcResp | ErrResp>;\n\tHandEval(apiOptions: ApiOptions, nsims: number, players: number, handStr: string, calcType: CalcType): Promise<HandEvalResp | ErrResp>;\n\tHandEvalPlayers(apiOptions: ApiOptions, nsims: number, handStr: string, calcType: CalcType): Promise<HandEvalPlayersResp | ErrResp>;\n}\n\nexport class PoserApi implements PoserApiInterface {\n\t\n\tlocaljsApi: PoserApiInterface\n\tjsApi: PoserApiInterface\n\tgojsApi: PoserApiInterface\n\trestApi: PoserApiInterface\n\twasmApi: PoserApiInterface\n\n\tconstructor(secret: string) {\n\t\tthis.localjsApi = new LocaljsApi()\n\t\tthis.jsApi = new JsApi()\n\t\tthis.gojsApi = new GojsApi()\n\t\tthis.restApi = new RestApi(secret)\n\t\tthis.wasmApi = new WasmApi()\n\t}\n\n\tgetApiInterface(apiOptions: ApiOptions): PoserApiInterface {\n\t\tlet apiInterface: PoserApiInterface\n\t\tswitch(apiOptions.apiType) {\n\t\t\tcase \"localjs\":\n\t\t\t\tapiInterface = this.localjsApi\n\t\t\t\tbreak\n\t\t\tcase \"js\":\n\t\t\t\tapiInterface = this.jsApi\n\t\t\t\tbreak\n\t\t\tcase \"gojs\":\n\t\t\t\tapiInterface = this.gojsApi\n\t\t\t\tbreak\n\t\t\tcase \"wasm\":\n\t\t\t\tapiInterface = this.wasmApi\n\t\t\t\tbreak\n\t\t\tcase \"rest\":\n\t\t\t\tapiInterface = this.restApi\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"invalid apiType: \"+apiOptions.apiType)\n\t\t}\n\n\t\treturn apiInterface\n\t}\n\n\tasync HandCalc(apiOptions: ApiOptions, handStr: string, calcType: CalcType): Promise<HandCalcResp | ErrResp> {\n\t\ttry {\n\t\t\tconst apiInterface: PoserApiInterface = this.getApiInterface(apiOptions)\n\t\t\treturn await apiInterface.HandCalc(apiOptions, handStr, calcType)\n\t\t} catch(ex) {\n\t\t\treturn MakeErrResp(ex.toString())\n\t\t}\n\t}\n\t\n\tasync HandEval(apiOptions: ApiOptions, nsims: number, players: number, handStr: string, calcType: CalcType): Promise<HandEvalResp | ErrResp> {\n\t\ttry {\n\t\t\tconst apiInterface: PoserApiInterface = this.getApiInterface(apiOptions)\n\t\t\treturn await apiInterface.HandEval(apiOptions, nsims, players, handStr, calcType)\n\t\t} catch(ex) {\n\t\t\treturn MakeErrResp(ex.toString())\n\t\t}\n\t}\n\n\tasync HandEvalPlayers(apiOptions: ApiOptions, nsims: number, handStr: string, calcType: CalcType): Promise<HandEvalPlayersResp | ErrResp> {\n\t\ttry {\n\t\t\tconst apiInterface: PoserApiInterface = this.getApiInterface(apiOptions)\n\t\t\treturn await apiInterface.HandEvalPlayers(apiOptions, nsims, handStr, calcType)\n\t\t} catch(ex) {\n\t\t\treturn MakeErrResp(ex.toString())\n\t\t}\n\t}\n}\n\nexport function MakeErrResp(err: string): ErrResp {\n\tif(err.startsWith(\"Error: \")) {\n\t\terr = err.substring(7)\n\t}\n\treturn {\n\t\ttype: \"err\",\n\t\terr,\n\t}\n}\n\nexport function MakeHandEvalResp(result: HandEvalResult): HandEvalResp {\n\tconst resp: HandEvalResp = {\n\t\ttype: \"handEval\",\n\t\trequest: result.request,\n\t\terr: result.err,\n\t\tfinalPlayers: result.finalPlayers ? result.finalPlayers : result.request.players,\n\t\n\t\tgames: result.games,\n\t\twins: result.wins,\n\t\tties: result.ties,\n\t\tpties: result.pties, // pot ties, number of ties expressed as number of pots\n\t\tlosses: result.losses,\n\t\twp: 0,\n\t\two: 0,\n\t\ter: 0,\n\t}\n\n\tRecalcHandEvalResp(resp)\n\n\treturn resp\n}\n\nexport function  AddHandEvalResp(resp: HandEvalResp, result: HandEvalResp): void {\n\tif(!resp.request) {\n\t\tresp.request = result.request\n\t}\n\n\tif(resp.err === \"\") {\n\t\tresp.err = result.err\n\t}\n\n\tresp.games += result.games\n\tresp.wins += result.wins\n\tresp.ties += result.ties\n\tresp.pties += result.pties // pot ties, number of ties expressed as number of pots\n\tresp.losses += result.losses\n}\n\nexport function RecalcHandEvalResp(resp: HandEvalResp): void {\n\t// calc pp, er (expected return), po, \n\tresp.wp = (resp.wins + resp.pties) / resp.games\n\tresp.wo = resp.wp === 0 ? Infinity : 1 / resp.wp - 1\n\tconst bet = 1\n\tconst pot = bet * resp.finalPlayers\n\tresp.er = resp.wp * pot - bet\n}\n","// @flow\n\nimport { PoserApi } from \"./poserApi\"\n\nimport type { CalcType, ErrResp, HandCalcResp, HandEvalResp, HandEvalPlayersResp } from './poserApi'\nimport type { PoserApiInterface, ApiOptions } from './poserApi'\n\nimport { MakeErrResp, AddHandEvalResp, RecalcHandEvalResp } from './poserApi'\n\nexport class PoserWorkersApi implements PoserApiInterface {\n\n\tworkers: number\n\tposerApis: Array<PoserApiInterface>\n\n\tconstructor(workers: number, secret: string) {\n\t\tthis.workers = workers\n\t\tthis.poserApis = new Array<PoserApiInterface>(workers)\n\t\tfor(let i = 0; i < workers; i++) {\n\t\t\tthis.poserApis[i] = new PoserApi(secret)\n\t\t}\n\t}\n\n\tasync HandCalc(apiOptions: ApiOptions, handStr: string, calcType: CalcType): Promise<HandCalcResp | ErrResp> {\n\t\treturn await this.poserApis[0].HandCalc(apiOptions, handStr, calcType)\n\t}\n\t\n\tasync HandEval(apiOptions: ApiOptions, nsims: number, players: number, handStr: string, calcType: CalcType): Promise<HandEvalResp | ErrResp> {\n\t\tlet workers = this.workers\n\n\t\tconst portion = Math.floor(nsims / workers)\n\t\tconst remain = nsims - portion * workers\n\t\tconst promises = Array<Promise<HandEvalResp | ErrResp>>(workers)\n\t\tfor(let i = 0; i < workers; i++) {\n\t\t\tconst n = portion + (i < remain ? 1 : 0)\n\t\t\tpromises[i] = this.poserApis[i].HandEval(apiOptions, n, players, handStr, calcType)\n\t\t}\n\n\t\tlet resp: HandEvalResp | ErrResp | null = null\n\n\t\t// Collect all the promises\n\t\tfor(let i = 0; i < workers; i++) {\n\t\t\ttry {\n\t\t\t\tconst r: HandEvalResp | ErrResp = await promises[i]\n\t\t\t\tif(!resp) {\n\t\t\t\t\tresp = r\n\t\t\t\t} else if(!resp.err && r.err) {\n\t\t\t\t\tresp.err = r.err\n\t\t\t\t} else if(!resp.err && resp.type === \"handEval\" && r.type === \"handEval\") {\n\t\t\t\t\tAddHandEvalResp(resp, r)\n\t\t\t\t}\n\t\t\t} catch(ex) {\n\t\t\t\tif(!resp) {\n\t\t\t\t\tresp = MakeErrResp(ex.toString())\n\t\t\t\t} else if(!resp.err) {\n\t\t\t\t\tresp.err = ex.toString()\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(resp && resp.type === \"handEval\" && !resp.err) {\n\t\t\tRecalcHandEvalResp(resp)\n\t\t}\n\t\t\n\t\treturn resp || MakeErrResp(\"no results collected\")\n\t}\n\n\tgetHandStr(handStr: string, players: number): string {\n\t\tlet hStr = handStr\n\n\t\t// find out if there are any trailing _\n\t\tlet index = hStr.length\n\t\twhile(index > 0 && hStr.charAt(index-1) === '_') {\n\t\t\tindex--\n\t\t}\n\t\t// index is now pointing at first character of the underscore trail\n\t\tlet hStr1 = hStr.substring(0, index)\n\t\tconst hStr2 = hStr.substring(index)\n\n\t\t// cut off the trailing player in hStr1\n\t\tif(hStr1.endsWith(\"p\")) {\n\t\t\thStr1 = hStr1.substr(0, hStr1.length - 2)\n\t\t}\n\n\t\t// now figure out the players specified in the middle\n\t\tconst pi = hStr1.lastIndexOf(\"p\")\n\t\tif(pi <= 0) {\n\t\t\t// no players specified something's wrong\n\t\t\treturn \"\"\n\t\t}\n\t\tconst n = hStr1.charCodeAt(pi - 1) - 48\n\t\tif(n < players) {\n\t\t\t// to many players for this hand\n\t\t\treturn \"\"\n\t\t}\n\n\t\tconst suffix = String.fromCharCode(48+players)+\"p\"\n\t\treturn hStr1 + suffix + hStr2\n\t}\n\n\tasync HandEvalPlayers(apiOptions: ApiOptions, nsims: number, handStr: string, calcType: CalcType): Promise<HandEvalPlayersResp | ErrResp> {\n\t\tconst handEvals: Array<HandEvalResp> = []\n\t\tlet err = \"\"\n\n\t\tconst promises = Array<Promise<HandEvalResp | ErrResp>>(0)\n\n\t\tlet hStr = handStr.trim().toLowerCase()\n\t\tif(hStr.charAt(1) !== 'p') {\n\t\t\t// doesn't start with players specification, let's apply the original approach\n\t\t\tfor(let players: number = 2; players <= 9; players++) {\n\t\t\t\tpromises[players - 2] = this.HandEval(apiOptions, nsims, players, hStr, calcType)\n\t\t\t}\n\t\t} else {\n\t\t\tfor(let players: number = 2; players <= 9; players++) {\n\t\t\t\tconst hStrN = this.getHandStr(hStr, players)\n\t\t\t\tif(hStrN) {\n\t\t\t\t\tpromises[players - 2] = this.HandEval(apiOptions, nsims, players, hStrN, calcType)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor(let i = 0; i < promises.length; i++) {\n\t\t\tconst resp: HandEvalResp = await promises[i]\n\t\t\thandEvals.push(resp)\n\t\t\tif(resp.err) {\n\t\t\t\terr = resp.err\n\t\t\t}\n\t\t}\n\n\t\tconst resp: HandEvalPlayersResp = {\n\t\t\ttype: \"handEvalPlayers\",\n\t\t\terr: err,\n\t\t\thandEvals: handEvals,\n\t\t}\n\n\t\treturn resp\n\t}\n}\n","import { connect } from 'react-redux'\n\nimport { engine, getState } from '../../engine'\n\nimport { chopHand, isValidHand } from '../../utils/hand'\n\nimport { text2code, code2text, c_CARD_SIZE, c_2p, c_9p } from '../../utils/cards'\n\nimport splice from '../../utils/splice'\n\nimport { PoserWorkersApi } from '../../api/poserWorkersApi'\nimport { Deck } from '../../calc/deck';\n\nimport { fromJS, OrderedMap } from 'immutable-sorted'\n\nimport '../../utils/wasm_exec'\n\nconst e = engine.subEngine('home')\nconst af = e.actionFactory();\nconst se = e.subEngine('settings')\nconst saf = se.actionFactory();\n\nconst mapStateToProps = (state, repoHead, ownProps) => ({\n  hand: state.get(\"hand\"),\n  handArr: state.get(\"handArr\"),\n  handValid: state.get(\"handValid\"),\n  handEval: state.get(\"handEval\"),\n  handEvalPlayers: state.get(\"handEvalPlayers\"),\n  handResult: state.get(\"handResult\"),\n  handCombos: state.get(\"handCombos\"),\n  handCardsCnt: state.get(\"handCardsCnt\"),\n  err: state.get(\"err\"),\n  currentSuit: state.get(\"currentSuit\"),\n  settings: state.get(\"settings\"),\n  tanking: state.get(\"tanking\"),\n  tankingMs: state.get(\"tankingMs\"),\n})\n\nconst mapRepoToProps = (repo, ownProps) => mapStateToProps(e.get(e.head(repo)), e.head(repo), ownProps)\n\nlet recalcPending = false\nlet poserApi\n\nconst runHand = async (dispatch, hand) => {\n  const settings = se.get(getState())\n  const apiType = settings.get(\"apiType\")\n  const server = settings.get(\"apiServer\")\n  const calcType = settings.get(\"calcType\")\n  const nSims = settings.get(\"nSims\")\n  const workers = settings.get(\"workers\")\n  const jstSecret = settings.get(\"jwtSecret\")\n  const players = settings.get(\"players\")\n  const threads = settings.get(\"threads\")\n  const playersChart = settings.get(\"playersChart\")\n  const playersTable = settings.get(\"playersTable\")\n  const tanking = e.get(getState(), \"tanking\")\n\n  if(tanking) {\n    // Don't run if other calculation is in progress\n    recalcPending = true\n    return\n  }\n\n  if(!poserApi || poserApi.workers !== workers) {\n    poserApi = new PoserWorkersApi(workers, jstSecret)\n  }\n\n  try {\n    const startTimeMs = Date.now()\n    let err = \"\"\n    dispatch(af.value(\"tanking\", true))\n    const apiOptions = apiType === \"rest\" ? {apiType, server, threads} : {apiType}\n    const handCalcResp = await poserApi.HandCalc(apiOptions, hand, calcType)\n    if(handCalcResp.err) {\n      err = handCalcResp.err\n    } else {\n      const handCombos = handCalcResp.handCombos\n      dispatch(af.value(\"handCombos\", handCombos))\n      delete handCalcResp.handCombos\n      dispatch(af.value(\"handResult\", handCalcResp))\n\n      let handEvalResult = await poserApi.HandEval(apiOptions, nSims, players, hand, calcType)\n      if(handEvalResult.err) {\n        err = handEvalResult.err\n      } else {\n        handEvalResult = fromJS(handEvalResult)\n        let handEvalPlayers = OrderedMap()\n        dispatch(af.value(\"handEval\", handEvalResult))\n        if(playersChart || playersTable) {\n          const handEvalPlayersResp = await poserApi.HandEvalPlayers(apiOptions, nSims, hand, calcType)\n          if(handEvalPlayersResp.err) {\n            err = handEvalPlayersResp.err\n          } else {\n            for(let i = 0; i < handEvalPlayersResp.handEvals.length; i++) {\n              let handEvalResultN = handEvalPlayersResp.handEvals[i]\n              const playersN = handEvalResultN.finalPlayers\n              handEvalResultN = fromJS(handEvalResultN)\n              handEvalPlayers = handEvalPlayers.set(playersN, handEvalResultN)\n            }\n          }\n        }\n        dispatch(af.value(\"handEvalPlayers\", handEvalPlayers))\n      }\n    }\n    dispatch(af.value(\"err\", err))\n    dispatch(af.value(\"tanking\", false))\n    const endTimeMs = Date.now()\n    dispatch(af.value(\"tankingMs\", endTimeMs - startTimeMs))\n\n    if(recalcPending) {\n      recalcPending = false;\n      recalc(dispatch)\n    }\n  } catch(e) {\n    const err = e.toString()\n    dispatch(af.value(\"err\", err))\n    dispatch(af.value(\"tanking\", false))\n    if(recalcPending) {\n      recalcPending = false;\n      recalc(dispatch)\n    }\n  }\n}\n\nconst setHand = (dispatch, hand) => {\n  dispatch(af.value(\"hand\", hand))\n  if(isValidHand(chopHand(hand, 7))) {\n    runHand(dispatch, hand)\n  } else {\n    dispatch(af.value(\"handResult\", {}))\n  }\n}\n\nconst recalc = (dispatch) => {\n  const hand = e.get(getState(), \"hand\")\n  if(hand.length === 0) {\n    return\n  }\n  setHand(dispatch, hand)\n}\n\nconst addCards = (dispatch, cards) => {\n  const state = getState()\n  const origHand = e.get(state, \"hand\")\n  const cardsCnt = e.get(state, \"handCardsCnt\")\n\n  let selectionStart = origHand.length\n  let selectionEnd = selectionStart\n  let hand = origHand\n\n  for(let i = 0; i < cards.length; i++) {\n    let card = cards[i]\n    const n = hand.indexOf(card)\n    const code = text2code(card)\n    if(n >= 0) {\n      selectionStart = n\n      selectionEnd = n+card.length\n      if(c_2p <= code && code <= c_9p) {\n        card = \"\"\n      } else {\n        card=\"__\"\n      }\n    } else if(cardsCnt >= 7 && !(c_2p <= code && code <= c_9p)) {\n      continue\n    } else {\n      const m = hand.indexOf(\"__\")\n      if(m >= 0) {\n        selectionStart = m\n        if(c_2p <= code && code <= c_9p) {\n          selectionEnd = selectionStart\n        } else {\n          selectionEnd = selectionStart + 2\n        }\n      }\n    }\n    hand = splice(hand, selectionStart, selectionEnd - selectionStart, card)\n  }\n  setHand(dispatch, hand)\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  setHand: (hand) => setHand(dispatch, hand),\n\n  runHand: (hand) => runHand(dispatch, hand),\n\n  incPlayers: () => {\n    const hand = e.get(getState(), \"hand\")\n    const players = se.get(getState(), \"players\")\n    if(players < 2) {\n      dispatch(saf.value(\"players\", 2))\n      setHand(dispatch, hand)\n    } else if(players < 9) {\n      dispatch(saf.value(\"players\", players+1))\n      setHand(dispatch, hand)\n    }\n  },\n\n  decPlayers: () => {\n    const hand = e.get(getState(), \"hand\")\n    const players = se.get(getState(), \"players\")\n    if(players > 9) {\n      dispatch(saf.value(\"players\", 9))\n      setHand(dispatch, hand)\n    } else if(players > 2) {\n      dispatch(saf.value(\"players\", players-1))\n      setHand(dispatch, hand)\n    }\n  },\n\n  clear: () => {\n    setHand(dispatch, \"______________\")\n  },\n\n  recalc: () => {\n    recalc(dispatch)\n  },\n\n  del: () => {\n    const hand = e.get(getState(), \"hand\")\n    if(hand.length === 0) {\n      return\n    }\n    let selectionStart = hand.length\n    while(hand.substr(selectionStart-1, 1) === \"_\") {\n      selectionStart--\n    }\n\n    let text = \"__\"\n    if(selectionStart > 0) {\n      let n = 1\n      if(selectionStart >= 2) {\n        const card = text2code(hand.substr(selectionStart-2, 2))\n        if((0 <= card && card < c_CARD_SIZE) || card === -1) {\n          n = 2\n        } else if(c_2p <= card && card <= c_9p) {\n          n = 2\n          text = \"\"\n        }\n      }\n      const newHand = splice(hand, selectionStart-n, n, text)\n      setHand(dispatch, newHand)\n    }\n  },\n\n  addCard: (card) => {\n    addCards(dispatch, [card])\n  },\n\n  addRandom: () => {\n    const deck = new Deck()\n    const handArr = e.get(getState(), \"handArr\")\n    let n = 0\n    for(let i = 0; i < handArr.size; i++) {\n      const card = handArr.get(i)\n      if(0 <= card && card < c_CARD_SIZE) {\n        deck.removeCard(card)\n        n++\n      }\n    }\n    const cards = []\n    for(let i = n; i < 7; i++) {\n      const card = code2text(deck.getNextCard())\n      cards.push(card)\n    }\n    addCards(dispatch, cards)\n  },\n\n  setCurrentSuit: (suite) => {\n    dispatch(af.value(\"currentSuit\", suite))\n  },\n\n})\n\nconst HomeContainer = connect(\n  mapRepoToProps,\n  mapDispatchToProps\n)\n\nexport default HomeContainer\n","import React, { Component } from 'react'\n\nimport { chopHand } from '../../utils/hand'\n\nimport { List } from 'immutable-sorted'\n\nimport Card from './Card'\n\nexport default class Hand extends Component {\n\n  constructor(props) {\n    super(props)\n    this.hand0 = \"\"\n    this.comp0 = null\n  }\n\n  render0() {\n    const props = this.props\n    const hand = props.hand || props.children\n    const arr = props.handArr?props.handArr:List(chopHand(hand, 2))\n\n    let n = 0\n    for(let i = 0; i < arr.size; i++) {\n      const code = arr.get(i)\n      if(-1 <= code && code < 52) {\n        // normal card\n        n++\n        if(n >= 2) {\n          n = i+1\n          break\n        }\n      }\n    }\n\n    let i = 0\n    let comp = <div>\n      {arr.size > 0 ? arr.slice(0, n).map(code => <Card key={i++} html={true} code={code}/>) : <Card key={i++} html={true} code={-1}/>}\n      {arr.size <= 2 ? null : <>&nbsp;&nbsp;\n      {arr.slice(n).map(code => <Card key={i++} html={true} code={code}/>)}</>}\n    </div>\n    return comp\n  }\n\n  render() {\n    const props = this.props\n    const hand = props.hand || props.children\n    if(!this.hand0 || this.hand0 !== hand) {\n      this.hand0 = hand\n      this.comp0 = this.render0()\n    }\n    return this.comp0\n  }\n}\n","import React from 'react'\n\nimport css from './Category.module.css'\n\nconst Cat2Color = (cat) => {\n  let color\n  switch(cat) {\n    case \"SF\":\n        color = \"#ff4e4e\" // red\n        break\n    case \"4\":\n        color = \"#cf9cff\" // magenta\n        break\n    case \"3+2\":\n        color = \"#9c9cff\" // blue\n        break\n    case \"F\":\n        color = \"#ff9c9c\" // red\n        break\n    case \"S\":\n        color = \"#9cffff\" // cyan\n        break\n    case \"3\":\n        color = \"#9cff9c\" // green\n        break\n    case \"2+2\":\n        color = \"#ffcf9c\" // orange\n        break\n    case \"2\":\n        color = \"#ffff9c\" // yellow\n        break\n    case \"1\":\n        color = \"white\"\n        break\n    case \"error\":\n        color = \"pink\" // \"#ff1010\"\n        break\n    default:\n      color = \"grey\"\n      break\n  }\n  return color\n}\n\nconst Cat2Cn = (cat) => {\n  let cn\n  switch(cat) {\n    case \"error\":\n      cn = css.err\n      break\n    default:\n      cn = css.cat\n      break\n  }\n\n  return cn\n}\n\nconst Category = (props) => (\n  <span title={props.category} style={{...props.style, backgroundColor: Cat2Color(props.cat)}} className={Cat2Cn(props.cat)}>\n    &nbsp;\n    {props.children}\n    &nbsp;\n  </span>\n)\n\nexport default Category\n","import React from 'react'\n\nimport Card from './Card'\nimport Category from './Category'\n\nconst EvalResult = (props) => {\n  const style = {fontSize:18, height: 26}\n  const handResult = props.handResult\n  const handEval = props.handEval\n  const handCardsCnt = props.handCardsCnt\n  const settings = props.settings\n  let err\n  if(props.err) {\n    err = <Category style={style} cat={\"error\"}>{props.err}</Category>\n  } else if(handCardsCnt < 2) {\n    err = <Category style={style} cat={\"1\"}>{\"Enter more cards ...\"}</Category>\n  } else if(!props.handValid) {\n    err = <Category style={style} cat={\"1\"}>{\"Enter missing cards\"}</Category>\n  } else if(props.tanking && props.settings.get(\"nSims\") >= 500000) {\n    err = <Category style={style} cat={\"F\"}>{\"Tanking ...\"}</Category>\n  } else if(handResult.isEmpty()) {\n    err = <Category style={style} cat={\"error\"}>{\"no result\"}</Category>\n  } else if(!handResult.get(\"handValid\")) {\n    err = <Category style={style} cat={\"error\"}>{handResult.get(\"handErr\")}</Category>\n  }\n\n  const er = handEval.get(\"er\")\n  const wp = handEval.get(\"wp\")\n  const wo = handEval.get(\"wo\")\n  const cat = er >= 0.25 ? \"3\" : er <= -0.25 ? \"F\" : er >= 0 ? \"1\" : \"2\"\n\n  return (<>\n  {err?err:\n  <div>\n    <Card title=\"Hole Card1\" style={style} html={true}>{handResult.get(\"hole\").substr(0, 2)}</Card>\n    <Card title=\"Hole Card2\" style={style} html={true}>{handResult.get(\"hole\").substr(2, 2)}</Card>\n    &nbsp;\n    {handCardsCnt >= 5 ? <Category title=\"Category\" style={style} cat={handResult.get(\"handCat\")}>{handResult.get(\"handCategory\")}</Category>:null}\n    &nbsp;\n    {handCardsCnt >= 5 ? <Category title=\"Result\" style={style} cat={handResult.get(\"handCat\")}>{handResult.get(\"handResult\")}</Category>:null}\n    &nbsp;\n    {settings.get(\"latency\") ? <Category title=\"Latency\" style={style} cat=\"1\">{Math.floor(props.tankingMs/10)/100}s</Category>:null}\n  </div>\n  }\n  <div>\n    <Category title=\"Return value (%)\" style={style} cat={cat}>ER {parseFloat(er*100).toFixed(0)}%</Category>\n    &nbsp;\n    <Category title=\"Win probabilty (%)\" style={style} cat={cat}>WP {parseFloat(wp*100).toFixed(0)}%</Category>\n    &nbsp;\n    <Category title=\"Win odds (loss : win) presented as n : 1\" style={style} cat={cat}>WO {wo > 1000 ? \">100\" : wo > 10 ? parseFloat(wo).toFixed(0) : parseFloat(wo).toFixed(2)}:1</Category>\n  </div>\n  </>)\n}\n\nexport default EvalResult\n","import React from 'react'\nimport { BarChart, Bar, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\nimport { GetCatStr } from '../../calc/handRank'\n\nimport css from './EvalPlayersChart.module.css'\n\nconst EvalPlayersChart = (props) => {\n    const handEval = props.handEval\n\n    if(!handEval) {\n      return null\n    }\n  \n    const players = handEval.getIn([\"request\", \"players\"])\n    const heroWpCats = handEval.get(\"heroWpCats\")\n    const heroLpCats = handEval.get(\"heroLpCats\")\n    const villainWpCats = handEval.get(\"villainWpCats\")\n    const villainLpCats = handEval.get(\"villainLpCats\")\n\n    if(!heroWpCats) {\n      return null\n    }\n\n    const data = heroWpCats.map((v, i) => {\n      return {\n        cat: GetCatStr(i),\n        hlp: -Math.floor(heroLpCats.get(i)*10000)/100,\n        hwp: Math.floor(v*10000)/100,\n        her: Math.floor(v*(players-2)*10000)/100,\n        vlp: -Math.floor(villainLpCats.get(i)*10000)/100,\n        vwp: Math.floor(villainWpCats.get(i)*10000)/100,\n        ver: Math.floor(-villainLpCats.get(i)*(players-2)*10000)/100,\n      }\n    }\n    ).toIndexedSeq().toArray()\n\n    const style = {fontSize: 12}\n\n    return (\n    <BarChart style={style} className={css.chart}\n      layout=\"horizontal\"\n      width={320}\n      height={250}\n      data={data}\n      stackOffset=\"sign\"\n      margin={{ top: 5, right: 5, left: 5, bottom: 5 }}\n    >\n      <CartesianGrid stroke=\"#c0c0c0\" strokeDasharray=\"3 3\"/>\n      <XAxis dataKey=\"cat\" />\n      <YAxis width={40} unit=\"%\" yAxisId=\"left\" />\n      <Legend />\n      <Tooltip />\n      <Bar yAxisId=\"left\" type=\"monotone\" dataKey=\"hlp\" stackId=\"h\" fill=\"#339933\"/>\n      <Bar yAxisId=\"left\" type=\"monotone\" dataKey=\"hwp\" stackId=\"h\" fill=\"green\" />\n      <Bar yAxisId=\"left\" type=\"monotone\" dataKey=\"her\" stackId=\"h\" fill=\"lightgreen\"/>\n      <Bar yAxisId=\"left\" type=\"monotone\" dataKey=\"vlp\" stackId=\"v\" fill=\"#3333FF\" />\n      <Bar yAxisId=\"left\" type=\"monotone\" dataKey=\"vwp\" stackId=\"v\" fill=\"blue\" />\n      <Bar yAxisId=\"left\" type=\"monotone\" dataKey=\"ver\" stackId=\"v\" fill=\"lightblue\" />\n    </BarChart>\n    )\n  }\n\nexport default EvalPlayersChart\n","import React from 'react'\n\nimport Category from \"./Category\"\nimport EvalCatsChart from '../components/EvalCatsChart'\nimport { GetCatStr, GetCategoryStr } from '../../calc/handRank'\n\nimport '../Table/Table.css'\nimport { List } from 'immutable-sorted';\n\nconst catFmt = (handEval, field, cat) => {\n  const pf = handEval.get(field)\n  if(!pf) {\n    return \"\"\n  }\n  let p = pf.get(cat)\n  if(!p) {\n    p = pf.get(cat.toString())\n  }\n  if(!p) {\n    return \"\"\n  }\n  return (p*100).toFixed(2)+\"%\"\n}\n\nconst catTotal = (handEval, field) => {\n  const p = handEval.get(field)\n  if(!p) {\n    return \"\"\n  }\n  let total = 0\n  for(let i = 0; i < p.size; i++) {\n    total += p.get(i)\n  }\n  return (total*100).toFixed(2)+\"%\"\n}\n\nconst EvalCatsTable = (props) => {\n    const settings = props.settings\n    const handEval = props.handEval\n\n    if(!handEval) {\n      return null\n    }\n  \n    let i = 1\n\n    return (<div>\n    {settings.get(\"catsChart\") || settings.get(\"catsTable\")?<h3>\n        Categories\n    </h3>:null}\n    {settings.get(\"catsChart\")?\n      <EvalCatsChart {...props}/>\n    :null}\n\n    {settings.get(\"catsTable\")?\n      <table className=\"minimalistBlack\">\n        <thead>\n          <tr>\n            <th colSpan={2} title=\"Hero\" className=\"center\">Hero</th>\n            <th rowSpan={2} className=\"center\">Cat</th>\n            <th colSpan={2} title=\"Villain\" className=\"center\">Villain</th>\n          </tr>\n          <tr>\n            <th title=\"Hero Wins\" className=\"center\">Win</th>\n            <th title=\"Hero Losses\" className=\"center\">Loss</th>\n            <th title=\"Villain Wins\" className=\"center\">Win</th>\n            <th title=\"Villain Losses\" className=\"center\">Loss</th>\n          </tr>\n        </thead>\n      <tbody>\n      {List([0, 1, 2, 3, 4, 5, 6, 7, 8]).map((cat)=>{\n        return <tr key={i++}>\n          <td className=\"right\">\n            {catFmt(handEval, \"heroWpCats\", cat)}\n          </td>\n          <td className=\"right\">\n            {catFmt(handEval, \"heroLpCats\", cat)}\n          </td>\n          <td title=\"Category\" className=\"center\">\n            <Category cat={GetCatStr(cat)}>{GetCategoryStr(cat)}</Category>\n          </td>\n          <td className=\"right\">\n            {catFmt(handEval, \"villainWpCats\", cat)}\n          </td>\n          <td className=\"right\">\n            {catFmt(handEval, \"villainLpCats\", cat)}\n          </td>\n        </tr>\n      }).toIndexedSeq()}\n      </tbody>\n        <tfoot>\n          <tr className=\"strong\">\n            <th title=\"Hero Wins\" className=\"center\">\n              {catTotal(handEval, \"heroWpCats\")}\n            </th>\n            <th title=\"Hero Losses\" className=\"center\">\n              {catTotal(handEval, \"heroLpCats\")}\n            </th>\n            <th className=\"center\">Total</th>\n            <th title=\"Villain Wins\" className=\"center\">\n              {catTotal(handEval, \"villainWpCats\")}\n            </th>\n            <th title=\"Villain Losses\" className=\"center\">\n              {catTotal(handEval, \"villainLpCats\")}\n            </th>\n          </tr>\n        </tfoot>\n      </table>\n    :null}\n     </div>\n    )\n  }\n\nexport default EvalCatsTable\n","import React from 'react'\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend, ReferenceLine } from 'recharts';\n\nimport css from './EvalPlayersChart.module.css'\n\nconst EvalPlayersChart = (props) => {\n    const handResult = props.handResult\n    const empty = handResult.isEmpty()\n  \n    if(empty) {\n      return null\n    }\n  \n    const handValid = handResult.get(\"handValid\")\n  \n    if(!handValid) {\n      return null\n    }\n  \n    if(props.handEvalPlayers.isEmpty()) {\n        return null\n    }\n\n    const data = props.handEvalPlayers.map(v => {\n      const er = v.get(\"er\")\n      const wp = v.get(\"wp\")\n      const wo = v.get(\"wo\")\n      return {\n        players: v.get(\"finalPlayers\"),\n        er: Math.floor(er*10000)/100,\n        wp: Math.floor(wp*10000)/100,\n        wo: Math.floor((wo>100?100:wo)*100)/100,\n      }\n    }\n    ).toIndexedSeq().toArray()\n\n    const style = {fontSize: 12}\n\n    return (\n    <LineChart style={style} className={css.chart}\n      width={320}\n      height={250}\n      data={data}\n      margin={{ top: 5, right: 20, left: 20, bottom: 5 }}\n    >\n      <CartesianGrid stroke=\"#c0c0c0\" strokeDasharray=\"3 3\"/>\n      <XAxis dataKey=\"players\" stroke=\"black\"/>\n      <YAxis width={30} stroke=\"green\" unit=\"%\" yAxisId=\"left\" />\n      <YAxis width={30} stroke=\"red\" unit=\":1\" yAxisId=\"right\" orientation=\"right\" />\n      <Legend />\n      <Tooltip />\n      <ReferenceLine yAxisId=\"left\" y={0} stroke=\"black\" strokeDasharray=\"8 4\" />\n      <Line yAxisId=\"left\" type=\"monotone\" dataKey=\"er\" stroke=\"green\" />\n      <Line yAxisId=\"left\" type=\"monotone\" dataKey=\"wp\" stroke=\"blue\" />\n      <Line yAxisId=\"right\" type=\"monotone\" dataKey=\"wo\" stroke=\"red\" />\n    </LineChart>\n    )\n  }\n\nexport default EvalPlayersChart\n","import React from 'react'\n\nimport Category from \"./Category\"\nimport EvalPlayersChart from '../components/EvalPlayersChart'\n\nimport '../Table/Table.css'\n\nconst EvalPlayersTable = (props) => {\n    const handResult = props.handResult\n    const settings = props.settings\n    const empty = handResult.isEmpty()\n  \n    if(empty) {\n      return null\n    }\n  \n    const handValid = handResult.get(\"handValid\")\n  \n    if(!handValid) {\n      return null\n    }\n  \n    if(props.handEvalPlayers.isEmpty()) {\n        return null\n    }\n\n    let i = 1\n\n    return (<div>\n    {settings.get(\"playersChart\") || settings.get(\"playersTable\")?<h3>\n        Players\n    </h3>:null}\n    {settings.get(\"playersChart\")?\n      <EvalPlayersChart {...props}/>\n    :null}\n\n    {settings.get(\"playersTable\")?\n      <table className=\"minimalistBlack\">\n        <thead>\n          <tr>\n            <th className=\"center\">Players</th>\n            <th title=\"Return value (%)\" className=\"center\">ER</th>\n            <th title=\"Win probabilty (%)\" className=\"center\">WP</th>\n            <th title=\"Win odds (loss : win) presented as n : 1\" className=\"center\">WO</th>\n          </tr>\n        </thead>\n      <tbody>\n      {props.handEvalPlayers.map((handEval)=>{\n        const er = handEval.get(\"er\")\n        const wp = handEval.get(\"wp\")\n        const wo = handEval.get(\"wo\")\n        const cat = er >= 0.25 ? \"3\" : er <= -0.25 ? \"F\" : er >= 0 ? \"1\" : \"2\"\n            \n        const style = handEval.get(\"finalPlayers\") === props.handEval.get(\"finalPlayers\")?{backgroundColor: \"yellow\"}:{}\n        return <tr style={style} key={i++}>\n          <td className=\"center\">\n          {handEval.get(\"finalPlayers\")}\n          </td>\n          <td title=\"Expected Return (%)\" className=\"right\">\n          <Category cat={cat}>{parseFloat(er*100).toFixed(0)}%</Category>\n          </td>\n          <td title=\"Win probabilty (%)\" className=\"right\">\n          <Category cat={cat}>{parseFloat(wp*100).toFixed(0)}%</Category>\n          </td>\n          <td title=\"Win odds (loss : win) presented as n : 1\" className=\"right\">\n          <Category cat={cat}>{wo > 1000 ? \">100\" : wo > 10 ? parseFloat(wo).toFixed(0) : parseFloat(wo).toFixed(2)}:1</Category>\n          </td>\n        </tr>\n      }).toIndexedSeq()}\n      </tbody>\n      </table>\n    :null}\n     </div>\n    )\n  }\n\nexport default EvalPlayersTable\n","import React from 'react'\n\nimport Card from \"./Card\"\nimport Category from \"./Category\"\n\nimport '../Table/Table.css'\n\nconst CombosTable = (props) => {\n  const handResult = props.handResult\n  const empty = handResult.isEmpty()\n\n  if(empty) {\n    return null\n  }\n\n  const handValid = handResult.get(\"handValid\")\n\n  if(!handValid) {\n    return null\n  }\n\n  const handRank = handResult.get(\"handRank\")\n  const allCombos = handResult.get(\"betterCombos\")+handResult.get(\"equalCombos\")+handResult.get(\"worseCombos\")\n  const handCombos = props.handCombos\n\n  let i = 0\n  let rank = 0\n\n  const style = {fontSize: 18, padding: 0}\n\n  return (<div>\n    <h3>\n      Combos\n    </h3>\n    <table className=\"minimalistBlack\">\n      <thead>\n        <tr>\n          <th className=\"center\">N</th>\n          <th className=\"center\">Hole</th>\n          <th className=\"center\">&times;</th>\n          <th className=\"center\">Cat</th>\n          <th className=\"center\">Cards</th>\n          <th className=\"center\">%</th>\n        </tr>\n      </thead>\n    <tbody>\n    {handCombos.map((comboItem)=>{\n      const prc = 100 * (allCombos - rank) / allCombos\n      const cnt = comboItem.get(\"count\")\n      const evalHandRank = comboItem.get(\"handRank\")\n      rank += cnt\n      \n      return <tr style={handRank === evalHandRank?{backgroundColor: \"yellow\"}:{}} key={i++}>\n        <td className=\"right\">\n        {i}\n        </td>\n        <td className=\"center\">\n        <Card style={{...style, background: \"transparent\", margin: 0, height: 24}} html={true}>{comboItem.get(\"hole\").substr(0, 2)}</Card>\n        <Card style={{...style, background: \"transparent\", margin: 0, height: 24}} html={true}>{comboItem.get(\"hole\").substr(2, 2)}</Card>\n        &nbsp;\n        </td>\n        <td className=\"right\">\n          {/* &times; */}\n          {cnt > 0 ? cnt : null}\n        </td>\n        <td className=\"center\">\n        <Category cat={comboItem.get(\"cat\")} category={comboItem.get(\"category\")}>{comboItem.get(\"category\")}</Category>\n        </td>\n        <td className=\"center\">\n        <Category cat={comboItem.get(\"cat\")} category={comboItem.get(\"category\")}>{comboItem.get(\"result\")}</Category>\n        </td>\n        <td className=\"right\">\n        {parseFloat(prc).toFixed(2)}\n        </td>\n      </tr>\n    })}\n    </tbody>\n    </table>\n    </div>\n    )\n}\n\nexport default CombosTable\n","import React, { Component } from 'react'\n\nimport Category from '../../components/Category'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport css from './SettingsButtons.module.css'\n\nexport default class PlayersSetting extends Component {\n\n  inc() {\n    this.props.incPlayers()\n  }\n  \n  dec() {\n    this.props.decPlayers()\n  }\n  \n  render() {\n    const style = {fontSize:20, height: 32}\n\n    return (\n      <span>\n        <Category style={style} cat=\"1\">\n        {this.props.children?<>{this.props.children}&nbsp;</>:null}\n        {this.props.players}\n        </Category>\n        &nbsp;\n        <button className={css.button} title=\"Decrease number of players\" onClick={this.dec.bind(this)}><FontAwesomeIcon icon=\"user-minus\"/></button>\n        <button className={css.button} title=\"Increase number of players\" onClick={this.inc.bind(this)}><FontAwesomeIcon icon=\"user-plus\"/></button>\n      </span>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport PlayersSetting from '../Settings/components/PlayersSetting'\n\nimport css from './InputButtons.module.css'\n\nexport default class InputButtons extends Component {\n\n  clear(e) {\n    this.props.clear()\n  }\n\n  del(e) {\n    this.props.del()\n  }\n\n  recalc(e) {\n    this.props.recalc()\n  }\n\n  addRandom(e) {\n    this.props.addRandom()\n  }\n\n  render() {\n    const props = this.props\n    const settings = props.settings\n\n    return <div>\n      {props.tanking}\n      <button title=\"Clear cards\" onClick={this.clear.bind(this)}><FontAwesomeIcon icon=\"trash-alt\"/></button>\n      <button title=\"Delete the rightmost card\" onClick={this.del.bind(this)}><FontAwesomeIcon icon=\"backspace\"/></button>\n      <button title=\"Add random cards\" onClick={this.addRandom.bind(this)}><FontAwesomeIcon icon=\"random\"/></button>\n      &nbsp;\n      {settings.get(\"playersButtons\") ?  null : <>\n      <PlayersSetting players={props.settings.get(\"players\")} incPlayers={props.incPlayers} decPlayers={props.decPlayers}>Players:</PlayersSetting>\n      </>}\n      <button title=\"Recalcuate\" className={props.tanking?css.running:\"\"} onClick={this.recalc.bind(this)}><FontAwesomeIcon icon=\"calculator\"/></button>\n    </div>\n  }\n\n}\n","import React from 'react'\n\nimport Card from './Card'\n\nconst CardsEntry = (props) => (\n    <div>\n      {props.settings.get(\"playersButtons\")?\n      <div>\n      <Card {...props} card=\"9p\"/>\n      <Card {...props} card=\"8p\"/>\n      <Card {...props} card=\"7p\"/>\n      <Card {...props} card=\"6p\"/>\n      <Card {...props} card=\"5p\"/>\n      <Card {...props} card=\"4p\"/>\n      <Card {...props} card=\"3p\"/>\n      <Card {...props} card=\"2p\"/>\n      </div> : null}\n      <div>\n      <Card {...props} card=\"As\"/>\n      <Card {...props} card=\"Ks\"/>\n      <Card {...props} card=\"Qs\"/>\n      <Card {...props} card=\"Js\"/>\n      <Card {...props} card=\"Ts\"/>\n      <Card {...props} card=\"9s\"/>\n      <Card {...props} card=\"8s\"/>\n      <Card {...props} card=\"7s\"/>\n      <Card {...props} card=\"6s\"/>\n      <Card {...props} card=\"5s\"/>\n      <Card {...props} card=\"4s\"/>\n      <Card {...props} card=\"3s\"/>\n      <Card {...props} card=\"2s\"/>\n      </div>\n      <div>\n      <Card {...props} card=\"Ah\"/>\n      <Card {...props} card=\"Kh\"/>\n      <Card {...props} card=\"Qh\"/>\n      <Card {...props} card=\"Jh\"/>\n      <Card {...props} card=\"Th\"/>\n      <Card {...props} card=\"9h\"/>\n      <Card {...props} card=\"8h\"/>\n      <Card {...props} card=\"7h\"/>\n      <Card {...props} card=\"6h\"/>\n      <Card {...props} card=\"5h\"/>\n      <Card {...props} card=\"4h\"/>\n      <Card {...props} card=\"3h\"/>\n      <Card {...props} card=\"2h\"/>\n      </div>\n      <div>\n      <Card {...props} card=\"Ad\"/>\n      <Card {...props} card=\"Kd\"/>\n      <Card {...props} card=\"Qd\"/>\n      <Card {...props} card=\"Jd\"/>\n      <Card {...props} card=\"Td\"/>\n      <Card {...props} card=\"9d\"/>\n      <Card {...props} card=\"8d\"/>\n      <Card {...props} card=\"7d\"/>\n      <Card {...props} card=\"6d\"/>\n      <Card {...props} card=\"5d\"/>\n      <Card {...props} card=\"4d\"/>\n      <Card {...props} card=\"3d\"/>\n      <Card {...props} card=\"2d\"/>\n      </div>\n      <div>\n      <Card {...props} card=\"Ac\"/>\n      <Card {...props} card=\"Kc\"/>\n      <Card {...props} card=\"Qc\"/>\n      <Card {...props} card=\"Jc\"/>\n      <Card {...props} card=\"Tc\"/>\n      <Card {...props} card=\"9c\"/>\n      <Card {...props} card=\"8c\"/>\n      <Card {...props} card=\"7c\"/>\n      <Card {...props} card=\"6c\"/>\n      <Card {...props} card=\"5c\"/>\n      <Card {...props} card=\"4c\"/>\n      <Card {...props} card=\"3c\"/>\n      <Card {...props} card=\"2c\"/>\n      </div>\n  </div>\n)\n\nexport default CardsEntry\n","import React from 'react'\n\nimport Card from './Card'\n\nconst SparseCardsEntry = (props) => {\n  const suit = props.currentSuit\n  const playersStyle = {...props.style, lineHeight: \"0px\", fontSize: 28}\n  const playersButtons = props.settings.get(\"playersButtons\")\n  const x = (card) => playersButtons ? card : null\n\n  return <div>\n    <div>\n    {x(<Card {...props} style={{...playersStyle}} card=\"9P\"/>)}\n    &nbsp;\n    <Card {...props} style={suit === \"s\" ? {...props.style} : {...playersStyle, backgroundColor: \"lightgrey\"}} card={suit === \"s\" ? \"As\" : \"Xs\"}/>\n    <Card {...props} style={suit === \"h\" ? {...props.style} : {...playersStyle, backgroundColor: \"lightgrey\"}} card={suit === \"h\" ? \"Ah\" : \"Xh\"}/>\n    <Card {...props} style={suit === \"d\" ? {...props.style} : {...playersStyle, backgroundColor: \"lightgrey\"}} card={suit === \"d\" ? \"Ad\" : \"Xd\"}/>\n    <Card {...props} style={suit === \"c\" ? {...props.style} : {...playersStyle, backgroundColor: \"lightgrey\"}} card={suit === \"c\" ? \"Ac\" : \"Xc\"}/>\n    &nbsp;\n    {x(<Card {...props} style={{...playersStyle}} card=\"5P\"/>)}\n    </div>\n    <div>\n    {x(<Card {...props} style={{...playersStyle}} card=\"8P\"/>)}\n    &nbsp;\n    <Card {...props} card={\"K\"+suit}/>\n    <Card {...props} card={\"Q\"+suit}/>\n    <Card {...props} card={\"J\"+suit}/>\n    <Card {...props} card={\"T\"+suit}/>\n    &nbsp;\n    {x(<Card {...props} style={{...playersStyle}} card=\"4P\"/>)}\n    </div>\n    <div>\n    {x(<Card {...props} style={{...playersStyle}} card=\"7P\"/>)}\n    &nbsp;\n    <Card {...props} card={\"9\"+suit}/>\n    <Card {...props} card={\"8\"+suit}/>\n    <Card {...props} card={\"7\"+suit}/>\n    <Card {...props} card={\"6\"+suit}/>\n    &nbsp;\n    {x(<Card {...props} style={{...playersStyle}} card=\"3P\"/>)}\n    </div>\n    <div>\n    {x(<Card {...props} style={{...playersStyle}} card=\"6P\"/>)}\n    &nbsp;\n    <Card {...props} card={\"5\"+suit}/>\n    <Card {...props} card={\"4\"+suit}/>\n    <Card {...props} card={\"3\"+suit}/>\n    <Card {...props} card={\"2\"+suit}/>\n    &nbsp;\n    {x(<Card {...props} style={{...playersStyle}} card=\"2P\"/>)}\n    </div>\n  </div>\n}\n\nexport default SparseCardsEntry\n","import React, { Component } from 'react'\n\nimport Hand from '../components/Hand'\nimport EvalResult from '../components/EvalResult'\nimport EvalCatsTable from '../components/EvalCatsTable'\nimport EvalPlayersTable from '../components/EvalPlayersTable'\nimport CombosTable from '../components/CombosTable'\nimport InputButtons from '../components/InputButtons'\nimport CardsEntry from '../components/CardsEntry'\nimport SparseCardsEntry from '../components/SparseCardsEntry'\n\nimport css from './HomePage.module.css'\n\nimport '../Table/Table.css'\n\nexport default class HomePage extends Component {\n\n  componentDidMount() {\n    const props = this.props\n    props.setHand(props.hand)\n  }\n\n  click(card) {\n    const props = this.props\n    switch(card) {\n      case \"Xs\":\n        props.setCurrentSuit(\"s\")\n        break\n      case \"Xh\":\n        props.setCurrentSuit(\"h\")\n        break\n      case \"Xd\":\n        props.setCurrentSuit(\"d\")\n        break\n      case \"Xc\":\n        props.setCurrentSuit(\"c\")\n        break\n      case \"?\":\n        break\n      default:\n        props.addCard(card)\n        break\n    }\n  }\n\n  render() {\n    const props = this.props\n    const settings = props.settings\n\n    return (\n    <div>\n    <div className={css.sticky}>\n      <Hand {...props}/>\n      <hr/>\n    </div>\n    <h3>\n      <InputButtons {...props} />\n    </h3>\n    <h3>\n      <EvalResult {...props}/>\n    </h3>\n    <h3>\n      {settings.get(\"denseKeyboard\") ?\n      <CardsEntry\n        handArr={props.handArr}\n        click={this.click.bind(this)}\n        style={{width: \"7%\"}}\n        html={true}\n        vertical={true}\n        settings={props.settings}/> :\n      <SparseCardsEntry\n        currentSuit={props.currentSuit}\n        handArr={props.handArr}\n        click={this.click.bind(this)}\n        style={{height: 40, width: 40, margin: 2, fontSize: '20px'}}\n        html={true}\n        vertical={false}\n        settings={props.settings}\n      />\n      }\n    </h3>\n    <h3>\n      <EvalPlayersTable {...props}/>\n    </h3>\n    <h3>\n      <EvalCatsTable {...props}/>\n    </h3>\n    {props.settings.get(\"combosTable\") && props.handCardsCnt >= 5 ? \n    <h3>\n      <CombosTable {...props}/>\n    </h3>:null}\n    </div>\n  )\n  }\n}\n","\nexport const ApiType = {\n    \"localjs\": { value: \"localjs\", label: \"LocalJS\"},\n    \"js\": { value: \"js\", label: \"JavaScript\"},\n    \"gojs\": { value: \"gojs\", label: \"GopherJS\"},\n    \"wasm\": { value: \"wasm\", label: \"WebAssembly\"},\n    \"rest\": { value: \"rest\", label: \"REST\"},\n}\n","\nexport const CalcType = {\n    \"basic\": { value: \"basic\", label: \"Basic\"},\n    \"fast\": { value: \"fast\", label: \"Fast\"},\n    \"loki\": { value: \"loki\", label: \"Loki\"},\n}\n","import { connect } from 'react-redux'\n\nimport { engine } from '../../engine'\n\nimport { ApiType } from './components/ApiType'\nimport { CalcType } from './components/CalcType'\n\nconst e = engine.subEngine('home.settings')\nconst af = e.actionFactory();\n\nconst mapStateToProps = (state, repoHead, ownProps) => ({\n  apiType: state.get(\"apiType\"),\n  apiTypeLabel: ApiType[state.get(\"apiType\")].label,\n  apiServer: state.get(\"apiServer\"),\n  jwtSecret: state.get(\"jwtSecret\"),\n  calcType: state.get(\"calcType\"),\n  calcTypeLabel: CalcType[state.get(\"calcType\")].label,\n  nSims: state.get(\"nSims\"),\n  workers: state.get(\"workers\"),\n  threads: state.get(\"threads\"),\n  players: state.get(\"players\"),\n  catsChart: state.get(\"catsChart\"),\n  catsTable: state.get(\"catsTable\"),\n  playersChart: state.get(\"playersChart\"),\n  playersTable: state.get(\"playersTable\"),\n  combosTable: state.get(\"combosTable\"),\n  denseKeyboard: state.get(\"denseKeyboard\"),\n  playersButtons: state.get(\"playersButtons\"),\n  devMode: state.get(\"devMode\"),\n  latency: state.get(\"latency\"),\n})\n\nconst mapRepoToProps = (repo, ownProps) => mapStateToProps(e.get(e.head(repo)), e.head(repo), ownProps)\n \nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  setApiType: (apiType) => {\n    dispatch(af.value(\"apiType\", apiType))\n  },\n  setApiServer: (apiServer) => {\n    dispatch(af.value(\"apiServer\", apiServer))\n  },\n  setJwtSecret: (jwtSecret) => {\n    dispatch(af.value(\"jwtSecret\", jwtSecret))\n  },\n  setCalcType: (calcType) => {\n    dispatch(af.value(\"calcType\", calcType))\n  },\n  setSims: (nSims) => {\n    dispatch(af.value(\"nSims\", nSims))\n  },\n  setWorkers: (workers) => {\n    dispatch(af.value(\"workers\", workers))\n  },\n  setThreads: (threads) => {\n    dispatch(af.value(\"threads\", threads))\n  },\n  setCatsChart: (checked) => {\n    dispatch(af.value(\"catsChart\", checked))\n  },\n  setCatsTable: (checked) => {\n    dispatch(af.value(\"catsTable\", checked))\n  },\n  setPlayersChart: (checked) => {\n    dispatch(af.value(\"playersChart\", checked))\n  },\n  setPlayersTable: (checked) => {\n    dispatch(af.value(\"playersTable\", checked))\n  },\n  setCombosTable: (checked) => {\n    dispatch(af.value(\"combosTable\", checked))\n  },\n  setDenseKeyboard: (checked) => {\n    dispatch(af.value(\"denseKeyboard\", checked))\n  },\n  setPlayersButtons: (checked) => {\n    dispatch(af.value(\"playersButtons\", checked))\n  },\n  setDevMode: (checked) => {\n    dispatch(af.value(\"devMode\", checked))\n  },\n  setLatency: (checked) => {\n    dispatch(af.value(\"latency\", checked))\n  },\n})\n\nconst SettingsContainer = connect(\n  mapRepoToProps,\n  mapDispatchToProps\n)\n\nexport default SettingsContainer\n","import React, { Component } from 'react'\n\nimport { ApiType } from './ApiType'\n\nimport Select from 'react-select'\n\nexport default class ApiSetting extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.options = []\n    Object.keys(ApiType).map(key => this.options.push(ApiType[key]))\n  }\n\n  handleChange = selectedOption => {\n    this.props.setApiType(selectedOption.value)\n  }\n\n  render() {\n    const selectedOption = ApiType[this.props.apiType]\n    return (\n      <span style={{width: 150}}>\n        <Select \n            value={selectedOption}\n            onChange={this.handleChange}\n            options={this.options}\n        />\n      </span>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class ServerUrlSetting extends Component {\n\n  changeApiServer = event => {\n    this.props.setApiServer(event.target.value)\n  }\n\n  render() {\n    return (\n      <span style={{width: 150}}>\n        <input \n          style={{height: 30, width: 140, textAlign: \"left\"}} \n          type=\"text\" \n          name=\"ApiServer\"\n          title=\"REST Server URL\"\n          value={this.props.apiServer}\n          maxLength={64}\n          onChange={this.changeApiServer.bind(this)}\n          placeholder=\"REST Server URL ...\"\n        />\n      </span>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Base64 } from 'js-base64'\n\nexport default class JwtSecretSetting extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {showSecret: false}\n  }\n\n\n  changeJwtSecret = event => {\n    const base64Secret = Base64.encode(event.target.value)\n    this.props.setJwtSecret(base64Secret)\n  }\n\n  changeShowSecret = event => {\n    const newState = {showSecret: !this.state.showSecret}\n    this.setState(newState)\n  }\n\n  render() {\n    const type = this.state.showSecret ? \"text\" : \"password\"\n    const secret = Base64.decode(this.props.jwtSecret)\n    return (\n      <span style={{width: 150}}>\n        <input \n          style={{height: 30, width: 120, textAlign: \"left\"}} \n          type={type}\n          name=\"JwtSecret\"\n          title=\"REST Server URL\"\n          value={secret}\n          maxLength={64}\n          onChange={this.changeJwtSecret.bind(this)}\n          placeholder=\"\"\n        />\n      <input type=\"checkbox\" name=\"show\" title=\"Show Secret\" checked={this.state.showSecret} onChange={this.changeShowSecret.bind(this)}/>\n      </span>\n    )\n  }\n}\n","export const ThreadsOptions = {\n    \"0\": { value: 0, label: \"MAXCPUs\"},\n    \"1\": { value: 1, label: \"1\"},\n    \"2\": { value: 2, label: \"2\"},\n    \"4\": { value: 4, label: \"4\"},\n    \"6\": { value: 6, label: \"6\"},\n    \"8\": { value: 8, label: \"8\"},\n    \"12\": { value: 12, label: \"12\"},\n    \"16\": { value: 16, label: \"16\"},\n    \"24\": { value: 24, label: \"24\"},\n    \"32\": { value: 32, label: \"32\"},\n}\n\n","import React, { Component } from 'react'\n\nimport { ThreadsOptions } from './ThreadsOptions'\n\nimport Select from 'react-select'\n\nexport default class ThreadsSetting extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.options = []\n    Object.keys(ThreadsOptions).map(key => this.options.push(ThreadsOptions[key]))\n  }\n\n  handleChange = selectedOption => {\n    this.props.setThreads(selectedOption.value)\n  }\n\n  customStyles = {\n    option: (provided, state) => ({\n      ...provided,\n      textAlign: \"right\",\n    }),\n    control: (provided) => ({\n      ...provided,\n    }),\n    singleValue: (provided, state) => ({\n      ...provided,\n    }),\n  }\n\n  render() {\n    const selectedOption = ThreadsOptions[this.props.threads.toString()]\n\n    return (\n      <span style={{width: 150}}>\n        <Select\n          styles={this.customStyles}\n          value={selectedOption}\n          onChange={this.handleChange}\n          options={this.options}\n        />\n      </span>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nimport { CalcType } from './CalcType'\n\nimport Select from 'react-select'\n\nexport default class CalcSetting extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.options = []\n    Object.keys(CalcType).map(key => this.options.push(CalcType[key]))\n  }\n\n  handleChange = selectedOption => {\n    this.props.setCalcType(selectedOption.value)\n  }\n\n  render() {\n    const selectedOption = CalcType[this.props.calcType]\n\n    return (\n      <span style={{width: 150}}>\n        <Select \n            value={selectedOption}\n            onChange={this.handleChange}\n            options={this.options}\n        />\n      </span>\n    )\n  }\n}\n","export const WorkersOptions = {\n    \"1\": { value: 1, label: \"1\"},\n    \"2\": { value: 2, label: \"2\"},\n    \"4\": { value: 4, label: \"4\"},\n    \"6\": { value: 6, label: \"6\"},\n    \"8\": { value: 8, label: \"8\"},\n    \"12\": { value: 12, label: \"12\"},\n    \"16\": { value: 16, label: \"16\"},\n    \"24\": { value: 24, label: \"24\"},\n    \"32\": { value: 32, label: \"32\"},\n}\n\n","import React, { Component } from 'react'\n\nimport { WorkersOptions } from './WorkersOptions'\n\nimport Select from 'react-select'\n\nexport default class WorkersSetting extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.options = []\n    Object.keys(WorkersOptions).map(key => this.options.push(WorkersOptions[key]))\n  }\n\n  handleChange = selectedOption => {\n    this.props.setWorkers(selectedOption.value)\n  }\n\n  customStyles = {\n    option: (provided, state) => ({\n      ...provided,\n      textAlign: \"right\",\n    }),\n    control: (provided) => ({\n      ...provided,\n    }),\n    singleValue: (provided, state) => ({\n      ...provided,\n    }),\n  }\n\n  render() {\n    const selectedOption = WorkersOptions[this.props.workers.toString()]\n\n    return (\n      <span style={{width: 150}}>\n        <Select\n          styles={this.customStyles}\n          value={selectedOption}\n          onChange={this.handleChange}\n          options={this.options}\n        />\n      </span>\n    )\n  }\n}\n","export const SimsOptions = {\n    \"100\": { value: 100, label: \"100\"},\n    \"500\": { value: 500, label: \"500\"},\n    \"1000\": { value: 1000, label: \"1,000\"},\n    \"5000\": { value: 5000, label: \"5,000\"},\n    \"10000\": { value: 10000, label: \"10,000\"},\n    \"50000\": { value: 50000, label: \"50,000\"},\n    \"100000\": { value: 100000, label: \"100,000\"},\n    \"500000\": { value: 500000, label: \"500,000\"},\n    \"1000000\": { value: 1000000, label: \"1,000,000\"},\n    \"5000000\": { value: 5000000, label: \"5,000,000\"},\n    \"10000000\": { value: 10000000, label: \"10,000,000\"},\n    \"50000000\": { value: 50000000, label: \"50,000,000\"},\n    \"100000000\": { value: 100000000, label: \"100,000,000\"},\n}\n\n","import React, { Component } from 'react'\n\nimport { SimsOptions } from './SimsOptions'\n\nimport Select from 'react-select'\n\nexport default class SimsSetting extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.options = []\n    Object.keys(SimsOptions).map(key => this.options.push(SimsOptions[key]))\n  }\n\n  handleChange = selectedOption => {\n    this.props.setSims(selectedOption.value)\n  }\n\n  customStyles = {\n    option: (provided, state) => ({\n      ...provided,\n      textAlign: \"right\",\n    }),\n    control: (provided) => ({\n      ...provided,\n    }),\n    singleValue: (provided, state) => ({\n      ...provided,\n    }),\n  }\n\n  render() {\n    const selectedOption = SimsOptions[this.props.nSims.toString()]\n\n    return (\n      <span style={{width: 150}}>\n        <Select\n          styles={this.customStyles}\n          value={selectedOption}\n          onChange={this.handleChange}\n          options={this.options}\n        />\n      </span>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport css from './SettingsButtons.module.css'\n\nexport default class SettingsButtons extends Component {\n\n  render() {\n    return <div>\n    <a \n      href=\"?reset=true\"\n      title=\"Reset application data\"\n      rel=\"noopener noreferrer\"\n    >\n      <button className={css.button}><FontAwesomeIcon icon=\"trash-restore\"/></button>\n    </a>\n    </div>\n  }\n\n}\n","import React, { Component } from 'react'\nimport ReactSwitch from 'react-switch'\n\nimport css from './CheckboxGroup.module.css'\n\nexport default class CheckboxGroup extends Component {\n\n  catsChartChange(checked) {\n    this.props.setCatsChart(checked)\n  }\n\n  catsTableChange(checked) {\n    this.props.setCatsTable(checked)\n  }\n\n  playersChartChange(checked) {\n    this.props.setPlayersChart(checked)\n  }\n\n  playersTableChange(checked) {\n    this.props.setPlayersTable(checked)\n  }\n\n  combosTableChange(checked) {\n    this.props.setCombosTable(checked)\n  }\n\n  denseKeyboardChange(checked) {\n    this.props.setDenseKeyboard(checked)\n  }\n\n  playersButtonsChange(checked) {\n    this.props.setPlayersButtons(checked)\n  }\n  \n  devModeChange(checked) {\n    this.props.setDevMode(checked)\n  }\n\n  latencyChange(checked) {\n    this.props.setLatency(checked)\n  }\n\n  render() {\n    const props = this.props\n    const switchHeight = 20\n    const switchWidth = 40\n\n    return (\n      <table>\n        <tbody>\n        <tr>\n          <td className={css.right}>\n            Players Chart:\n          </td>\n          <td>\n            <ReactSwitch className={css.switch} onChange={this.playersChartChange.bind(this)} height={switchHeight} width={switchWidth} checked={props.playersChart}/>\n          </td>\n        </tr>\n        <tr>\n          <td className={css.right}>\n            Players Table:\n          </td>\n          <td>\n            <ReactSwitch className={css.switch} onChange={this.playersTableChange.bind(this)} height={switchHeight} width={switchWidth} checked={props.playersTable}/>\n          </td>\n        </tr>\n        <tr>\n          <td className={css.right}>\n            Categories Chart:\n          </td>\n          <td>\n            <ReactSwitch className={css.switch} onChange={this.catsChartChange.bind(this)} height={switchHeight} width={switchWidth} checked={props.catsChart}/>\n          </td>\n        </tr>\n        <tr>\n          <td className={css.right}>\n            Categories Table:\n          </td>\n          <td>\n            <ReactSwitch className={css.switch} onChange={this.catsTableChange.bind(this)} height={switchHeight} width={switchWidth} checked={props.catsTable}/>\n          </td>\n        </tr>\n        <tr>\n          <td className={css.right}>\n            Combos Table:\n          </td>\n          <td>\n            <ReactSwitch className={css.switch} onChange={this.combosTableChange.bind(this)} height={switchHeight} width={switchWidth} checked={props.combosTable}/>\n          </td>\n        </tr>\n        <tr>\n          <td className={css.right}>\n            Dense Keyboard:\n          </td>\n          <td>\n            <ReactSwitch className={css.switch} onChange={this.denseKeyboardChange.bind(this)} height={switchHeight} width={switchWidth} checked={props.denseKeyboard}/>\n          </td>\n        </tr>\n        <tr>\n          <td className={css.right}>\n            Players Buttons:\n          </td>\n          <td>\n            <ReactSwitch className={css.switch} onChange={this.playersButtonsChange.bind(this)} height={switchHeight} width={switchWidth} checked={props.playersButtons}/>\n          </td>\n        </tr>\n        <tr>\n          <td className={css.right}>\n            Dev Mode:\n          </td>\n          <td>\n            <ReactSwitch className={css.switch} onChange={this.devModeChange.bind(this)} height={switchHeight} width={switchWidth} checked={props.devMode}/>\n          </td>\n        </tr>\n        <tr>\n          <td className={css.right}>\n            Show Latency:\n          </td>\n          <td>\n            <ReactSwitch className={css.switch} onChange={this.latencyChange.bind(this)} height={switchHeight} width={switchWidth} checked={props.latency}/>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    )\n  }\n}\n","export default function getBrowserName() {\n    const names = [\"Edge\", \"Firefox\", \"Safari\", \"Chrome\", \"Opera\"]\n    const ua = navigator.userAgent\n\n    for(let n = names.length - 1; n >= 0; n--) {\n        const name = names[n]\n        const i = ua.indexOf(name)\n        if(i >= 0) {\n            let j = i + name.length\n            let k = j\n            if(ua[j] === '/') {\n                j++\n                k = ua.indexOf(' ', j)\n                if(k < 0) {\n                    k = ua.length\n                }\n            }\n            return name + \" \" + ua.substring(j, k)\n        }\n    }\n\n    return \"Unknown\"\n}\n","import getBrowserName from './getBrowserName'\n\nfunction hasAsync() {\n    try {\n        // eslint-disable-next-line no-new-func\n        new Function('async () => {}')();\n    } catch (error) {\n        return false\n    }\n\n    return true\n}\n\nexport default function getBrowserFeatures() {\n    const bf = {\n        name: getBrowserName(),\n        language: navigator.language,\n        platform: navigator.platform,\n        hasAsync: hasAsync(),\n        abortController: !!window.AbortController,\n        webWorker: !!window.Worker,\n        webAssembly: typeof WebAssembly === \"object\",\n    }\n\n    bf.isOutdatedBrowser = !(bf.hasAsync &&\n        bf.abortController &&\n        bf.webWorker &&\n        bf.webAssembly)\n\n    return bf\n}\n","import React, { Component } from 'react'\n\nimport isMobileDevice from '../../utils/isMobileDevice'\nimport getBrowserFeatures from '../../utils/getBrowserFeatures'\nimport Category from \"./Category\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport '../Table/Table.css'\n\nexport default class BrowserFeatures extends Component {\n    isMobileDevice\n    browserFeatures\n\n    constructor(props) {\n        super(props)\n        this.isMobileDevice = isMobileDevice()\n        this.browserFeatures = getBrowserFeatures()\n    }\n\n    render() {\n        return (<div>\n            {this.browserFeatures.isOutdatedBrowser ? \n            <div>\n                <Category style={{height: 36}} cat=\"error\">\n                    <FontAwesomeIcon color=\"red\" icon=\"exclamation-triangle\"/>\n                    &nbsp;\n                    Missing Critical Features\n                    &nbsp;\n                    <FontAwesomeIcon color=\"red\" icon=\"exclamation-triangle\"/>\n                    <br/>\n                    Please Update Your Web Browser\n                </Category>\n                <br/>\n                <br/>\n            </div> : null}\n            <table className=\"minimalistBlack\">\n                <thead>\n                    <tr>\n                        <th className=\"center\">\n                            Feature\n                        </th>\n                        <th className=\"center\">\n                            Value\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td className=\"right\">\n                            name:\n                        </td>\n                        <td className=\"center\">\n                            {this.browserFeatures.name}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"right\">\n                            language:\n                        </td>\n                        <td className=\"center\">\n                            {this.browserFeatures.language}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"right\">\n                            platform:\n                        </td>\n                        <td className=\"center\">\n                            {this.browserFeatures.platform}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"right\">\n                            mobile:\n                        </td>\n                        <td className=\"center\">\n                            {this.isMobileDevice?\"Yes\":\"No\"}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"right\">\n                            async/await:\n                        </td>\n                        <td className=\"center\">\n                            {this.browserFeatures.hasAsync?<FontAwesomeIcon color=\"green\" icon=\"check\"/>:<FontAwesomeIcon color=\"red\" icon=\"exclamation-triangle\"/>}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"right\">\n                            abort controller:\n                        </td>\n                        <td className=\"center\">\n                            {this.browserFeatures.abortController?<FontAwesomeIcon color=\"green\" icon=\"check\"/>:<FontAwesomeIcon color=\"red\" icon=\"exclamation-triangle\"/>}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"right\">\n                            web worker:\n                        </td>\n                        <td className=\"center\">\n                            {this.browserFeatures.webWorker?<FontAwesomeIcon color=\"green\" icon=\"check\"/>:<FontAwesomeIcon color=\"red\" icon=\"exclamation-triangle\"/>}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"right\">\n                            web assembly:\n                        </td>\n                        <td className=\"center\">\n                            {this.browserFeatures.webAssembly?<FontAwesomeIcon color=\"green\" icon=\"check\"/>:<FontAwesomeIcon color=\"red\" icon=\"exclamation-triangle\"/>}\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n\n        </div>)\n    }\n}\n","import React, { Component } from 'react'\n\nimport ApiSetting from './components/ApiSetting'\nimport ServerUrlSetting from './components/ServerUrlSetting'\nimport JwtSecretSetting from './components/JwtSecretSetting'\nimport ThreadsSetting from './components/ThreadsSetting'\nimport CalcSetting from './components/CalcSetting'\nimport WorkersSetting from './components/WorkersSetting'\nimport SimsSetting from './components/SimsSetting'\nimport SettingsButtons from './components/SettingsButtons'\nimport CheckboxGroup from './components/CheckboxGroup'\n\nimport BrowserFeatures from '../components/BrowserFeatures'\n\nexport default class SettingsPage extends Component {\n\n  render() {\n    const props = this.props\n\n    return (\n    <div>\n    <h3>\n      Settings\n    </h3>\n    <h4>\n    <table>\n      <tbody>\n        <tr>\n          <td style={{textAlign: \"right\"}}>\n            Poser Engine:&nbsp;\n          </td>\n          <td>\n            <ApiSetting {...props}/>\n          </td>\n        </tr>\n        {this.props.apiType === \"rest\"?\n        <>\n        <tr>\n          <td style={{textAlign: \"right\"}}>\n            Server URL:&nbsp;\n          </td>\n          <td>\n            <ServerUrlSetting {...props}/>\n         </td>\n        </tr>\n        <tr>\n          <td style={{textAlign: \"right\"}}>\n            JWT Secret:&nbsp;\n          </td>\n          <td>\n            <JwtSecretSetting {...props}/>\n         </td>\n        </tr>\n        <tr>\n          <td style={{textAlign: \"right\"}}>\n            Server Threads:&nbsp;\n          </td>\n          <td>\n            <ThreadsSetting {...props}/>\n          </td>\n        </tr>\n        </>:null}\n        <tr>\n          <td style={{textAlign: \"right\"}}>\n            Calculator:&nbsp;\n          </td>\n          <td>\n            <CalcSetting {...props}/>\n          </td>\n        </tr>\n        <tr>\n          <td style={{textAlign: \"right\"}}>\n            Simulations:&nbsp;\n          </td>\n          <td>\n            <SimsSetting {...props}/>\n          </td>\n        </tr>\n        <tr>\n          <td style={{textAlign: \"right\"}}>\n            Workers:&nbsp;\n          </td>\n          <td>\n            <WorkersSetting {...props}/>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    </h4>\n    <h3>\n      Options\n    </h3>\n    <h4>\n      <CheckboxGroup {...props}/>\n    </h4>\n    <h3>\n      Browser Features\n    </h3>\n    <h4>\n      <BrowserFeatures/>\n    </h4>\n    <h3>\n      Clear Saved Data\n    </h3>\n    <h4>\n      <SettingsButtons/>\n    </h4>\n    </div>\n  )\n  }\n}\n","import React from 'react'\n\nconst CreditsPage = (props) => (\n  <div>\n    <h2>Links</h2>\n    <h3><a href=\"https://poserjs.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">PoserJS Online</a></h3>\n    <h3><a href=\"https://github.com/poserjs/poserjs.github.io/wiki\" target=\"_blank\" rel=\"noopener noreferrer\">PoserJS Wiki</a></h3>\n    <h3><a href=\"https://github.com/poserjs/poserjs.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">PoserJS Github</a></h3>\n    <h2>Credits</h2>\n    <h3><a href=\"https://facebook.github.io/create-react-app/\" target=\"_blank\" rel=\"noopener noreferrer\">Create React App</a></h3>\n    <h3><a href=\"https://fontawesome.com\" target=\"_blank\" rel=\"noopener noreferrer\">Font Awesome</a></h3>\n  </div>\n)\n\nexport default CreditsPage\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport ReactJson from 'react-json-view'\n\nimport './TimeMachinePage.css'\n\n// App component - represents the whole app\nexport default class TimeMachinePage extends Component {\n  render() {\n\n    const { state, action, repo, showRepo } = this.props;\n\n    return (\n      <div>\n        <header>\n          <h2>State Inspector</h2>\n        </header>\n        <div className=\"TimeMachinePage-body\">\n        {showRepo\n        ?[\n          <h4 key={1}>Repository</h4>,\n          <ReactJson key={2} name={false} src={repo.toJS()} />]\n        :[\n        <h4 key={1}>Action</h4>,\n        <ReactJson key={2} name={false} src={action} />,\n        <h4 key={3}>State</h4>,\n        <ReactJson key={4} name={false} src={state.toJS()} />]\n        }\n        </div>\n      </div>\n    )\n  }\n}\n\nTimeMachinePage.propTypes = {\n  state: PropTypes.object,\n  prevState: PropTypes.object,\n  action: PropTypes.object,\n}\n","import { connect } from 'react-redux'\nimport TimeMachinePage from './TimeMachinePage'\n\nconst mapStateToProps = (repo, ownProps) => {\n  const e = ownProps.engine;\n  const branch = e.currentBranchState(repo);\n  const currentIndex = branch.get(\"currentIndex\");\n  const states = branch.get(\"states\");\n  const state = currentIndex < 0 ? undefined : states.get(currentIndex);\n  const actions = branch.get(\"actions\");\n  const action = currentIndex < 0 ? undefined : actions.get(currentIndex);\n  const prevState = currentIndex <= 0 ? undefined : states.get(currentIndex - 1);\n  const showRepo = repo.getIn(['options', 'showRepo']);\n  return {\n    prevState: e.printableState(prevState),\n    state: e.printableState(state),\n    action,\n    repo,\n    showRepo,\n  };\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n})\n\nconst TimeMachineContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TimeMachinePage)\n\nexport default TimeMachineContainer\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport './TimeMachineControls.css'\n\nexport default class TimeMachineControls extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentBranch: props.currentBranch,\n      live: props.live,\n      advanced: false,\n      showRepo: props.showRepo,\n      saveAs: \"\",\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      currentBranch: nextProps.currentBranch,\n      live: nextProps.live,\n      showRepo: nextProps.showRepo,\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault()\n  }\n\n  onChange(e) {\n    this.setState({[e.target.name]: e.target.value})\n  }\n\n  onChangeBranch(e) {\n    const { switchBranch } = this.props\n    const currentBranch = e.target.value\n    this.setState({currentBranch: currentBranch})\n    switchBranch(currentBranch)\n  }\n\n  onSaveBranch(e) {\n    const { saveBranch } = this.props\n    if(this.state.saveAs) {\n      saveBranch(this.state.saveAs)\n    }\n    this.setState({\"saveAs\": \"\"})\n  }\n\n  onReset(e) {\n    const { currentBranch, resetBranch } = this.props\n    resetBranch(currentBranch)\n  }\n\n  onRemove(e) {\n    const { currentBranch, removeBranch } = this.props\n    removeBranch(currentBranch)\n  }\n\n  onGoFastForward(e) {\n    const { goForward } = this.props\n    goForward(10)\n  }\n\n  onGoForward(e) {\n    const { goForward } = this.props\n    goForward(1)\n  }\n\n  onGoBack(e) {\n    const { goBack } = this.props\n    goBack(1)\n  }\n\n  onGoFastBack(e) {\n    const { goBack } = this.props\n    goBack(10)\n  }\n\n  onGoLive(e) {\n    const { goLive } = this.props\n    goLive()\n  }\n\n  toggleLive(e) {\n    const { goBack, goLive } = this.props\n    const live = !this.state.live\n    this.setState({live: live})\n    if(live) {\n      goLive()\n    } else {\n      goBack(0)\n    }\n  }\n\n  toggleAdvanced(e) {\n    const advanced = !this.state.advanced\n    this.setState({advanced: advanced})\n  }\n\n  toggleRepo(e) {\n    const { doShowRepo } = this.props\n    const showRepo = !this.state.showRepo\n    this.setState({showRepo: showRepo})\n    doShowRepo(showRepo)\n  }\n\n  onSliderChange(value) {\n    const { goForward, goBack, currentIndex } = this.props\n    const index = value - 1;\n    if(index > currentIndex) {\n      goForward(index-currentIndex);\n    } else if(index < currentIndex) {\n      goBack(currentIndex-index);\n    }\n  }\n\n  render() {\n    const { branches, currentIndex, maxIndex } = this.props\n    let input\n\n    return (\n      <div>\n      <form onSubmit={this.onSubmit.bind(this)}>\n        <button onClick={this.toggleLive.bind(this)} title={this.state.live?\"Time Machine On\":\"Time Machine Off\"}>\n        {this.state.live \n        ? <FontAwesomeIcon icon=\"history\"/>\n        : <FontAwesomeIcon icon=\"play\"/>}\n        </button>\n        <button onClick={this.toggleAdvanced.bind(this)} title={this.state.advanced ? \"Advanced Mode Off\" : \"Advanced Mode On\"}>\n          {this.state.advanced ? <b>&#x2630;</b> : <span>&#x2630;</span>}\n        </button>\n        &nbsp;\n        {this.state.advanced ? [\n          <button key={1} onClick={this.toggleRepo.bind(this)} title={this.state.showRepo?\"Show State\":\"Show Repo\"}>\n          {this.state.showRepo \n          ? <FontAwesomeIcon key={2} icon=\"genderless\"/>\n          : <FontAwesomeIcon key={2} icon=\"code-branch\"/>}\n          </button>,         \n          <select key={3} \n            name=\"currentBranch\"\n            value={this.state.currentBranch}\n            onChange={this.onChangeBranch.bind(this)}\n            title=\"Change Branch\"\n          >\n            {branches.map((branch, id) =>\n              (<option key={id} value={branch}>{branch}</option>)\n            ).toIndexedSeq()}\n        </select>] : null }\n        <button onClick={this.onGoBack.bind(this)} title=\"Go Back\">\n          &lt;\n        </button>\n        &nbsp;{currentIndex+1} / {maxIndex+1}&nbsp;\n        <button onClick={this.onGoForward.bind(this)} title=\"Go Forward\">\n          &gt;\n        </button>\n        {this.state.advanced ?\n        <span>\n        <input\n          name=\"saveAs\"\n          size=\"8\"\n          value={this.state.saveAs}\n          onChange={this.onChange.bind(this)}/>\n        <button onClick={this.onSaveBranch.bind(this)} title=\"Save Branch\"\n          disabled={!this.state.saveAs}>\n          Save\n        </button>\n        <button onClick={this.onReset.bind(this)} title=\"Reset Branch\">\n          Reset\n        </button>\n        <button onClick={this.onRemove.bind(this)} title=\"Remove Branch\">\n          Remove\n        </button>\n        </span> : null}\n      </form>\n      {this.state.live ? null : <div className=\"TimeMachineControls-slider\"><Slider\n        min={1}\n        max={maxIndex+1}\n        value={currentIndex+1}\n        step={1}\n        onChange={this.onSliderChange.bind(this)}\n      />\n      </div>}\n      </div>\n    )\n  }\n}\n\nTimeMachineControls.propTypes = {\n  currentBranch: PropTypes.string.isRequired,\n  currentIndex: PropTypes.number.isRequired,\n  maxIndex: PropTypes.number.isRequired,\n  live: PropTypes.bool.isRequired,\n  branches: PropTypes.object.isRequired,\n  goBack: PropTypes.func.isRequired,\n  goForward: PropTypes.func.isRequired,\n  goLive: PropTypes.func.isRequired,\n  switchBranch: PropTypes.func.isRequired,\n  saveBranch: PropTypes.func.isRequired,\n  resetBranch: PropTypes.func.isRequired,\n  removeBranch: PropTypes.func.isRequired,\n}\n","import { connect } from 'react-redux'\nimport TimeMachineControls from './TimeMachineControls'\n\nconst mapStateToProps = (repo, ownProps) => {\n  const currentBranch = repo.get(\"currentBranch\")\n  const branches = repo.get(\"branches\")\n  const branch = branches.get(currentBranch);\n  const live = branch.get(\"live\")\n  const showRepo = repo.getIn([\"options\", \"showRepo\"]);\n  const currentIndex = branch.get(\"currentIndex\")\n  const states = branch.get(\"states\")\n  const maxIndex = states.size-1\n  return {\n    branches: branches.keySeq(),\n    currentBranch,\n    currentIndex,\n    maxIndex,\n    live,\n    showRepo,\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const e = ownProps.engine\n  const af = e.actionFactory()\n  \n  return {\n    goForward: (steps) => {\n      const action = af.goForward(steps)\n      dispatch(action)\n    },\n    goBack: (steps) => {\n      const action = af.goBack(steps)\n      dispatch(action)\n    },\n    goLive: () => {\n      const action = af.goLive()\n      dispatch(action)\n    },\n    doShowRepo: (showRepo) => {\n      const action = af.setOption(\"showRepo\", showRepo)\n      dispatch(action)\n    },\n    switchBranch: (name) => {\n      const action = af.switchBranch(name)\n      dispatch(action)\n    },\n    saveBranch: (name) => {\n      const action = af.saveBranch(name)\n      dispatch(action)\n    },\n    resetBranch: (name) => {\n      const action = af.resetBranch(name)\n      dispatch(action)\n    },\n    removeBranch: (name) => {\n      if(name === \"master\") {\n        return\n      }\n      const action1 = af.switchBranch(\"master\")\n      dispatch(action1)\n      const action2 = af.removeBranch(name)\n      dispatch(action2)\n    }\n  }\n}\n\nconst TimeMachineControlsContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TimeMachineControls)\n\nexport default TimeMachineControlsContainer\n","import React, {Component} from 'react'\n\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs'\n\nimport HomeContainer from '../Home/HomeContainer'\nimport HomePage from '../Home/HomePage'\nimport SettingsContainer from '../Settings/SettingsContainer'\nimport SettingsPage from '../Settings/SettingsPage'\nimport CreditsPage from '../Credits/CreditsPage'\n\nimport TimeMachineContainer from '../TimeMachine/TimeMachineContainer'\nimport TimeMachineControlsContainer from '../TimeMachineControls/TimeMachineControlsContainer';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport 'react-tabs/style/react-tabs.css'\n\nimport './Menu.css'\n\nconst HomeTab = HomeContainer(HomePage)\nconst SettingsTab = SettingsContainer(SettingsPage)\n\nexport default class Menu extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selectedTabIndex: this.props.state.get(\"selectedTabIndex\"),\n    }\n  }\n\n  updateTabIndex(index) {\n    this.setState({selectedTabIndex: index})\n    this.props.updateTabIndex(index)\n  }\n\n  render() {\n    const devMode = this.props.state.getIn([\"home\", \"settings\", \"devMode\"])\n  return <Tabs \n    selectedTabClassName=\"react-tabs__tab--selected Menu-selected\"\n    selectedIndex={this.state.selectedTabIndex}\n    onSelect={this.updateTabIndex.bind(this)}\n    >\n    <TabList className=\"Menu\">\n      <Tab title=\"Hands\"><FontAwesomeIcon icon=\"calculator\"/></Tab>\n      {/* <Tab title=\"Sim\"><FontAwesomeIcon icon=\"tachometer-alt\"/></Tab> */}\n      <Tab title=\"Settings\"><FontAwesomeIcon icon=\"cog\"/></Tab>\n      <Tab title=\"Links & Credits\"><FontAwesomeIcon icon=\"info\"/></Tab>\n      {devMode?<Tab title=\"State Inspector\"><FontAwesomeIcon icon=\"bug\"/></Tab>:null}\n    </TabList>\n    <hr/>\n    <TabPanel>\n      <HomeTab/>\n    </TabPanel>\n    {/* <TabPanel>\n      <SettingsTab/>\n    </TabPanel> */}\n    <TabPanel>\n      <SettingsTab/>\n    </TabPanel>\n    <TabPanel>\n      <CreditsPage/>\n    </TabPanel>\n    {/* <TabPanel>\n      <TimeMachineControlsContainer engine={this.props.engine}/>\n      <TimeMachineContainer engine={this.props.engine}/>\n    </TabPanel> */}\n    {devMode?<TabPanel>\n      <TimeMachineControlsContainer engine={this.props.engine}/>\n      <TimeMachineContainer engine={this.props.engine}/>\n    </TabPanel>:null}\n  </Tabs>\n  }\n}\n","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faWifi } from '@fortawesome/free-solid-svg-icons'\nimport { faHeart } from '@fortawesome/free-solid-svg-icons'\nimport { faHeart as farHeart } from '@fortawesome/free-regular-svg-icons'\nimport { faHeartbeat } from '@fortawesome/free-solid-svg-icons'\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons'\nimport { faThumbsUp } from '@fortawesome/free-solid-svg-icons'\nimport { faHome } from '@fortawesome/free-solid-svg-icons'\nimport { faTerminal } from '@fortawesome/free-solid-svg-icons'\nimport { faChartLine } from '@fortawesome/free-solid-svg-icons'\nimport { faTachometerAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faInfo } from '@fortawesome/free-solid-svg-icons'\nimport { faMicrochip } from '@fortawesome/free-solid-svg-icons'\nimport { faTrophy } from '@fortawesome/free-solid-svg-icons'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\nimport { faMinus } from '@fortawesome/free-solid-svg-icons'\nimport { faHandPaper } from '@fortawesome/free-solid-svg-icons'\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\nimport { faBackspace } from '@fortawesome/free-solid-svg-icons'\nimport { faCalculator } from '@fortawesome/free-solid-svg-icons'\nimport { faPercent } from '@fortawesome/free-solid-svg-icons'\nimport { faSmile } from '@fortawesome/free-solid-svg-icons'\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\nimport { faUserMinus } from '@fortawesome/free-solid-svg-icons'\nimport { faUserPlus } from '@fortawesome/free-solid-svg-icons'\nimport { faRandom } from '@fortawesome/free-solid-svg-icons'\n\nimport { faSyncAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faToggleOn } from '@fortawesome/free-solid-svg-icons'\nimport { faToggleOff } from '@fortawesome/free-solid-svg-icons'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faFilter } from '@fortawesome/free-solid-svg-icons'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport { faSearchMinus } from '@fortawesome/free-solid-svg-icons'\nimport { faSearchPlus } from '@fortawesome/free-solid-svg-icons'\nimport { faArrowsAltH } from '@fortawesome/free-solid-svg-icons'\nimport { faPlay } from '@fortawesome/free-solid-svg-icons'\nimport { faStop } from '@fortawesome/free-solid-svg-icons'\nimport { faEllipsisH } from '@fortawesome/free-solid-svg-icons'\nimport { faRunning } from '@fortawesome/free-solid-svg-icons'\nimport { faTh } from '@fortawesome/free-solid-svg-icons'\nimport { faGripVertical } from '@fortawesome/free-solid-svg-icons'\nimport { faGripHorizontal } from '@fortawesome/free-solid-svg-icons'\nimport { faBug } from '@fortawesome/free-solid-svg-icons'\nimport { faHistory } from '@fortawesome/free-solid-svg-icons'\nimport { faCodeBranch } from '@fortawesome/free-solid-svg-icons'\nimport { faGenderless } from '@fortawesome/free-solid-svg-icons'\nimport { faTable } from '@fortawesome/free-solid-svg-icons'\nimport { faListUl } from '@fortawesome/free-solid-svg-icons'\nimport { faBookMedical } from '@fortawesome/free-solid-svg-icons'\nimport { faPalette } from '@fortawesome/free-solid-svg-icons'\nimport { faCog } from '@fortawesome/free-solid-svg-icons'\nimport { faGolfBall } from '@fortawesome/free-solid-svg-icons'\nimport { faBowlingBall } from '@fortawesome/free-solid-svg-icons'\nimport { faTrashRestore } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faWifi)\nlibrary.add(faHeart)\nlibrary.add(farHeart)\nlibrary.add(faHeartbeat)\nlibrary.add(faExclamationTriangle)\nlibrary.add(faThumbsUp)\nlibrary.add(faHome)\nlibrary.add(faTerminal)\nlibrary.add(faChartLine)\nlibrary.add(faTachometerAlt)\nlibrary.add(faInfo)\nlibrary.add(faMicrochip)\nlibrary.add(faTrophy)\nlibrary.add(faPlus)\nlibrary.add(faMinus)\nlibrary.add(faHandPaper)\nlibrary.add(faCheck)\nlibrary.add(faBackspace)\nlibrary.add(faCalculator)\nlibrary.add(faPercent)\nlibrary.add(faSmile)\nlibrary.add(faUser)\nlibrary.add(faUserMinus)\nlibrary.add(faUserPlus)\nlibrary.add(faRandom)\n\nlibrary.add(faSyncAlt)\nlibrary.add(faToggleOn)\nlibrary.add(faToggleOff)\nlibrary.add(faTrashAlt)\nlibrary.add(faFilter)\nlibrary.add(faSearch)\nlibrary.add(faSearchMinus)\nlibrary.add(faSearchPlus)\nlibrary.add(faArrowsAltH)\nlibrary.add(faPlay)\nlibrary.add(faStop)\nlibrary.add(faEllipsisH)\nlibrary.add(faRunning)\nlibrary.add(faTh)\nlibrary.add(faGripVertical)\nlibrary.add(faGripHorizontal)\nlibrary.add(faBug)\nlibrary.add(faHistory)\nlibrary.add(faCodeBranch)\nlibrary.add(faGenderless)\nlibrary.add(faTable)\nlibrary.add(faListUl)\nlibrary.add(faBookMedical)\nlibrary.add(faPalette)\nlibrary.add(faCog)\nlibrary.add(faGolfBall)\nlibrary.add(faBowlingBall)\nlibrary.add(faTrashRestore)\n","import React, { Component } from 'react'\n\nimport Banner from './components/Banner'\nimport Menu from '../Menu/Menu'\n\nimport './components/Icons'\nimport './AppPage.css'\n\nclass AppPage extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <Banner/>\n        </div>\n        <Menu {...this.props}/>\n      </div>\n    )\n  }\n}\n\nexport default AppPage\n","import { connect } from 'react-redux'\nimport { engine } from '../../engine'\nimport AppPage from './AppPage'\n\n\nconst e = engine\nconst af = e.actionFactory();\n\nconst mapStateToProps = (state, live, ownProps) => ({\n  state,\n  live,\n})\n\nconst mapRepoToProps = (repo, ownProps) => mapStateToProps(ownProps.engine.head(repo), ownProps.engine.live(repo), ownProps)\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    updateTabIndex: (index) => dispatch(af.value(\"selectedTabIndex\", index)),\n})\n\nconst AppContainer = connect(\n  mapRepoToProps,\n  mapDispatchToProps\n)(AppPage)\n\nexport default AppContainer\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport { store, engine } from './engine'\nimport './index.css';\nimport AppContainer from './modules/App/AppContainer';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppContainer engine={engine}/>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"square\":\"Card_square__eAkJW\",\"htmlSquare\":\"Card_htmlSquare__2vwOq\",\"htmlSquareMobile\":\"Card_htmlSquareMobile__RrZb0\",\"ball\":\"Card_ball__5lM5L\",\"htmlBall\":\"Card_htmlBall__31wpT\"};"],"sourceRoot":""}